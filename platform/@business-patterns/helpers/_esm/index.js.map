{"version":3,"sources":["../../src/index.js"],"names":["useState","useEffect","useRef","cloneElement","resolveGoogleMapsApiKey","process","env","STORYBOOK_GOOGLE_MAPS_API_KEY","isValueOption","value","isString","code","name","id","displayName","mapValuesToOptions","values","every","toLowerCase","isVisible","condition","undefined","stateDecoratorFactory","valueName","callbackName","story","args","argsValue","setValue","onValueChange","newValue","isFirstRun","current"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,YAAtC,QAA0D,OAA1D;;AAGA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,SACnCC,OAAO,CAACC,GAAR,CAAYC,6BADuB;AAAA,CAAhC;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAClC,SACI,CAACC,QAAQ,CAACD,KAAD,CAAT,KACE,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,IAAP,MAAeF,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEG,IAAtB,CAAD,IAAiC,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,EAAP,MAAaJ,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAEK,WAApB,CADlC,CADJ;AAIH,CALM;AAOP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM;AAAA,SACnCA,MAAM,CAACC,KAAP,CAAaT,aAAb,KAA+BQ,MAAhC,IACA,qBAAAA,MAAM,MAAN,CAAAA,MAAM,EAAK,UAAAP,KAAK;AAAA,WAAK;AAAEE,MAAAA,IAAI,EAAEF,KAAK,CAACS,WAAN,EAAR;AAA6BN,MAAAA,IAAI,EAAEH;AAAnC,KAAL;AAAA,GAAV,CAF8B;AAAA,CAAjC;AAIP,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA,MAACC,SAAD,uEAAa,IAAb;AAAA,SAAuBA,SAAS,GAAGC,SAAH,GAAe,KAA/C;AAAA,CAAlB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAYC,YAAZ;AAAA,SAA6B,UAC9DC,KAD8D,QAG7D;AAAA,QADCC,IACD,QADCA,IACD;AACD,QAAMC,SAAS,GAAGD,IAAI,CAACH,SAAD,CAAtB;;AACA,oBAA0BvB,QAAQ,CAAC2B,SAAD,CAAlC;AAAA;AAAA,QAAOlB,KAAP;AAAA,QAAcmB,QAAd;;AAEA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ,EAAI;AAC9BF,MAAAA,QAAQ,CAACE,QAAD,CAAR;AAEAJ,MAAAA,IAAI,CAACF,YAAD,CAAJ,CAAmBM,QAAnB;AACH,KAJD;;AAMA,QAAMC,UAAU,GAAG7B,MAAM,CAAC,IAAD,CAAzB;AACAD,IAAAA,SAAS,CAAC,YAAM;AACZ,UAAI8B,UAAU,CAACC,OAAf,EAAwB;AACpBD,QAAAA,UAAU,CAACC,OAAX,GAAqB,KAArB;AACA;AACH;;AACDJ,MAAAA,QAAQ,CAACD,SAAD,CAAR;AACH,KANQ,EAMN,CAACA,SAAD,CANM,CAAT;AAQA,WAAOxB,YAAY,CAACsB,KAAK,EAAN,EAAU;AACzB,OAACF,SAAD,GAAad,KADY;AAEzB,OAACe,YAAD,GAAgBK;AAFS,KAAV,CAAnB;AAIH,GA1BoC;AAAA,CAA9B","sourcesContent":["import { useState, useEffect, useRef, cloneElement } from 'react';\nimport { isString } from 'lodash/fp';\n\nexport const resolveGoogleMapsApiKey = () =>\n    process.env.STORYBOOK_GOOGLE_MAPS_API_KEY;\n\nexport const isValueOption = value => {\n    return (\n        !isString(value) &&\n        ((value?.code && value?.name) || (value?.id && value?.displayName))\n    );\n};\n\nexport const mapValuesToOptions = values =>\n    (values.every(isValueOption) && values) ||\n    values.map(value => ({ code: value.toLowerCase(), name: value }));\n\nexport const isVisible = (condition = true) => (condition ? undefined : false);\n\nexport const stateDecoratorFactory = (valueName, callbackName) => (\n    story,\n    { args }\n) => {\n    const argsValue = args[valueName];\n    const [value, setValue] = useState(argsValue);\n\n    const onValueChange = newValue => {\n        setValue(newValue);\n\n        args[callbackName](newValue);\n    };\n\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if (isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        setValue(argsValue);\n    }, [argsValue]);\n\n    return cloneElement(story(), {\n        [valueName]: value,\n        [callbackName]: onValueChange,\n    });\n};\n"],"file":"index.js"}