{"version":3,"sources":["../../../src/columns/StatusColumn.js"],"names":["React","InfoLabel","DisplayColumn","StatusColumn","__DEV__","Error","defaultCell","row","rowId","id","path","visible","statusMap","value","get","infoType","displayName","defaultProps","renderCell"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,MAAIC,OAAJ,EAAa;AACT,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACH;;AACD,SAAO,oBAAC,KAAD,CAAO,QAAP,OAAP;AACH,CALM;;AAOPF,YAAY,CAACG,WAAb,GAA2B,UAACC,GAAD,EAAMC,KAAN,QAAkD;AAAA;;AAAA,MAAnCC,EAAmC,QAAnCA,EAAmC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AACzE,MAAID,OAAO,KAAK,KAAhB,EAAuB;AACnB,WAAO,IAAP;AACH;;AAED,MAAME,KAAK,GAAGC,GAAG,CAACP,GAAD,EAAMG,IAAN,CAAjB;;AAEA,MAAI,CAACG,KAAL,EAAY;AACR,WAAOX,aAAa,CAACI,WAAd,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;AAAEC,MAAAA,EAAE,EAAFA,EAAF;AAAMC,MAAAA,IAAI,EAAJA;AAAN,KAAtC,CAAP;AACH;;AAED,MAAMK,QAAQ,uBAAGH,SAAS,CAACC,KAAD,CAAZ,+DAAuB,MAArC;AACA,SACI,iCACI,oBAAC,SAAD;AAAW,IAAA,EAAE,+CAAKJ,EAAL,uBAAWD,KAAX,CAAb;AAAiC,IAAA,IAAI,EAAEO;AAAvC,KACKF,KADL,CADJ,CADJ;AAOH,CAnBD;;AAqBAV,YAAY,CAACa,WAAb,GAA2B,cAA3B;AAEAb,YAAY,CAACc,YAAb,mCACOf,aAAa,CAACe,YADrB;AAEIL,EAAAA,SAAS,EAAE,EAFf;AAGIM,EAAAA,UAAU,EAAEf,YAAY,CAACG;AAH7B","sourcesContent":["import React from 'react';\nimport { get } from 'lodash';\nimport { InfoLabel } from '@jutro/components';\nimport { DisplayColumn } from '@jutro/datatable';\n\nexport const StatusColumn = () => {\n    if (__DEV__) {\n        throw new Error('Component <StatusColumn /> should never render');\n    }\n    return <React.Fragment />;\n};\n\nStatusColumn.defaultCell = (row, rowId, { id, path, visible, statusMap }) => {\n    if (visible === false) {\n        return null;\n    }\n\n    const value = get(row, path);\n\n    if (!value) {\n        return DisplayColumn.defaultCell(row, rowId, { id, path });\n    }\n\n    const infoType = statusMap[value] ?? 'info';\n    return (\n        <div>\n            <InfoLabel id={`${id}_${rowId}`} type={infoType}>\n                {value}\n            </InfoLabel>\n        </div>\n    );\n};\n\nStatusColumn.displayName = 'StatusColumn';\n\nStatusColumn.defaultProps = {\n    ...DisplayColumn.defaultProps,\n    statusMap: {},\n    renderCell: StatusColumn.defaultCell,\n};\n"],"file":"StatusColumn.js"}