{"version":3,"sources":["../../../src/columns/ThumbnailColumn.js"],"names":["React","DisplayColumn","Link","FileImage","styles","ThumbnailColumn","__DEV__","Error","defaultCell","row","rowId","path","visible","onClick","file","get","thumbnailWrapper","thumbnail","displayName","defaultProps","renderCell"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,MAAP;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,MAAIC,OAAJ,EAAa;AACT,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH;;AACD,SAAO,oBAAC,KAAD,CAAO,QAAP,OAAP;AACH,CALM;;AAOPF,eAAe,CAACG,WAAhB,GAA8B,UAACC,GAAD,EAAMC,KAAN,QAA4C;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,OAAc;AACtE,MAAMC,IAAI,GAAGC,GAAG,CAACN,GAAD,EAAME,IAAN,CAAhB;;AAEA,MAAIC,OAAO,KAAK,KAAhB,EAAuB;AACnB,WAAO,IAAP;AACH;;AAED,MAAI,CAACE,IAAL,EAAW;AACP,WAAOb,aAAa,CAACO,WAAd,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;AAAEC,MAAAA,IAAI,EAAJA;AAAF,KAAtC,CAAP;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACY;AAAvB,KAEI,oBAAC,IAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAO,CAACJ,GAAD,EAAMC,KAAN,EAAa;AAAEC,QAAAA,IAAI,EAAJA;AAAF,OAAb,CAAb;AAAA,KADb;AAEI,IAAA,KAAK,EAAC;AAFV,KAII,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEG,IADX;AAEI,IAAA,SAAS,EAAEV,MAAM,CAACa,SAFtB;AAGI,IAAA,UAAU;AAHd,IAJJ,CAFJ,CADJ;AAeH,CA1BD;;AA4BAZ,eAAe,CAACa,WAAhB,GAA8B,iBAA9B;AAEAb,eAAe,CAACc,YAAhB,mCACOlB,aAAa,CAACkB,YADrB;AAEIC,EAAAA,UAAU,EAAEf,eAAe,CAACG;AAFhC","sourcesContent":["import React from 'react';\nimport { get } from 'lodash';\nimport { DisplayColumn } from '@jutro/datatable';\nimport { Link } from '@jutro/components';\nimport { FileImage } from '@business-patterns/components';\nimport styles from './ThumbnailColumn.module.scss';\n\nexport const ThumbnailColumn = () => {\n    if (__DEV__) {\n        throw new Error('Component <ThumbnailColumn /> should never render');\n    }\n    return <React.Fragment />;\n};\n\nThumbnailColumn.defaultCell = (row, rowId, { path, visible, onClick }) => {\n    const file = get(row, path);\n\n    if (visible === false) {\n        return null;\n    }\n\n    if (!file) {\n        return DisplayColumn.defaultCell(row, rowId, { path });\n    }\n\n    return (\n        <div className={styles.thumbnailWrapper}>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <Link\n                onClick={() => onClick(row, rowId, { path })}\n                title=\"Show image\"\n            >\n                <FileImage\n                    value={file}\n                    className={styles.thumbnail}\n                    hideLoader\n                />\n            </Link>\n        </div>\n    );\n};\n\nThumbnailColumn.displayName = 'ThumbnailColumn';\n\nThumbnailColumn.defaultProps = {\n    ...DisplayColumn.defaultProps,\n    renderCell: ThumbnailColumn.defaultCell,\n};\n"],"file":"ThumbnailColumn.js"}