{"version":3,"sources":["../../../src/Card/Card.js"],"names":["React","useContext","TranslatorContext","Button","styles","getStyle","suffix","Card","maxWidth","children","title","id","headerAction","translator","label","displayName","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA,SAAIF,MAAM,wBAAiBE,MAAM,cAAOA,MAAP,IAAkB,EAAzC,EAAV;AAAA,CAAvB;;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,EAAuB,QAAvBA,EAAuB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACrE,MAAMC,UAAU,GAAGZ,UAAU,CAACC,iBAAD,CAA7B;AACA,SACI;AAAK,IAAA,EAAE,EAAES,EAAT;AAAa,IAAA,SAAS,EAAEN,QAAQ,EAAhC;AAAoC,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAARA;AAAF;AAA3C,KACKE,KAAK,IACF,oBAAC,KAAD,CAAO,QAAP,QACI;AAAI,IAAA,SAAS,EAAEL,QAAQ,CAAC,OAAD;AAAvB,KAAmCQ,UAAU,CAACH,KAAD,CAA7C,CADJ,EAEKE,YAAY,IACT,oBAAC,MAAD,eACQA,YADR;AAEI,IAAA,SAAS,EAAEP,QAAQ,CAAC,QAAD;AAFvB,MAIKQ,UAAU,CAACD,YAAY,CAACE,KAAd,CAJf,CAHR,EAUI;AAAI,IAAA,SAAS,EAAET,QAAQ,CAAC,MAAD;AAAvB,IAVJ,CAFR,EAeKI,QAfL,CADJ;AAmBH,CArBM;AAsBPF,IAAI,CAACQ,WAAL,GAAmB,MAAnB;AACAR,IAAI,CAACS,YAAL,GAAoB;AAChBR,EAAAA,QAAQ,EAAE;AADM,CAApB","sourcesContent":["import React, { useContext } from 'react';\nimport { TranslatorContext } from '@jutro/locale';\nimport { Button } from '@jutro/components';\n\nimport styles from './Card.module.scss';\n\nconst getStyle = suffix => styles[`business-card${suffix ? `-${suffix}` : ''}`];\n\nexport const Card = ({ maxWidth, children, title, id, headerAction }) => {\n    const translator = useContext(TranslatorContext);\n    return (\n        <div id={id} className={getStyle()} style={{ maxWidth }}>\n            {title && (\n                <React.Fragment>\n                    <h2 className={getStyle('title')}>{translator(title)}</h2>\n                    {headerAction && (\n                        <Button\n                            {...headerAction}\n                            className={getStyle('action')}\n                        >\n                            {translator(headerAction.label)}\n                        </Button>\n                    )}\n                    <hr className={getStyle('line')} />\n                </React.Fragment>\n            )}\n            {children}\n        </div>\n    );\n};\nCard.displayName = 'Card';\nCard.defaultProps = {\n    maxWidth: 580,\n};\n"],"file":"Card.js"}