module.exports=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="./src/index.js")}({"../../node_modules/css-loader/dist/cjs.js?!../../node_modules/resolve-url-loader/index.js?!../../node_modules/postcss-loader/dist/cjs.js?!../../node_modules/sass-loader/dist/cjs.js?!./src/addressReadOnly/AddressReadonly.module.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(!0)).push([module.i,".jut__AddressReadonly__addressReadonly{white-space:pre-wrap}","",{version:3,sources:["AddressReadonly.module.scss"],names:[],mappings:"AAAA,uCACE,oBAAA",file:"AddressReadonly.module.scss",sourcesContent:[".addressReadonly {\n  white-space: pre-wrap;\n}\n"]}]),exports.locals={addressReadonly:"jut__AddressReadonly__addressReadonly"},module.exports=exports},"../../node_modules/css-loader/dist/runtime/api.js":function(module,exports,__webpack_require__){"use strict";module.exports=function(useSourceMap){var list=[];return list.toString=function(){return this.map((function(item){var content=function(item,useSourceMap){var content=item[1]||"",cssMapping=item[3];if(!cssMapping)return content;if(useSourceMap&&"function"==typeof btoa){var sourceMapping=(sourceMap=cssMapping,base64=btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),"/*# ".concat(data," */")),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}var sourceMap,base64,data;return[content].join("\n")}(item,useSourceMap);return item[2]?"@media ".concat(item[2]," {").concat(content,"}"):content})).join("")},list.i=function(modules,mediaQuery,dedupe){"string"==typeof modules&&(modules=[[null,modules,""]]);var alreadyImportedModules={};if(dedupe)for(var i=0;i<this.length;i++){var id=this[i][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);dedupe&&alreadyImportedModules[item[0]]||(mediaQuery&&(item[2]?item[2]="".concat(mediaQuery," and ").concat(item[2]):item[2]=mediaQuery),list.push(item))}},list}},"../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":function(module,exports,__webpack_require__){"use strict";var memo,isOldIE=function(){return void 0===memo&&(memo=Boolean(window&&document&&document.all&&!window.atob)),memo},getTarget=function(){var memo={};return function(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}}(),stylesInDom=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDom.length;i++)if(stylesInDom[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var index=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3]};-1!==index?(stylesInDom[index].references++,stylesInDom[index].updater(obj)):stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1}),identifiers.push(identifier)}return identifiers}function insertStyleElement(options){var style=document.createElement("style"),attributes=options.attributes||{};if(void 0===attributes.nonce){var nonce=__webpack_require__.nc;nonce&&(attributes.nonce=nonce)}if(Object.keys(attributes).forEach((function(key){style.setAttribute(key,attributes[key])})),"function"==typeof options.insert)options.insert(style);else{var target=getTarget(options.insert||"head");if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}return style}var textStore,replaceText=(textStore=[],function(index,replacement){return textStore[index]=replacement,textStore.filter(Boolean).join("\n")});function applyToSingletonTag(style,index,remove,obj){var css=remove?"":obj.media?"@media ".concat(obj.media," {").concat(obj.css,"}"):obj.css;if(style.styleSheet)style.styleSheet.cssText=replaceText(index,css);else{var cssNode=document.createTextNode(css),childNodes=style.childNodes;childNodes[index]&&style.removeChild(childNodes[index]),childNodes.length?style.insertBefore(cssNode,childNodes[index]):style.appendChild(cssNode)}}function applyToTag(style,options,obj){var css=obj.css,media=obj.media,sourceMap=obj.sourceMap;if(media?style.setAttribute("media",media):style.removeAttribute("media"),sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),style.styleSheet)style.styleSheet.cssText=css;else{for(;style.firstChild;)style.removeChild(style.firstChild);style.appendChild(document.createTextNode(css))}}var singleton=null,singletonCounter=0;function addStyle(obj,options){var style,update,remove;if(options.singleton){var styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options)),update=applyToSingletonTag.bind(null,style,styleIndex,!1),remove=applyToSingletonTag.bind(null,style,styleIndex,!0)}else style=insertStyleElement(options),update=applyToTag.bind(null,style,options),remove=function(){!function(style){if(null===style.parentNode)return!1;style.parentNode.removeChild(style)}(style)};return update(obj),function(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap)return;update(obj=newObj)}else remove()}}module.exports=function(list,options){(options=options||{}).singleton||"boolean"==typeof options.singleton||(options.singleton=isOldIE());var lastIdentifiers=modulesToDom(list=list||[],options);return function(newList){if(newList=newList||[],"[object Array]"===Object.prototype.toString.call(newList)){for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDom[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDom[_index].references&&(stylesInDom[_index].updater(),stylesInDom.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}}},"./src/AddressComponent.js":function(module,exports,__webpack_require__){"use strict";__webpack_require__("core-js/modules/web.dom-collections.for-each.js");var _Object$keys3=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/keys"),_Object$getOwnPropertySymbols=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"),_filterInstanceProperty2=__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/filter"),_Object$getOwnPropertyDescriptor=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor"),_Object$getOwnPropertyDescriptors=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors"),_interopRequireWildcard=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireWildcard"),_interopRequireDefault=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.AddressComponent=void 0;var _keys=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/keys")),_map=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/map")),_sort=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/sort")),_filter=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/filter")),_endsWith=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/ends-with")),_defineProperty2=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/helpers/defineProperty")),_slicedToArray2=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/helpers/slicedToArray")),_react=_interopRequireWildcard(__webpack_require__("react")),_propTypes=_interopRequireDefault(__webpack_require__("prop-types")),_components=__webpack_require__("@jutro/components"),_set=_interopRequireDefault(__webpack_require__("lodash/set")),_omit=_interopRequireDefault(__webpack_require__("lodash/omit")),_pickBy=_interopRequireDefault(__webpack_require__("lodash/pickBy")),_isObject=_interopRequireDefault(__webpack_require__("lodash/isObject")),_locale=__webpack_require__("@jutro/locale"),_propTypes2=__webpack_require__("@jutro/prop-types"),_layout=__webpack_require__("@jutro/layout"),_AddressComponents=__webpack_require__("./src/AddressComponents.hooks.js"),_AddressForm=__webpack_require__("./src/addressForm/AddressForm.js"),_AddressComponent=__webpack_require__("./src/AddressComponent.messages.js"),_defaultCountryData=__webpack_require__("./src/defaultCountryData/index.js");function ownKeys(object,enumerableOnly){var keys=_Object$keys3(object);if(_Object$getOwnPropertySymbols){var symbols=_Object$getOwnPropertySymbols(object);enumerableOnly&&(symbols=_filterInstanceProperty2(symbols).call(symbols,(function(sym){return _Object$getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])})):_Object$getOwnPropertyDescriptors?Object.defineProperties(target,_Object$getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,_Object$getOwnPropertyDescriptor(source,key))}))}return target}var AddressComponent=function(_ref){var _countriesDataMerged$2,value=_ref.value,onValueChange=_ref.onValueChange,onValidationChange=_ref.onValidationChange,countriesData=_ref.countriesData,defaultCountry=_ref.defaultCountry,readOnly=_ref.readOnly,readOnlyFormat=_ref.readOnlyFormat,readOnlyLabel=_ref.readOnlyLabel,_ref$showCountrySelec=_ref.showCountrySelection,showCountrySelection=void 0===_ref$showCountrySelec?"selectable":_ref$showCountrySelec,id=_ref.id,path=_ref.path,showErrors=_ref.showErrors,alwaysShowMaskPostalCode=_ref.alwaysShowMaskPostalCode,translator=(0,_react.useContext)(_locale.TranslatorContext),_useState=(0,_react.useState)(value),_useState2=(0,_slicedToArray2.default)(_useState,2),componentValue=_useState2[0],setComponentValue=_useState2[1],_useState3=(0,_react.useState)(!0),_useState4=(0,_slicedToArray2.default)(_useState3,2),isComponentValid=_useState4[0],setIsComponentValid=_useState4[1],countriesDataMerged=(0,_react.useMemo)((function(){var data=_objectSpread({},countriesData||_defaultCountryData.countriesAddressData);return(0,_pickBy.default)(data,_isObject.default)}),[countriesData]),resolveCountriesForDropdown=(0,_react.useMemo)((function(){var _Object$keys,_context,availableCountries=null===(_Object$keys=(0,_keys.default)(countriesDataMerged))||void 0===_Object$keys?void 0:(0,_map.default)(_Object$keys).call(_Object$keys,(function(country){var _countriesDataMerged$,countryCode=countriesDataMerged[country].countryCode;return{code:countryCode,name:translator(null===(_countriesDataMerged$=countriesDataMerged[countryCode])||void 0===_countriesDataMerged$?void 0:_countriesDataMerged$.country)}}));if(availableCountries.every((function(country){return(null==country?void 0:country.code)!==(null==value?void 0:value.country)}))){var unknownCountryDropdownOption={code:null==value?void 0:value.country,name:null==value?void 0:value.country};availableCountries.push(unknownCountryDropdownOption)}var countriesDropdownAlphabeticalOrder=(0,_sort.default)(_context=(0,_map.default)(availableCountries).call(availableCountries,(function(country){return country.name}))).call(_context);return(0,_map.default)(countriesDropdownAlphabeticalOrder).call(countriesDropdownAlphabeticalOrder,(function(country){return(0,_filter.default)(availableCountries).call(availableCountries,(function(_ref2){return _ref2.name===country}))[0]}))}),[]);(0,_AddressComponents.useSetComponentValidation)(isComponentValid,onValidationChange),(0,_AddressComponents.useSetComponentValue)(componentValue,onValueChange,path),(0,_AddressComponents.useSetDefaultCountry)(defaultCountry,countriesDataMerged,resolveCountriesForDropdown,setComponentValue),(0,_AddressComponents.useSetValueForUnknownCountry)(value,countriesDataMerged,_defaultCountryData.defaultCountryForm,setComponentValue);var validateAddressComponent=(0,_react.useCallback)((function(isFormValid){setIsComponentValid(isFormValid)}),[]),handleWrite=(0,_react.useCallback)((function(fieldValue,fieldPath){setComponentValue((function(prevState){var newState=_objectSpread({},prevState);return(0,_endsWith.default)(fieldPath).call(fieldPath,"postalCode")?(0,_set.default)(newState,fieldPath,fieldValue.toUpperCase()):(0,_set.default)(newState,fieldPath,fieldValue),fieldValue||(newState=(0,_omit.default)(newState,[fieldPath])),newState}))}),[]),handleCountryDropdownWrite=(0,_react.useCallback)((function(dropdownValue){setComponentValue((function(prevState){return(null==prevState?void 0:prevState.country)!==(null==dropdownValue?void 0:dropdownValue.code)?{country:null==dropdownValue?void 0:dropdownValue.code}:prevState}))}),[]),countryValueWithCountryName={code:null==componentValue?void 0:componentValue.country,name:translator(null===(_countriesDataMerged$2=countriesDataMerged[null==componentValue?void 0:componentValue.country])||void 0===_countriesDataMerged$2?void 0:_countriesDataMerged$2.country)||(null==componentValue?void 0:componentValue.country)},resolveCountryToRender=(0,_react.useMemo)((function(){var valueCountryCode=null==componentValue?void 0:componentValue.country,countryFromValue=null==countriesDataMerged?void 0:countriesDataMerged[valueCountryCode];return countryFromValue||_defaultCountryData.defaultCountryForm}),[countriesDataMerged,null==componentValue?void 0:componentValue.country]);if(readOnly){var readOnlyValue=_objectSpread({},componentValue);return readOnlyValue.country=countryValueWithCountryName,_react.default.createElement(_AddressForm.AddressForm,{value:readOnlyValue,countryData:resolveCountryToRender,readOnly:readOnly,readOnlyFormat:readOnlyFormat,readOnlyLabel:readOnlyLabel,id:id})}return"hidden"===showCountrySelection?_react.default.createElement(_AddressForm.AddressForm,{value:componentValue,onValueChange:handleWrite,countryData:resolveCountryToRender,id:id,onValidationChange:validateAddressComponent,showErrors:showErrors}):_react.default.createElement(_layout.Grid,{hgap:"large",vgap:"medium"},_react.default.createElement(_components.TypeaheadMultiSelectField,{id:"".concat(id,"_countrySelect"),path:"country",label:translator(_AddressComponent.labelMessages.countryLabel),availableValues:resolveCountriesForDropdown,onValueChange:handleCountryDropdownWrite,value:countryValueWithCountryName,singleSelect:!0,dataType:"object",readOnly:"readOnly"===showCountrySelection,onValidationChange:validateAddressComponent,showErrors:showErrors}),_react.default.createElement(_AddressForm.AddressForm,{value:componentValue,onValueChange:handleWrite,countryData:resolveCountryToRender,metadataFormKey:null==componentValue?void 0:componentValue.country,id:id,onValidationChange:validateAddressComponent,showErrors:showErrors,alwaysShowMaskPostalCode:alwaysShowMaskPostalCode}))};exports.AddressComponent=AddressComponent,AddressComponent.propTypes={value:_propTypes.default.object,onValueChange:_propTypes.default.func,onValidationChange:_propTypes.default.func,countriesData:_propTypes.default.object,defaultCountry:_propTypes.default.string,readOnly:_propTypes.default.bool,readOnlyFormat:_propTypes.default.oneOf(["oneLine","envelopeBigToSmall","envelopeSmallToBig"]),readOnlyLabel:_propTypes2.intlMessageShape,showCountrySelection:_propTypes.default.oneOf(["selectable","readOnly","hidden"]),id:_propTypes.default.string.isRequired,path:_propTypes.default.string,showErrors:_propTypes.default.bool,alwaysShowMaskPostalCode:_propTypes.default.bool},AddressComponent.__docgenInfo={componentName:"AddressComponent",packageName:"@business-patterns/address-component",description:"",displayName:"AddressComponent",methods:[],actualName:"AddressComponent",props:{value:{type:{name:"object"},required:!1,description:""},onValueChange:{type:{name:"func"},required:!1,description:""},onValidationChange:{type:{name:"func"},required:!1,description:""},countriesData:{type:{name:"object"},required:!1,description:""},defaultCountry:{type:{name:"string"},required:!1,description:""},readOnly:{type:{name:"bool"},required:!1,description:""},readOnlyFormat:{type:{name:"enum",value:[{value:"'oneLine'",computed:!1},{value:"'envelopeBigToSmall'",computed:!1},{value:"'envelopeSmallToBig'",computed:!1}]},required:!1,description:""},readOnlyLabel:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:""},showCountrySelection:{type:{name:"enum",value:[{value:"'selectable'",computed:!1},{value:"'readOnly'",computed:!1},{value:"'hidden'",computed:!1}]},required:!1,description:"",defaultValue:{value:"'selectable'",computed:!1}},id:{type:{name:"string"},required:!0,description:""},path:{type:{name:"string"},required:!1,description:""},showErrors:{type:{name:"bool"},required:!1,description:""},alwaysShowMaskPostalCode:{type:{name:"bool"},required:!1,description:"If true, the mask for postal code will be visible if it is contained in the config, if false postal code will display the placeholder if not focused and empty."}}}},"./src/AddressComponent.messages.js":function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.labelMessages=void 0;var labelMessages=(0,__webpack_require__("@jutro/locale").defineMessages)({countryLabel:{id:"gwbp.addressing.input.countryLabel",defaultMessage:"Country"},patternValidationError:{id:"gwbp.addressing.patternValidationError",defaultMessage:"Field value is incorrect"},CEDEX:{id:"gwbp.addressing.input.CEDEX",defaultMessage:"CEDEX",description:"CEDEX codes are sorting codes, but for legacy reasons are handled separately from the sortingCode prop"},addressLine1:{id:"gwbp.addressing.input.addressLine1",defaultMessage:"Address 1"},addressLine1Kanji:{id:"gwbp.addressing.input.addressLine1Kanji",defaultMessage:"Address 1 (phonetic)"},addressLine2:{id:"gwbp.addressing.input.addressLine2",defaultMessage:"Address 2"},addressLine2Kanji:{id:"gwbp.addressing.input.addressLine2Kanji",defaultMessage:"Address 2 (phonetic)"},addressLine3:{id:"gwbp.addressing.input.addressLine3",defaultMessage:"Address 3"},area:{id:"gwbp.addressing.input.area",defaultMessage:"Area",description:"As used / required in Hong Kong"},city:{id:"gwbp.addressing.input.city",defaultMessage:"City"},cityKanji:{id:"gwbp.addressing.input.cityKanji",defaultMessage:"City (phonetic)"},county:{id:"gwbp.addressing.input.county",defaultMessage:"County",description:"As required by Ireland, Taiwan"},department:{id:"gwbp.addressing.input.department",defaultMessage:"Department",description:"As used/required in some South American countries - Colombia, Uruguay"},dependentLocality:{id:"gwbp.addressing.input.dependentLocality",defaultMessage:"Locality",description:"used in several countries, required nowhere"},district:{id:"gwbp.addressing.input.district",defaultMessage:"District",description:"Only required in Nauru Central Pacific"},do_si:{id:"gwbp.addressing.input.do_si",defaultMessage:"Province",description:"As used & required in S. Korea"},emirate:{id:"gwbp.addressing.input.emirate",defaultMessage:"Emirate",description:"As required by the UAE"},island:{id:"gwbp.addressing.input.island",defaultMessage:"Island",description:"As required by places like French Polynesia"},oblast:{id:"gwbp.addressing.input.oblast",defaultMessage:"Oblast",description:"Admin region - required by the Russian Federation"},parish:{id:"gwbp.addressing.input.parish",defaultMessage:"Parish",description:"As used in a number of Caribbean countries, and required in Jamaica"},postalCode:{id:"gwbp.addressing.input.postalCode",defaultMessage:"Postal Code",description:"Can be overwritten to Zip code, Postcode, Eircode etc."},prefecture:{id:"gwbp.addressing.input.prefecture",defaultMessage:"Prefecture",description:"As used/required in Japan"},province:{id:"gwbp.addressing.input.province",defaultMessage:"Province"},sortingCode:{id:"gwbp.addressing.input.sortingCode",defaultMessage:"Sort Code",description:"Optional in a number of places, required nowhere"},state:{id:"gwbp.addressing.input.state",defaultMessage:"State",description:"Used/required by a number places, including the US"}});exports.labelMessages=labelMessages},"./src/AddressComponents.hooks.js":function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.useSetValueForUnknownCountry=exports.useSetComponentValidation=exports.useSetComponentValue=exports.useSetDefaultCountry=void 0,__webpack_require__("core-js/modules/web.dom-collections.for-each.js");var _filter=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/filter")),_includes=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/includes")),_keys=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/keys")),_map=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/map")),_concat=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/concat")),_react=__webpack_require__("react"),_omit=_interopRequireDefault(__webpack_require__("lodash/omit")),_isEqual=_interopRequireDefault(__webpack_require__("lodash/isEqual")),_locale=__webpack_require__("@jutro/locale");exports.useSetDefaultCountry=function(defaultCountry,countriesDataMerged,countriesForDropdown,setComponentValue){(0,_react.useEffect)((function(){var defaultCountryCode=defaultCountry||(0,_locale.getDefaultCountryCode)()||"US",countryToSetAsDefault=(0,_filter.default)(countriesForDropdown).call(countriesForDropdown,(function(country){return country.code===defaultCountryCode})),countryToRenderAsDefault=countryToSetAsDefault.length?countryToSetAsDefault[0].code:countriesForDropdown[0].code;setComponentValue((function(prevValue){return null!=prevValue&&prevValue.country?prevValue:{country:countryToRenderAsDefault}}))}),[defaultCountry,countriesDataMerged,setComponentValue,countriesForDropdown])};exports.useSetComponentValue=function(componentValue,onValueChange,path){(0,_react.useEffect)((function(){onValueChange&&onValueChange(componentValue,path)}),[componentValue,onValueChange,path])};exports.useSetComponentValidation=function(isComponentValid,onValidationChange){(0,_react.useEffect)((function(){onValidationChange&&onValidationChange(isComponentValid)}),[isComponentValid,onValidationChange])};exports.useSetValueForUnknownCountry=function(value,countriesDataMerged,defaultCountryForm,setComponentValue){(0,_react.useEffect)((function(){var _context;if(value&&!(0,_includes.default)(_context=(0,_keys.default)(countriesDataMerged)).call(_context,value.country)){var _context2,_context3,defultFormFields=(0,_map.default)(_context2=defaultCountryForm.fields).call(_context2,(function(field){return null==field?void 0:field.name})),valueFromUknownFields=[],fieldsToOmitFromTheValue=[];if((0,_filter.default)(_context3=(0,_keys.default)(value)).call(_context3,(function(fieldName){return"country"!==fieldName})).forEach((function(field){(0,_includes.default)(defultFormFields).call(defultFormFields,field)||(valueFromUknownFields.push(value[field].name||value[field]),fieldsToOmitFromTheValue.push(field))})),valueFromUknownFields.length){var firstEmptyAddressLine=value.addressLine3?"addressLine3":"addressLine2";setComponentValue((function(prevValue){var _context4,newValue=(0,_omit.default)(prevValue,fieldsToOmitFromTheValue);prevValue[firstEmptyAddressLine]?newValue[firstEmptyAddressLine]=(0,_concat.default)(_context4="".concat(prevValue[firstEmptyAddressLine],", ")).call(_context4,valueFromUknownFields.join(", ")):newValue[firstEmptyAddressLine]=valueFromUknownFields.join(", ");return(0,_isEqual.default)(prevValue,newValue)?prevValue:newValue}))}}}),[])}},"./src/addressForm/AddressForm.js":function(module,exports,__webpack_require__){"use strict";__webpack_require__("core-js/modules/web.dom-collections.for-each.js");var _Object$keys=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/keys"),_Object$getOwnPropertySymbols=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols"),_filterInstanceProperty2=__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/filter"),_Object$getOwnPropertyDescriptor=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor"),_Object$getOwnPropertyDescriptors=__webpack_require__("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors"),_interopRequireWildcard=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireWildcard"),_interopRequireDefault=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.layoutTypesShape=exports.AddressForm=void 0;var _map=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/map")),_values=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/values")),_includes=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/includes")),_concat=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/concat")),_filter=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/filter")),_defineProperty2=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/helpers/defineProperty")),_react=_interopRequireWildcard(__webpack_require__("react")),_propTypes=_interopRequireDefault(__webpack_require__("prop-types")),_isEmpty=_interopRequireDefault(__webpack_require__("lodash/isEmpty")),_uiconfig=__webpack_require__("@jutro/uiconfig"),_locale=__webpack_require__("@jutro/locale"),_propTypes2=__webpack_require__("@jutro/prop-types"),_layout=__webpack_require__("@jutro/layout"),_AddressReadonly=__webpack_require__("./src/addressReadOnly/AddressReadonly.js"),_AddressComponent=__webpack_require__("./src/AddressComponent.messages.js");function ownKeys(object,enumerableOnly){var keys=_Object$keys(object);if(_Object$getOwnPropertySymbols){var symbols=_Object$getOwnPropertySymbols(object);enumerableOnly&&(symbols=_filterInstanceProperty2(symbols).call(symbols,(function(sym){return _Object$getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])})):_Object$getOwnPropertyDescriptors?Object.defineProperties(target,_Object$getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,_Object$getOwnPropertyDescriptor(source,key))}))}return target}var defaultLayoutTypes={type1:{columns:["84px","auto"],colspan:2,affectedFieldsName:["postalCode","city"]},type2:{columns:["auto","84px"],colspan:2,affectedFieldsName:["city","postalCode"]},type3:{columns:["auto","128px","84px"],colspan:3,affectedFieldsName:["city","state","province","department","oblast","postalCode"]},type4:{columns:["84px","auto"],colspan:2,affectedFieldsName:["postalCode"]},type5:{columns:["84px","auto"],colspan:2,affectedFieldsName:["postalCode"]},type6:{columns:["auto","84px","128px"],colspan:3,affectedFieldsName:["city","state","postalCode"]}},AddressForm=function(_ref){var value=_ref.value,onValueChange=_ref.onValueChange,countryData=_ref.countryData,uiProps=_ref.uiProps,showErrors=_ref.showErrors,readOnly=_ref.readOnly,readOnlyFormat=_ref.readOnlyFormat,readOnlyLabel=_ref.readOnlyLabel,metadataFormKey=_ref.metadataFormKey,id=_ref.id,customLayoutTypes=_ref.customLayoutTypes,onValidationChange=_ref.onValidationChange,_ref$alwaysShowMaskPo=_ref.alwaysShowMaskPostalCode,alwaysShowMaskPostalCode=void 0===_ref$alwaysShowMaskPo||_ref$alwaysShowMaskPo,translator=(0,_react.useContext)(_locale.TranslatorContext),layoutTypes=customLayoutTypes?_objectSpread(_objectSpread({},defaultLayoutTypes),customLayoutTypes):defaultLayoutTypes,layoutType=null!=countryData&&countryData.fieldsLayoutType?layoutTypes[countryData.fieldsLayoutType]:void 0,columnsLayout={columns:layoutType?layoutType.columns:["1fr"],colspan:layoutType?layoutType.colspan:1,affectedFieldsName:layoutType?layoutType.affectedFieldsName:[]},componentUiProps=(0,_react.useMemo)((function(){if(countryData&&(0,_isEmpty.default)(uiProps)){var _context,newUiProps={};return newUiProps.content=(0,_map.default)(_context=countryData.fields).call(_context,(function(field){var _countryData$required,_context2,_context3,fieldName=field.name,fieldPath=field.path,fieldValues=(0,_values.default)(field),fieldPattern=field.pattern,fieldMaxLength=field.maxLength,fieldLabel=field.label,fieldMask=field.mask,fieldTooltip=field.tooltip,translatedFieldValues=null==fieldValues?void 0:(0,_map.default)(fieldValues).call(fieldValues,(function(fieldValue){return{code:fieldValue.code,name:translator(fieldValue.name)}})),isRequired=null===(_countryData$required=countryData.requiredFields)||void 0===_countryData$required?void 0:_countryData$required.some((function(requiredField){return requiredField===fieldName})),colspan=(0,_includes.default)(_context2=columnsLayout.affectedFieldsName).call(_context2,fieldName)?1:columnsLayout.colspan,fieldMetadata={id:"".concat(fieldName,"_wrapper"),type:"element",component:_layout.GridItem,componentProps:{colSpan:colspan,phone:{colSpan:1},phoneWide:{colSpan:colspan},tablet:{colSpan:colspan}},content:[{id:(0,_concat.default)(_context3="".concat(id,"_")).call(_context3,fieldName),type:"field",component:fieldValues?"DropdownSelect":"Input",componentProps:{path:fieldPath,label:translator(fieldLabel||_AddressComponent.labelMessages[fieldName]),availableValues:translatedFieldValues,required:isRequired,labelClassName:"addressField",dataType:fieldValues?"object":void 0,mask:fieldMask,tooltip:fieldTooltip,alwaysShowMask:alwaysShowMaskPostalCode,maskChar:"#"}}]};return fieldPattern&&(fieldMetadata.content[0].componentProps.validator={pattern:fieldPattern,message:translator(_AddressComponent.labelMessages.patternValidationError)}),fieldValues||(fieldMetadata.content[0].componentProps.maxLength=fieldMaxLength||60),fieldMetadata})),newUiProps}return uiProps}),[countryData,uiProps,columnsLayout.affectedFieldsName,columnsLayout.colspan,id,translator,alwaysShowMaskPostalCode]),resolveSmallToBigValue=(0,_react.useMemo)((function(){var valueForReadOnly=((null==countryData?void 0:countryData.fields)||[]).reduce((function(sortedValue,field){return(0,_concat.default)(sortedValue).call(sortedValue,null==value?void 0:value[field.name])}),[]);return valueForReadOnly.push(null==value?void 0:value.country),(0,_filter.default)(valueForReadOnly).call(valueForReadOnly,Boolean)}),[countryData,value]);return readOnly?_react.default.createElement(_AddressReadonly.AddressReadonly,{address:resolveSmallToBigValue,format:readOnlyFormat,label:readOnlyLabel,id:id}):_react.default.createElement(_layout.GridLayout,{id:"addressLayout",columns:columnsLayout.columns,hgap:"large",vgap:"medium",phone:{columns:[1]},phoneWide:{columns:columnsLayout.columns},tablet:{columns:columnsLayout.columns}},_react.default.createElement(_uiconfig.MetadataForm,{uiProps:componentUiProps,data:value,onDataChange:onValueChange,showRequired:!0,showErrors:showErrors,key:metadataFormKey,onValidationChange:onValidationChange,id:"addressMetadataForm"}))};exports.AddressForm=AddressForm;var layoutTypesShape=_propTypes.default.shape({columns:_propTypes.default.arrayOf(_propTypes.default.string.isRequired).isRequired,colspan:_propTypes.default.number.isRequired,affectedFieldsName:_propTypes.default.arrayOf(_propTypes.default.string.isRequired).isRequired});exports.layoutTypesShape=layoutTypesShape,AddressForm.propTypes={value:_propTypes.default.object,onValueChange:_propTypes.default.func,onValidationChange:_propTypes.default.func,countryData:_propTypes.default.object,uiProps:_propTypes.default.object,showErrors:_propTypes.default.bool,readOnly:_propTypes.default.bool,readOnlyFormat:_propTypes.default.oneOf(["oneLine","envelopeBigToSmall","envelopeSmallToBig"]),readOnlyLabel:_propTypes2.intlMessageShape,metadataFormKey:_propTypes.default.string,id:_propTypes.default.string.isRequired,customLayoutTypes:_propTypes.default.objectOf(layoutTypesShape.isRequired),alwaysShowMaskPostalCode:_propTypes.default.bool},AddressForm.__docgenInfo={componentName:"AddressForm",packageName:"@business-patterns/address-component",description:"",displayName:"AddressForm",methods:[],actualName:"AddressForm",props:{value:{type:{name:"object"},required:!1,description:""},onValueChange:{type:{name:"func"},required:!1,description:""},onValidationChange:{type:{name:"func"},required:!1,description:""},countryData:{type:{name:"object"},required:!1,description:""},uiProps:{type:{name:"object"},required:!1,description:""},showErrors:{type:{name:"bool"},required:!1,description:""},readOnly:{type:{name:"bool"},required:!1,description:""},readOnlyFormat:{type:{name:"enum",value:[{value:"'oneLine'",computed:!1},{value:"'envelopeBigToSmall'",computed:!1},{value:"'envelopeSmallToBig'",computed:!1}]},required:!1,description:""},readOnlyLabel:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:""},metadataFormKey:{type:{name:"string"},required:!1,description:""},id:{type:{name:"string"},required:!0,description:""},customLayoutTypes:{type:{name:"objectOf",value:{name:"custom",raw:"layoutTypesShape"}},required:!1,description:""},alwaysShowMaskPostalCode:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"true",computed:!1}}}}},"./src/addressReadOnly/AddressReadonly.js":function(module,exports,__webpack_require__){"use strict";var _interopRequireWildcard=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireWildcard"),_interopRequireDefault=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.AddressReadonly=void 0;var _map=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/map")),_reverse=_interopRequireDefault(__webpack_require__("@babel/runtime-corejs3/core-js-stable/instance/reverse")),_react=_interopRequireWildcard(__webpack_require__("react")),_propTypes=_interopRequireDefault(__webpack_require__("prop-types")),_locale=__webpack_require__("@jutro/locale"),_propTypes2=__webpack_require__("@jutro/prop-types"),_components=__webpack_require__("@jutro/components"),_AddressReadonlyModule=_interopRequireDefault(__webpack_require__("./src/addressReadOnly/AddressReadonly.module.scss")),mapAddressEntry=function(addressEntry){return"string"==typeof addressEntry?addressEntry:addressEntry.name},getAddressLine=function(format,address){if(address){var addressValues=(0,_map.default)(address).call(address,mapAddressEntry);switch(format){case"envelopeSmallToBig":return addressValues.join(", \n");case"envelopeBigToSmall":return(0,_reverse.default)(addressValues).call(addressValues).join(", \n");case"oneLine":return addressValues.join(", ");default:throw new Error("Wrong format")}}},AddressReadonly=function(_ref){var id=_ref.id,label=_ref.label,_ref$format=_ref.format,format=void 0===_ref$format?"oneLine":_ref$format,address=_ref.address,translator=(0,_react.useContext)(_locale.TranslatorContext);return _react.default.createElement(_components.InputField,{label:translator(label),readOnly:!0,className:"oneLine"!==format?_AddressReadonlyModule.default.addressReadonly:null,value:getAddressLine(format,address),id:id})};exports.AddressReadonly=AddressReadonly,AddressReadonly.propTypes={address:_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.shape({name:_propTypes.default.string})])).isRequired,format:_propTypes.default.oneOf(["oneLine","envelopeBigToSmall","envelopeSmallToBig"]),label:_propTypes2.intlMessageShape,id:_propTypes.default.string.isRequired},AddressReadonly.__docgenInfo={componentName:"AddressReadonly",packageName:"@business-patterns/address-component",description:"",displayName:"AddressReadonly",methods:[],actualName:"AddressReadonly",props:{address:{type:{name:"arrayOf",value:{name:"union",value:[{name:"string"},{name:"shape",value:{name:{name:"string",required:!1}}}]}},required:!0,description:""},format:{type:{name:"enum",value:[{value:"'oneLine'",computed:!1},{value:"'envelopeBigToSmall'",computed:!1},{value:"'envelopeSmallToBig'",computed:!1}]},required:!1,description:"",defaultValue:{value:"'oneLine'",computed:!1}},label:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:""},id:{type:{name:"string"},required:!0,description:""}}}},"./src/addressReadOnly/AddressReadonly.module.scss":function(module,exports,__webpack_require__){var api=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("../../node_modules/css-loader/dist/cjs.js?!../../node_modules/resolve-url-loader/index.js?!../../node_modules/postcss-loader/dist/cjs.js?!../../node_modules/sass-loader/dist/cjs.js?!./src/addressReadOnly/AddressReadonly.module.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/defaultCountryData/defaultCountries.metadata.json5":function(module,exports){module.exports={AR:{country:{id:"gwbp.addressing.country.ar",defaultMessage:"Argentina"},countryCode:"AR",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"},{name:"province",path:"province"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},AT:{country:{id:"gwbp.addressing.country.at",defaultMessage:"Austria"},countryCode:"AT",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},AU:{country:{id:"gwbp.addressing.country.au",defaultMessage:"Australia"},countryCode:"AU",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"state",path:"state",values:[{code:"AU_JBT",name:{id:"gwbp.addressing.au.state.au_jbt",defaultMessage:"Jervis Bay Territory"}},{code:"AU_ACT",name:{id:"gwbp.addressing.au.state.au_act",defaultMessage:"A.C.T."}},{code:"AU_NSW",name:{id:"gwbp.addressing.au.state.au_nsw",defaultMessage:"New South Wales"}},{code:"AU_NT",name:{id:"gwbp.addressing.au.state.au_nt",defaultMessage:"Northern Territory"}},{code:"AU_QLD",name:{id:"gwbp.addressing.au.state.au_qld",defaultMessage:"Queensland"}},{code:"AU_SA",name:{id:"gwbp.addressing.au.state.au_sa",defaultMessage:"South Australia"}},{code:"AU_TAS",name:{id:"gwbp.addressing.au.state.au_tas",defaultMessage:"Tasmania"}},{code:"AU_VIC",name:{id:"gwbp.addressing.au.state.au_vic",defaultMessage:"Victoria"}},{code:"AU_WA",name:{id:"gwbp.addressing.au.state.au_wa",defaultMessage:"Western Australia"}}]},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"}],requiredFields:["addressLine1","city","state","postalCode"],fieldsLayoutType:"type3"},BE:{country:{id:"gwbp.addressing.country.be",defaultMessage:"Belgium"},countryCode:"BE",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},BG:{country:{id:"gwbp.addressing.country.bg",defaultMessage:"Bulgaria (rep.)"},countryCode:"BG",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},BR:{country:{id:"gwbp.addressing.country.br",defaultMessage:"Brazil"},countryCode:"BR",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"city",path:"city"},{name:"state",path:"state",values:[{code:"BR_AC",name:{id:"gwbp.addressing.br.state.br_ac",defaultMessage:"Acre"}},{code:"BR_AL",name:{id:"gwbp.addressing.br.state.br_al",defaultMessage:"Alagoas"}},{code:"BR_AP",name:{id:"gwbp.addressing.br.state.br_ap",defaultMessage:"Amapá"}},{code:"BR_AM",name:{id:"gwbp.addressing.br.state.br_am",defaultMessage:"Amazonas"}},{code:"BR_BA",name:{id:"gwbp.addressing.br.state.br_ba",defaultMessage:"Bahia"}},{code:"BR_CE",name:{id:"gwbp.addressing.br.state.br_ce",defaultMessage:"Ceará"}},{code:"BR_DF",name:{id:"gwbp.addressing.br.state.br_df",defaultMessage:"Distrito Federal"}},{code:"BR_ES",name:{id:"gwbp.addressing.br.state.br_es",defaultMessage:"Espírito Santo"}},{code:"BR_GO",name:{id:"gwbp.addressing.br.state.br_go",defaultMessage:"Goiás"}},{code:"BR_MA",name:{id:"gwbp.addressing.br.state.br_ma",defaultMessage:"Maranhão"}},{code:"BR_MT",name:{id:"gwbp.addressing.br.state.br_mt",defaultMessage:"Mato Grosso"}},{code:"BR_MS",name:{id:"gwbp.addressing.br.state.br_ms",defaultMessage:"Mato Grosso do Sul"}},{code:"BR_MG",name:{id:"gwbp.addressing.br.state.br_mg",defaultMessage:"Minas Gerais"}},{code:"BR_PA",name:{id:"gwbp.addressing.br.state.br_pa",defaultMessage:"Pará"}},{code:"BR_PB",name:{id:"gwbp.addressing.br.state.br_pb",defaultMessage:"Paraíba"}},{code:"BR_PR",name:{id:"gwbp.addressing.br.state.br_pr",defaultMessage:"Paraná"}},{code:"BR_PE",name:{id:"gwbp.addressing.br.state.br_pe",defaultMessage:"Pernambuco"}},{code:"BR_PI",name:{id:"gwbp.addressing.br.state.br_pi",defaultMessage:"Piauí"}},{code:"BR_RJ",name:{id:"gwbp.addressing.br.state.br_rj",defaultMessage:"Rio de Janeiro"}},{code:"BR_RN",name:{id:"gwbp.addressing.br.state.br_rn",defaultMessage:"Rio Grande do Norte"}},{code:"BR_RS",name:{id:"gwbp.addressing.br.state.br_rs",defaultMessage:"Rio Grande do Sul"}},{code:"BR_RO",name:{id:"gwbp.addressing.br.state.br_ro",defaultMessage:"Rondônia"}},{code:"BR_RR",name:{id:"gwbp.addressing.br.state.br_rr",defaultMessage:"Roraima"}},{code:"BR_SC",name:{id:"gwbp.addressing.br.state.br_sc",defaultMessage:"Santa Catarina"}},{code:"BR_SP",name:{id:"gwbp.addressing.br.state.br_sp",defaultMessage:"São Paulo"}},{code:"BR_SE",name:{id:"gwbp.addressing.br.state.br_se",defaultMessage:"Sergipe"}},{code:"BR_TO",name:{id:"gwbp.addressing.br.state.br_to",defaultMessage:"Tocantins"}}]},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}-?\\d{3}$",mask:"99999-999"}],requiredFields:["addressLine1","state","city","postalCode"],fieldsLayoutType:"type3"},CA:{country:{id:"gwbp.addressing.country.ca",defaultMessage:"Canada"},countryCode:"CA",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"county",path:"county"},{name:"province",path:"province",label:{id:"gwbp.addressing.ca.province",defaultMessage:"Province/Territory"},values:[{code:"AB",name:{id:"gwbp.addressing.ca.province.ab",defaultMessage:"Alberta"}},{code:"BC",name:{id:"gwbp.addressing.ca.province.bc",defaultMessage:"British Columbia"}},{code:"MB",name:{id:"gwbp.addressing.ca.province.mb",defaultMessage:"Manitoba"}},{code:"NB",name:{id:"gwbp.addressing.ca.province.nb",defaultMessage:"New Brunswick"}},{code:"NL",name:{id:"gwbp.addressing.ca.province.nl",defaultMessage:"Newfoundland and Labrador"}},{code:"NT",name:{id:"gwbp.addressing.ca.province.nt",defaultMessage:"Northwest Territories"}},{code:"NS",name:{id:"gwbp.addressing.ca.province.ns",defaultMessage:"Nova Scotia"}},{code:"NU",name:{id:"gwbp.addressing.ca.province.nu",defaultMessage:"Nunavut"}},{code:"ON",name:{id:"gwbp.addressing.ca.province.on",defaultMessage:"Ontario"}},{code:"PE",name:{id:"gwbp.addressing.ca.province.pe",defaultMessage:"Prince Edward Island"}},{code:"QC",name:{id:"gwbp.addressing.ca.province.qc",defaultMessage:"Quebec"}},{code:"SK",name:{id:"gwbp.addressing.ca.province.sk",defaultMessage:"Saskatchewan"}},{code:"YT",name:{id:"gwbp.addressing.ca.province.yt",defaultMessage:"Yukon"}}]},{name:"postalCode",path:"postalCode",pattern:"^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z] ?\\d[ABCEGHJ-NPRSTV-Z]\\d$",tooltip:{text:{id:"gwbp.addressing.tooltip.ca",defaultMessage:"Correct postal code example: K1A 0B1"}}}],requiredFields:["addressLine1","city","province","postalCode"],fieldsLayoutType:"type4"},CH:{country:{id:"gwbp.addressing.country.ch",defaultMessage:"Switzerland"},countryCode:"CH",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},CO:{country:{id:"gwbp.addressing.country.co",defaultMessage:"Colombia"},countryCode:"CO",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"department",path:"department"},{name:"postalCode",path:"postalCode"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type3"},DE:{country:{id:"gwbp.addressing.country.de",defaultMessage:"Germany"},countryCode:"DE",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},DK:{country:{id:"gwbp.addressing.country.dk",defaultMessage:"Denmark"},countryCode:"DK",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},ES:{country:{id:"gwbp.addressing.country.es",defaultMessage:"Spain"},countryCode:"ES",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"},{name:"province",path:"province",values:[{code:"ES_VI",name:{id:"gwbp.addressing.es.province.es_vi",defaultMessage:"Álava"}},{code:"ES_AB",name:{id:"gwbp.addressing.es.province.es_ab",defaultMessage:"Albacete"}},{code:"ES_A",name:{id:"gwbp.addressing.es.province.es_a",defaultMessage:"Alicante"}},{code:"ES_AL",name:{id:"gwbp.addressing.es.province.es_al",defaultMessage:"Almería"}},{code:"ES_O",name:{id:"gwbp.addressing.es.province.es_o",defaultMessage:"Asturias"}},{code:"ES_AV",name:{id:"gwbp.addressing.es.province.es_av",defaultMessage:"Ávila"}},{code:"ES_BA",name:{id:"gwbp.addressing.es.province.es_ba",defaultMessage:"Badajoz"}},{code:"ES_B",name:{id:"gwbp.addressing.es.province.es_b",defaultMessage:"Barcelona"}},{code:"ES_BU",name:{id:"gwbp.addressing.es.province.es_bu",defaultMessage:"Burgos"}},{code:"ES_CC",name:{id:"gwbp.addressing.es.province.es_cc",defaultMessage:"Cáceres"}},{code:"ES_CA",name:{id:"gwbp.addressing.es.province.es_ca",defaultMessage:"Cádiz"}},{code:"ES_S",name:{id:"gwbp.addressing.es.province.es_s",defaultMessage:"Cantabria"}},{code:"ES_CS",name:{id:"gwbp.addressing.es.province.es_cs",defaultMessage:"Castellón"}},{code:"ES_CE",name:{id:"gwbp.addressing.es.province.es_ce",defaultMessage:"Ceuta"}},{code:"ES_CR",name:{id:"gwbp.addressing.es.province.es_cr",defaultMessage:"Ciudad Real"}},{code:"ES_CO",name:{id:"gwbp.addressing.es.province.es_co",defaultMessage:"Córdoba"}},{code:"ES_CU",name:{id:"gwbp.addressing.es.province.es_cu",defaultMessage:"Cuenca"}},{code:"ES_GI",name:{id:"gwbp.addressing.es.province.es_gi",defaultMessage:"Girona"}},{code:"ES_GR",name:{id:"gwbp.addressing.es.province.es_gr",defaultMessage:"Granada"}},{code:"ES_GU",name:{id:"gwbp.addressing.es.province.es_gu",defaultMessage:"Guadalajara"}},{code:"ES_SS",name:{id:"gwbp.addressing.es.province.es_ss",defaultMessage:"Guipúzcoa"}},{code:"ES_H",name:{id:"gwbp.addressing.es.province.es_h",defaultMessage:"Huelva"}},{code:"ES_HU",name:{id:"gwbp.addressing.es.province.es_hu",defaultMessage:"Huesca"}},{code:"ES_PM",name:{id:"gwbp.addressing.es.province.es_pm",defaultMessage:"Islas Baleares"}},{code:"ES_J",name:{id:"gwbp.addressing.es.province.es_j",defaultMessage:"Jaén"}},{code:"ES_C",name:{id:"gwbp.addressing.es.province.es_c",defaultMessage:"La Coruña"}},{code:"ES_LO",name:{id:"gwbp.addressing.es.province.es_lo",defaultMessage:"La Rioja"}},{code:"ES_GC",name:{id:"gwbp.addressing.es.province.es_gc",defaultMessage:"Las Palmas"}},{code:"ES_LE",name:{id:"gwbp.addressing.es.province.es_le",defaultMessage:"León"}},{code:"ES_L",name:{id:"gwbp.addressing.es.province.es_l",defaultMessage:"Lérida"}},{code:"ES_LU",name:{id:"gwbp.addressing.es.province.es_lu",defaultMessage:"Lugo"}},{code:"ES_M",name:{id:"gwbp.addressing.es.province.es_m",defaultMessage:"Madrid"}},{code:"ES_MA",name:{id:"gwbp.addressing.es.province.es_ma",defaultMessage:"Málaga"}},{code:"ES_ML",name:{id:"gwbp.addressing.es.province.es_ml",defaultMessage:"Melilla"}},{code:"ES_MU",name:{id:"gwbp.addressing.es.province.es_mu",defaultMessage:"Murcia"}},{code:"ES_NA",name:{id:"gwbp.addressing.es.province.es_na",defaultMessage:"Navarra"}},{code:"ES_OR",name:{id:"gwbp.addressing.es.province.es_or",defaultMessage:"Ourense"}},{code:"ES_P",name:{id:"gwbp.addressing.es.province.es_p",defaultMessage:"Palencia"}},{code:"ES_PO",name:{id:"gwbp.addressing.es.province.es_po",defaultMessage:"Pontevedra"}},{code:"ES_SA",name:{id:"gwbp.addressing.es.province.es_sa",defaultMessage:"Salamanca"}},{code:"ES_TF",name:{id:"gwbp.addressing.es.province.es_tf",defaultMessage:"Santa Cruz de Tenerife"}},{code:"ES_SG",name:{id:"gwbp.addressing.es.province.es_sg",defaultMessage:"Segovia"}},{code:"ES_SE",name:{id:"gwbp.addressing.es.province.es_se",defaultMessage:"Sevilla"}},{code:"ES_SO",name:{id:"gwbp.addressing.es.province.es_so",defaultMessage:"Soria"}},{code:"ES_T",name:{id:"gwbp.addressing.es.province.es_t",defaultMessage:"Tarragona"}},{code:"ES_TE",name:{id:"gwbp.addressing.es.province.es_te",defaultMessage:"Teruel"}},{code:"ES_TO",name:{id:"gwbp.addressing.es.province.es_to",defaultMessage:"Toledo"}},{code:"ES_V",name:{id:"gwbp.addressing.es.province.es_v",defaultMessage:"Valencia"}},{code:"ES_VA",name:{id:"gwbp.addressing.es.province.es_va",defaultMessage:"Valladolid"}},{code:"ES_BI",name:{id:"gwbp.addressing.es.province.es_bi",defaultMessage:"Vizcaya"}},{code:"ES_ZA",name:{id:"gwbp.addressing.es.province.es_za",defaultMessage:"Zamora"}},{code:"ES_Z",name:{id:"gwbp.addressing.es.province.es_z",defaultMessage:"Zaragoza"}}]}],requiredFields:["addressLine1","city","province","postalCode"],fieldsLayoutType:"type1"},FI:{country:{id:"gwbp.addressing.country.fi",defaultMessage:"Finland"},countryCode:"FI",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},FR:{country:{id:"gwbp.addressing.country.fr",defaultMessage:"France"},countryCode:"FR",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"},{name:"CEDEX",path:"CEDEX"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},GB:{country:{id:"gwbp.addressing.country.gb",defaultMessage:"United Kingdom"},countryCode:"GB",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode",pattern:"^GIR ?0AA|(?:(?:AB|AL|B|BA|BB|BD|BF|BH|BL|BN|BR|BS|BT|BX|CA|CB|CF|CH|CM|CO|CR|CT|CV|CW|DA|DD|DE|DG|DH|DL|DN|DT|DY|E|EC|EH|EN|EX|FK|FY|G|GL|GY|GU|HA|HD|HG|HP|HR|HS|HU|HX|IG|IM|IP|IV|JE|KA|KT|KW|KY|L|LA|LD|LE|LL|LN|LS|LU|M|ME|MK|ML|N|NE|NG|NN|NP|NR|NW|OL|OX|PA|PE|PH|PL|PO|PR|RG|RH|RM|S|SA|SE|SG|SK|SL|SM|SN|SO|SP|SR|SS|ST|SW|SY|TA|TD|TF|TN|TQ|TR|TS|TW|UB|W|WA|WC|WD|WF|WN|WR|WS|WV|YO|ZE)(?:\\d[\\dA-Z]? ?\\d[ABD-HJLN-UW-Z]{2}))|BFPO ?\\d{1,4}$",label:{id:"gwbp.addressing.GB.postalCode",defaultMessage:"Postcode"},tooltip:{text:{id:"gwbp.addressing.tooltip.gb",defaultMessage:"Correct postal code example: SO15 2GB, LS9 8UL, L1 8JQ"}}}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type2"},HK:{country:{id:"gwbp.addressing.country.hk",defaultMessage:"Hong Kong"},countryCode:"HK",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"area",path:"area"}],requiredFields:["addressLine1","area"]},HU:{country:{id:"gwbp.addressing.country.hu",defaultMessage:"Hungary (rep.)"},countryCode:"HU",fields:[{name:"city",path:"city"},{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type5"},ID:{country:{id:"gwbp.addressing.country.id",defaultMessage:"Indonesia"},countryCode:"ID",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"province",path:"province",values:[{code:"ID_AC",name:{id:"gwbp.addressing.id.province.id_ac",defaultMessage:"Aceh"}},{code:"ID_BA",name:{id:"gwbp.addressing.id.province.id_ba",defaultMessage:"Bali"}},{code:"ID_BT",name:{id:"gwbp.addressing.id.province.id_bt",defaultMessage:"Banten"}},{code:"ID_BE",name:{id:"gwbp.addressing.id.province.id_be",defaultMessage:"Bengkulu"}},{code:"ID_YO",name:{id:"gwbp.addressing.id.province.id_yo",defaultMessage:"Daerah Istimewa Yogyakarta"}},{code:"ID_JK",name:{id:"gwbp.addressing.id.province.id_jk",defaultMessage:"DKI Jakarta"}},{code:"ID_GO",name:{id:"gwbp.addressing.id.province.id_go",defaultMessage:"Gorontalo"}},{code:"ID_JA",name:{id:"gwbp.addressing.id.province.id_ja",defaultMessage:"Jambi"}},{code:"ID_JB",name:{id:"gwbp.addressing.id.province.id_jb",defaultMessage:"Jawa Barat"}},{code:"ID_JT",name:{id:"gwbp.addressing.id.province.id_jt",defaultMessage:"Jawa Tengah"}},{code:"ID_JI",name:{id:"gwbp.addressing.id.province.id_ji",defaultMessage:"Jawa Timur"}},{code:"ID_KB",name:{id:"gwbp.addressing.id.province.id_kb",defaultMessage:"Kalimantan Barat"}},{code:"ID_KS",name:{id:"gwbp.addressing.id.province.id_ks",defaultMessage:"Kalimantan Selatan"}},{code:"ID_KT",name:{id:"gwbp.addressing.id.province.id_kt",defaultMessage:"Kalimantan Tengah"}},{code:"ID_KI",name:{id:"gwbp.addressing.id.province.id_ki",defaultMessage:"Kalimantan Timur"}},{code:"ID_KU",name:{id:"gwbp.addressing.id.province.id_ku",defaultMessage:"Kalimantan Utara"}},{code:"ID_BB",name:{id:"gwbp.addressing.id.province.id_bb",defaultMessage:"Kepulauan Bangka Belitung"}},{code:"ID_KR",name:{id:"gwbp.addressing.id.province.id_kr",defaultMessage:"Kepulauan Riau"}},{code:"ID_LA",name:{id:"gwbp.addressing.id.province.id_la",defaultMessage:"Lampung"}},{code:"ID_MA",name:{id:"gwbp.addressing.id.province.id_ma",defaultMessage:"Maluku"}},{code:"ID_MU",name:{id:"gwbp.addressing.id.province.id_mu",defaultMessage:"Maluku Utara"}},{code:"ID_NB",name:{id:"gwbp.addressing.id.province.id_nb",defaultMessage:"Nusa Tenggara Barat"}},{code:"ID_NT",name:{id:"gwbp.addressing.id.province.id_nt",defaultMessage:"Nusa Tenggara Timur"}},{code:"ID_PA",name:{id:"gwbp.addressing.id.province.id_pa",defaultMessage:"Papua"}},{code:"ID_PB",name:{id:"gwbp.addressing.id.province.id_pb",defaultMessage:"Papua Barat"}},{code:"ID_RI",name:{id:"gwbp.addressing.id.province.id_ri",defaultMessage:"Riau"}},{code:"ID_SR",name:{id:"gwbp.addressing.id.province.id_sr",defaultMessage:"Sulawesi Barat"}},{code:"ID_SN",name:{id:"gwbp.addressing.id.province.id_sn",defaultMessage:"Sulawesi Selatan"}},{code:"ID_ST",name:{id:"gwbp.addressing.id.province.id_st",defaultMessage:"Sulawesi Tengah"}},{code:"ID_SG",name:{id:"gwbp.addressing.id.province.id_sg",defaultMessage:"Sulawesi Tenggara"}},{code:"ID_SA",name:{id:"gwbp.addressing.id.province.id_sa",defaultMessage:"Sulawesi Utara"}},{code:"ID_SB",name:{id:"gwbp.addressing.id.province.id_sb",defaultMessage:"Sumatera Barat"}},{code:"ID_SS",name:{id:"gwbp.addressing.id.province.id_ss",defaultMessage:"Sumatera Selatan"}},{code:"ID_SU",name:{id:"gwbp.addressing.id.province.id_su",defaultMessage:"Sumatera Utara"}}]},{name:"postalCode",path:"postalCode"}],requiredFields:["addressLine1","province"],fieldsLayoutType:"type3"},IN:{country:{id:"gwbp.addressing.country.in",defaultMessage:"India"},countryCode:"IN",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode",pattern:"^\\d{6}$",mask:"999999"},{name:"state",path:"state",values:[{code:"IN_AN",name:{id:"gwbp.addressing.in.state.in_an",defaultMessage:"Andaman & Nicobar"}},{code:"IN_AP",name:{id:"gwbp.addressing.in.state.in_ap",defaultMessage:"Andhra Pradesh"}},{code:"IN_AR",name:{id:"gwbp.addressing.in.state.in_ar",defaultMessage:"Arunachal Pradesh"}},{code:"IN_AS",name:{id:"gwbp.addressing.in.state.in_as",defaultMessage:"Assam"}},{code:"IN_BR",name:{id:"gwbp.addressing.in.state.in_br",defaultMessage:"Bihar"}},{code:"IN_CH",name:{id:"gwbp.addressing.in.state.in_ch",defaultMessage:"Chandigarh"}},{code:"IN_CT",name:{id:"gwbp.addressing.in.state.in_ct",defaultMessage:"Chhattisgarh"}},{code:"IN_DN",name:{id:"gwbp.addressing.in.state.in_dn",defaultMessage:"Dadra & Nagar Haveli"}},{code:"IN_DD",name:{id:"gwbp.addressing.in.state.in_dd",defaultMessage:"Daman & Diu"}},{code:"IN_DL",name:{id:"gwbp.addressing.in.state.in_dl",defaultMessage:"Delhi"}},{code:"IN_GA",name:{id:"gwbp.addressing.in.state.in_ga",defaultMessage:"Goa"}},{code:"IN_GJ",name:{id:"gwbp.addressing.in.state.in_gj",defaultMessage:"Gujarat"}},{code:"IN_HR",name:{id:"gwbp.addressing.in.state.in_hr",defaultMessage:"Haryana"}},{code:"IN_HP",name:{id:"gwbp.addressing.in.state.in_hp",defaultMessage:"Himachal Pradesh"}},{code:"IN_JK",name:{id:"gwbp.addressing.in.state.in_jk",defaultMessage:"Jammu & Kashmir"}},{code:"IN_JH",name:{id:"gwbp.addressing.in.state.in_jh",defaultMessage:"Jharkhand"}},{code:"IN_KA",name:{id:"gwbp.addressing.in.state.in_ka",defaultMessage:"Karnataka"}},{code:"IN_KL",name:{id:"gwbp.addressing.in.state.in_kl",defaultMessage:"Kerala"}},{code:"IN_LD",name:{id:"gwbp.addressing.in.state.in_ld",defaultMessage:"Lakshadweep"}},{code:"IN_MP",name:{id:"gwbp.addressing.in.state.in_mp",defaultMessage:"Madhya Pradesh"}},{code:"IN_MH",name:{id:"gwbp.addressing.in.state.in_mh",defaultMessage:"Maharashtra"}},{code:"IN_MN",name:{id:"gwbp.addressing.in.state.in_mn",defaultMessage:"Manipur"}},{code:"IN_ML",name:{id:"gwbp.addressing.in.state.in_ml",defaultMessage:"Meghalaya"}},{code:"IN_MZ",name:{id:"gwbp.addressing.in.state.in_mz",defaultMessage:"Mizoram"}},{code:"IN_NL",name:{id:"gwbp.addressing.in.state.in_nl",defaultMessage:"Nagaland"}},{code:"IN_OR",name:{id:"gwbp.addressing.in.state.in_or",defaultMessage:"Odisha"}},{code:"IN_PY",name:{id:"gwbp.addressing.in.state.in_py",defaultMessage:"Puducherry"}},{code:"IN_PB",name:{id:"gwbp.addressing.in.state.in_pb",defaultMessage:"Punjab"}},{code:"IN_RJ",name:{id:"gwbp.addressing.in.state.in_rj",defaultMessage:"Rajasthan"}},{code:"IN_SK",name:{id:"gwbp.addressing.in.state.in_sk",defaultMessage:"Sikkim"}},{code:"IN_TN",name:{id:"gwbp.addressing.in.state.in_tn",defaultMessage:"Tamil Nadu"}},{code:"IN_TG",name:{id:"gwbp.addressing.in.state.in_tg",defaultMessage:"Telangana"}},{code:"IN_TR",name:{id:"gwbp.addressing.in.state.in_tr",defaultMessage:"Tripura"}},{code:"IN_UP",name:{id:"gwbp.addressing.in.state.in_up",defaultMessage:"Uttar Pradesh"}},{code:"IN_UT",name:{id:"gwbp.addressing.in.state.in_ut",defaultMessage:"Uttarakhand"}},{code:"IN_WB",name:{id:"gwbp.addressing.in.state.in_wb",defaultMessage:"West Bengal"}}]}],requiredFields:["addressLine1","city","state","postalCode"],fieldsLayoutType:"type6"},IT:{country:{id:"gwbp.addressing.country.it",defaultMessage:"Italy"},countryCode:"IT",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"},{name:"province",path:"province",values:[{code:"IT_AG",name:{id:"gwbp.addressing.it.province.it_ag",defaultMessage:"Agrigento"}},{code:"IT_AL",name:{id:"gwbp.addressing.it.province.it_al",defaultMessage:"Alessandria"}},{code:"IT_AN",name:{id:"gwbp.addressing.it.province.it_an",defaultMessage:"Ancona"}},{code:"IT_AO",name:{id:"gwbp.addressing.it.province.it_ao",defaultMessage:"Aosta"}},{code:"IT_AR",name:{id:"gwbp.addressing.it.province.it_ar",defaultMessage:"Arezzo"}},{code:"IT_AP",name:{id:"gwbp.addressing.it.province.it_ap",defaultMessage:"Ascoli Piceno"}},{code:"IT_AT",name:{id:"gwbp.addressing.it.province.it_at",defaultMessage:"Asti"}},{code:"IT_AV",name:{id:"gwbp.addressing.it.province.it_av",defaultMessage:"Avellino"}},{code:"IT_BA",name:{id:"gwbp.addressing.it.province.it_ba",defaultMessage:"Bari"}},{code:"IT_BT",name:{id:"gwbp.addressing.it.province.it_bt",defaultMessage:"Barletta-Andria-Trani"}},{code:"IT_BL",name:{id:"gwbp.addressing.it.province.it_bl",defaultMessage:"Belluno"}},{code:"IT_BN",name:{id:"gwbp.addressing.it.province.it_bn",defaultMessage:"Benevento"}},{code:"IT_BG",name:{id:"gwbp.addressing.it.province.it_bg",defaultMessage:"Bergamo"}},{code:"IT_BI",name:{id:"gwbp.addressing.it.province.it_bi",defaultMessage:"Biella"}},{code:"IT_BO",name:{id:"gwbp.addressing.it.province.it_bo",defaultMessage:"Bologna"}},{code:"IT_BZ",name:{id:"gwbp.addressing.it.province.it_bz",defaultMessage:"Bolzano"}},{code:"IT_BS",name:{id:"gwbp.addressing.it.province.it_bs",defaultMessage:"Brescia"}},{code:"IT_BR",name:{id:"gwbp.addressing.it.province.it_br",defaultMessage:"Brindisi"}},{code:"IT_CA",name:{id:"gwbp.addressing.it.province.it_ca",defaultMessage:"Cagliari"}},{code:"IT_CL",name:{id:"gwbp.addressing.it.province.it_cl",defaultMessage:"Caltanissetta"}},{code:"IT_CB",name:{id:"gwbp.addressing.it.province.it_cb",defaultMessage:"Campobasso"}},{code:"IT_CE",name:{id:"gwbp.addressing.it.province.it_ce",defaultMessage:"Caserta"}},{code:"IT_CT",name:{id:"gwbp.addressing.it.province.it_ct",defaultMessage:"Catania"}},{code:"IT_CZ",name:{id:"gwbp.addressing.it.province.it_cz",defaultMessage:"Catanzaro"}},{code:"IT_CH",name:{id:"gwbp.addressing.it.province.it_ch",defaultMessage:"Chieti"}},{code:"IT_CO",name:{id:"gwbp.addressing.it.province.it_co",defaultMessage:"Como"}},{code:"IT_CS",name:{id:"gwbp.addressing.it.province.it_cs",defaultMessage:"Cosenza"}},{code:"IT_CR",name:{id:"gwbp.addressing.it.province.it_cr",defaultMessage:"Cremona"}},{code:"IT_KR",name:{id:"gwbp.addressing.it.province.it_kr",defaultMessage:"Crotone"}},{code:"IT_CN",name:{id:"gwbp.addressing.it.province.it_cn",defaultMessage:"Cuneo"}},{code:"IT_EN",name:{id:"gwbp.addressing.it.province.it_en",defaultMessage:"Enna"}},{code:"IT_FM",name:{id:"gwbp.addressing.it.province.it_fm",defaultMessage:"Fermo"}},{code:"IT_FE",name:{id:"gwbp.addressing.it.province.it_fe",defaultMessage:"Ferrara"}},{code:"IT_FI",name:{id:"gwbp.addressing.it.province.it_fi",defaultMessage:"Firenze"}},{code:"IT_FG",name:{id:"gwbp.addressing.it.province.it_fg",defaultMessage:"Foggia"}},{code:"IT_FC",name:{id:"gwbp.addressing.it.province.it_fc",defaultMessage:"Forlì-Cesena"}},{code:"IT_FR",name:{id:"gwbp.addressing.it.province.it_fr",defaultMessage:"Frosinone"}},{code:"IT_GE",name:{id:"gwbp.addressing.it.province.it_ge",defaultMessage:"Genova"}},{code:"IT_GO",name:{id:"gwbp.addressing.it.province.it_go",defaultMessage:"Gorizia"}},{code:"IT_GR",name:{id:"gwbp.addressing.it.province.it_gr",defaultMessage:"Grosseto"}},{code:"IT_IM",name:{id:"gwbp.addressing.it.province.it_im",defaultMessage:"Imperia"}},{code:"IT_IS",name:{id:"gwbp.addressing.it.province.it_is",defaultMessage:"Isernia"}},{code:"IT_AQ",name:{id:"gwbp.addressing.it.province.it_aq",defaultMessage:"L'Aquila"}},{code:"IT_SP",name:{id:"gwbp.addressing.it.province.it_sp",defaultMessage:"La Spezia"}},{code:"IT_LT",name:{id:"gwbp.addressing.it.province.it_lt",defaultMessage:"Latina"}},{code:"IT_LE",name:{id:"gwbp.addressing.it.province.it_le",defaultMessage:"Lecce"}},{code:"IT_LC",name:{id:"gwbp.addressing.it.province.it_lc",defaultMessage:"Lecco"}},{code:"IT_LI",name:{id:"gwbp.addressing.it.province.it_li",defaultMessage:"Livorno"}},{code:"IT_LO",name:{id:"gwbp.addressing.it.province.it_lo",defaultMessage:"Lodi"}},{code:"IT_LU",name:{id:"gwbp.addressing.it.province.it_lu",defaultMessage:"Lucca"}},{code:"IT_MC",name:{id:"gwbp.addressing.it.province.it_mc",defaultMessage:"Macerata"}},{code:"IT_MN",name:{id:"gwbp.addressing.it.province.it_mn",defaultMessage:"Mantova"}},{code:"IT_MS",name:{id:"gwbp.addressing.it.province.it_ms",defaultMessage:"Massa-Carrara"}},{code:"IT_MT",name:{id:"gwbp.addressing.it.province.it_mt",defaultMessage:"Matera"}},{code:"IT_ME",name:{id:"gwbp.addressing.it.province.it_me",defaultMessage:"Messina"}},{code:"IT_MI",name:{id:"gwbp.addressing.it.province.it_mi",defaultMessage:"Milano"}},{code:"IT_MO",name:{id:"gwbp.addressing.it.province.it_mo",defaultMessage:"Modena"}},{code:"IT_MB",name:{id:"gwbp.addressing.it.province.it_mb",defaultMessage:"Monza e Brianza"}},{code:"IT_NA",name:{id:"gwbp.addressing.it.province.it_na",defaultMessage:"Napoli"}},{code:"IT_NO",name:{id:"gwbp.addressing.it.province.it_no",defaultMessage:"Novara"}},{code:"IT_NU",name:{id:"gwbp.addressing.it.province.it_nu",defaultMessage:"Nuoro"}},{code:"IT_OR",name:{id:"gwbp.addressing.it.province.it_or",defaultMessage:"Oristano"}},{code:"IT_PD",name:{id:"gwbp.addressing.it.province.it_pd",defaultMessage:"Padova"}},{code:"IT_PA",name:{id:"gwbp.addressing.it.province.it_pa",defaultMessage:"Palermo"}},{code:"IT_PR",name:{id:"gwbp.addressing.it.province.it_pr",defaultMessage:"Parma"}},{code:"IT_PV",name:{id:"gwbp.addressing.it.province.it_pv",defaultMessage:"Pavia"}},{code:"IT_PG",name:{id:"gwbp.addressing.it.province.it_pg",defaultMessage:"Perugia"}},{code:"IT_PU",name:{id:"gwbp.addressing.it.province.it_pu",defaultMessage:"Pesaro e Urbino"}},{code:"IT_PE",name:{id:"gwbp.addressing.it.province.it_pe",defaultMessage:"Pescara"}},{code:"IT_PC",name:{id:"gwbp.addressing.it.province.it_pc",defaultMessage:"Piacenza"}},{code:"IT_PI",name:{id:"gwbp.addressing.it.province.it_pi",defaultMessage:"Pisa"}},{code:"IT_PT",name:{id:"gwbp.addressing.it.province.it_pt",defaultMessage:"Pistoia"}},{code:"IT_PN",name:{id:"gwbp.addressing.it.province.it_pn",defaultMessage:"Pordenone"}},{code:"IT_PZ",name:{id:"gwbp.addressing.it.province.it_pz",defaultMessage:"Potenza"}},{code:"IT_PO",name:{id:"gwbp.addressing.it.province.it_po",defaultMessage:"Prato"}},{code:"IT_RG",name:{id:"gwbp.addressing.it.province.it_rg",defaultMessage:"Ragusa"}},{code:"IT_RA",name:{id:"gwbp.addressing.it.province.it_ra",defaultMessage:"Ravenna"}},{code:"IT_RC",name:{id:"gwbp.addressing.it.province.it_rc",defaultMessage:"Reggio Calabria"}},{code:"IT_RE",name:{id:"gwbp.addressing.it.province.it_re",defaultMessage:"Reggio Emilia"}},{code:"IT_RI",name:{id:"gwbp.addressing.it.province.it_ri",defaultMessage:"Rieti"}},{code:"IT_RN",name:{id:"gwbp.addressing.it.province.it_rn",defaultMessage:"Rimini"}},{code:"IT_RM",name:{id:"gwbp.addressing.it.province.it_rm",defaultMessage:"Roma"}},{code:"IT_RO",name:{id:"gwbp.addressing.it.province.it_ro",defaultMessage:"Rovigo"}},{code:"IT_SA",name:{id:"gwbp.addressing.it.province.it_sa",defaultMessage:"Salerno"}},{code:"IT_SS",name:{id:"gwbp.addressing.it.province.it_ss",defaultMessage:"Sassari"}},{code:"IT_SV",name:{id:"gwbp.addressing.it.province.it_sv",defaultMessage:"Savona"}},{code:"IT_SI",name:{id:"gwbp.addressing.it.province.it_si",defaultMessage:"Siena"}},{code:"IT_SR",name:{id:"gwbp.addressing.it.province.it_sr",defaultMessage:"Siracusa"}},{code:"IT_SO",name:{id:"gwbp.addressing.it.province.it_so",defaultMessage:"Sondrio"}},{code:"IT_SU",name:{id:"gwbp.addressing.it.province.it_su",defaultMessage:"Sud Sardegna"}},{code:"IT_TA",name:{id:"gwbp.addressing.it.province.it_ta",defaultMessage:"Taranto"}},{code:"IT_TE",name:{id:"gwbp.addressing.it.province.it_te",defaultMessage:"Teramo"}},{code:"IT_TR",name:{id:"gwbp.addressing.it.province.it_tr",defaultMessage:"Terni"}},{code:"IT_TO",name:{id:"gwbp.addressing.it.province.it_to",defaultMessage:"Torino"}},{code:"IT_TP",name:{id:"gwbp.addressing.it.province.it_tp",defaultMessage:"Trapani"}},{code:"IT_TN",name:{id:"gwbp.addressing.it.province.it_tn",defaultMessage:"Trento"}},{code:"IT_TV",name:{id:"gwbp.addressing.it.province.it_tv",defaultMessage:"Treviso"}},{code:"IT_TS",name:{id:"gwbp.addressing.it.province.it_ts",defaultMessage:"Trieste"}},{code:"IT_UD",name:{id:"gwbp.addressing.it.province.it_ud",defaultMessage:"Udine"}},{code:"IT_VA",name:{id:"gwbp.addressing.it.province.it_va",defaultMessage:"Varese"}},{code:"IT_VE",name:{id:"gwbp.addressing.it.province.it_ve",defaultMessage:"Venezia"}},{code:"IT_VB",name:{id:"gwbp.addressing.it.province.it_vb",defaultMessage:"Verbano-Cusio-Ossola"}},{code:"IT_VC",name:{id:"gwbp.addressing.it.province.it_vc",defaultMessage:"Vercelli"}},{code:"IT_VR",name:{id:"gwbp.addressing.it.province.it_vr",defaultMessage:"Verona"}},{code:"IT_VV",name:{id:"gwbp.addressing.it.province.it_vv",defaultMessage:"Vibo Valentia"}},{code:"IT_VI",name:{id:"gwbp.addressing.it.province.it_vi",defaultMessage:"Vicenza"}},{code:"IT_VT",name:{id:"gwbp.addressing.it.province.it_vt",defaultMessage:"Viterbo"}}]}],requiredFields:["addressLine1","city","province","postalCode"],fieldsLayoutType:"type1"},JP:{country:{id:"gwbp.addressing.country.jp",defaultMessage:"Japan"},countryCode:"JP",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine1Kanji",path:"addressLine1Kanji"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine2Kanji",path:"addressLine2Kanji"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"cityKanji",path:"cityKanji"},{name:"prefecture",path:"prefecture",values:[{code:"Hokkaido",name:{id:"gwbp.addressing.jp.province.hokkaido",defaultMessage:"Hokkaido"}},{code:"Aomori",name:{id:"gwbp.addressing.jp.province.aomori",defaultMessage:"Aomori"}},{code:"Iwate",name:{id:"gwbp.addressing.jp.province.iwate",defaultMessage:"Iwate"}},{code:"Miyagi",name:{id:"gwbp.addressing.jp.province.miyagi",defaultMessage:"Miyagi"}},{code:"Akita",name:{id:"gwbp.addressing.jp.province.akita",defaultMessage:"Akita"}},{code:"Yamagata",name:{id:"gwbp.addressing.jp.province.yamagata",defaultMessage:"Yamagata"}},{code:"Fukushima",name:{id:"gwbp.addressing.jp.province.fukushima",defaultMessage:"Fukushima"}},{code:"Ibaraki",name:{id:"gwbp.addressing.jp.province.ibaraki",defaultMessage:"Ibaraki"}},{code:"Tochigi",name:{id:"gwbp.addressing.jp.province.tochigi",defaultMessage:"Tochigi"}},{code:"Gumma",name:{id:"gwbp.addressing.jp.province.gumma",defaultMessage:"Gumma"}},{code:"Saitama",name:{id:"gwbp.addressing.jp.province.saitama",defaultMessage:"Saitama"}},{code:"Chiba",name:{id:"gwbp.addressing.jp.province.chiba",defaultMessage:"Chiba"}},{code:"Tokyo",name:{id:"gwbp.addressing.jp.province.tokyo",defaultMessage:"Tokyo"}},{code:"Kanagawa",name:{id:"gwbp.addressing.jp.province.kanagawa",defaultMessage:"Kanagawa"}},{code:"Niigata",name:{id:"gwbp.addressing.jp.province.niigata",defaultMessage:"Niigata"}},{code:"Toyama",name:{id:"gwbp.addressing.jp.province.toyama",defaultMessage:"Toyama"}},{code:"Ishikawa",name:{id:"gwbp.addressing.jp.province.ishikawa",defaultMessage:"Ishikawa"}},{code:"Fukui",name:{id:"gwbp.addressing.jp.province.fukui",defaultMessage:"Fukui"}},{code:"Yamanashi",name:{id:"gwbp.addressing.jp.province.yamanashi",defaultMessage:"Yamanashi"}},{code:"Nagano",name:{id:"gwbp.addressing.jp.province.nagano",defaultMessage:"Nagano"}},{code:"Gifu",name:{id:"gwbp.addressing.jp.province.gifu",defaultMessage:"Gifu"}},{code:"Shizuoka",name:{id:"gwbp.addressing.jp.province.shizuoka",defaultMessage:"Shizuoka"}},{code:"Aichi",name:{id:"gwbp.addressing.jp.province.aichi",defaultMessage:"Aichi"}},{code:"Mie",name:{id:"gwbp.addressing.jp.province.mie",defaultMessage:"Mie"}},{code:"Shiga",name:{id:"gwbp.addressing.jp.province.shiga",defaultMessage:"Shiga"}},{code:"Kyoto",name:{id:"gwbp.addressing.jp.province.kyoto",defaultMessage:"Kyoto"}},{code:"Osaka",name:{id:"gwbp.addressing.jp.province.osaka",defaultMessage:"Osaka"}},{code:"Hyogo",name:{id:"gwbp.addressing.jp.province.hyogo",defaultMessage:"Hyogo"}},{code:"Nara",name:{id:"gwbp.addressing.jp.province.nara",defaultMessage:"Nara"}},{code:"Wakayama",name:{id:"gwbp.addressing.jp.province.wakayama",defaultMessage:"Wakayama"}},{code:"Tottori",name:{id:"gwbp.addressing.jp.province.tottori",defaultMessage:"Tottori"}},{code:"Shimane",name:{id:"gwbp.addressing.jp.province.shimane",defaultMessage:"Shimane"}},{code:"Okayama",name:{id:"gwbp.addressing.jp.province.okayama",defaultMessage:"Okayama"}},{code:"Hiroshima",name:{id:"gwbp.addressing.jp.province.hiroshima",defaultMessage:"Hiroshima"}},{code:"Yamaguchi",name:{id:"gwbp.addressing.jp.province.yamaguchi",defaultMessage:"Yamaguchi"}},{code:"Tokushima",name:{id:"gwbp.addressing.jp.province.tokushima",defaultMessage:"Tokushima"}},{code:"Kagawa",name:{id:"gwbp.addressing.jp.province.kagawa",defaultMessage:"Kagawa"}},{code:"Ehime",name:{id:"gwbp.addressing.jp.province.ehime",defaultMessage:"Ehime"}},{code:"Kochi",name:{id:"gwbp.addressing.jp.province.kochi",defaultMessage:"Kochi"}},{code:"Fukuoka",name:{id:"gwbp.addressing.jp.province.fukuoka",defaultMessage:"Fukuoka"}},{code:"Saga",name:{id:"gwbp.addressing.jp.province.saga",defaultMessage:"Saga"}},{code:"Nagasaki",name:{id:"gwbp.addressing.jp.province.nagasaki",defaultMessage:"Nagasaki"}},{code:"Kumamoto",name:{id:"gwbp.addressing.jp.province.kumamoto",defaultMessage:"Kumamoto"}},{code:"Oita",name:{id:"gwbp.addressing.jp.province.oita",defaultMessage:"Oita"}},{code:"Miyazaki",name:{id:"gwbp.addressing.jp.province.miyazaki",defaultMessage:"Miyazaki"}},{code:"Kagoshima",name:{id:"gwbp.addressing.jp.province.kagoshima",defaultMessage:"Kagoshima"}},{code:"Okinawa",name:{id:"gwbp.addressing.jp.province.okinawa",defaultMessage:"Okinawa"}}]},{name:"postalCode",path:"postalCode",pattern:"^\\d{3}-?\\d{4}$",mask:"999-9999"}],requiredFields:["addressLine1","city","prefecture","postalCode"],fieldsLayoutType:"type4"},MT:{country:{id:"gwbp.addressing.country.mt",defaultMessage:"Malta"},countryCode:"MT",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type2"},MX:{country:{id:"gwbp.addressing.country.mx",defaultMessage:"Mexico"},countryCode:"MX",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"},{name:"state",path:"state"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},MY:{country:{id:"gwbp.addressing.country.my",defaultMessage:"Malaysia"},countryCode:"MY",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"},{name:"state",path:"state"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},NA:{country:{id:"gwbp.addressing.country.na",defaultMessage:"Namibia"},countryCode:"NA",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"}],requiredFields:["addressLine1","city"]},NL:{country:{id:"gwbp.addressing.country.nl",defaultMessage:"Netherlands"},countryCode:"NL",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4} ?[A-Z]{2}$",mask:"9999 aa"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},NO:{country:{id:"gwbp.addressing.country.no",defaultMessage:"Norway"},countryCode:"NO",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},NZ:{country:{id:"gwbp.addressing.country.nz",defaultMessage:"New Zealand"},countryCode:"NZ",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type2"},PH:{country:{id:"gwbp.addressing.country.ph",defaultMessage:"Philippines"},countryCode:"PH",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode"},{name:"province",path:"province"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type2"},PL:{country:{id:"gwbp.addressing.country.pl",defaultMessage:"Poland"},countryCode:"PL",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{2}-\\d{3}$",mask:"99-999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},PT:{country:{id:"gwbp.addressing.country.pt",defaultMessage:"Portugal"},countryCode:"PT",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}-\\d{3}$",mask:"9999-999"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},RO:{country:{id:"gwbp.addressing.country.ro",defaultMessage:"Romania"},countryCode:"RO",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},RU:{country:{id:"gwbp.addressing.country.ru",defaultMessage:"Russian Federation"},countryCode:"RU",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"city",path:"city"},{name:"oblast",path:"oblast"},{name:"postalCode",path:"postalCode",pattern:"^\\d{6}$",mask:"999999"}],requiredFields:["addressLine1","city","oblast","postalCode"],fieldsLayoutType:"type3"},SE:{country:{id:"gwbp.addressing.country.se",defaultMessage:"Sweden"},countryCode:"SE",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{3} ?\\d{2}$",mask:"999 99"},{name:"city",path:"city"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type1"},SG:{country:{id:"gwbp.addressing.country.sg",defaultMessage:"Rep. Of Singapore"},countryCode:"SG",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{6}$",mask:"999999"}],requiredFields:["addressLine1","postalCode"],fieldsLayoutType:"type5"},SK:{country:{id:"gwbp.addressing.country.sk",defaultMessage:"Slovakia"},countryCode:"SK",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},TH:{country:{id:"gwbp.addressing.country.th",defaultMessage:"Thailand"},countryCode:"TH",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"city",path:"city"},{name:"province",path:"province"},{name:"postalCode",path:"postalCode"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type3"},US:{country:{id:"gwbp.addressing.country.us",defaultMessage:"United States"},countryCode:"US",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"city",path:"city"},{name:"county",path:"county"},{name:"state",path:"state",values:[{code:"AL",name:{id:"gwbp.addressing.us.state.al",defaultMessage:"Alabama"}},{code:"AK",name:{id:"gwbp.addressing.us.state.ak",defaultMessage:"Alaska"}},{code:"AZ",name:{id:"gwbp.addressing.us.state.az",defaultMessage:"Arizona"}},{code:"AR",name:{id:"gwbp.addressing.us.state.ar",defaultMessage:"Arkansas"}},{code:"CA",name:{id:"gwbp.addressing.us.state.ca",defaultMessage:"California"}},{code:"CO",name:{id:"gwbp.addressing.us.state.co",defaultMessage:"Colorado"}},{code:"CT",name:{id:"gwbp.addressing.us.state.ct",defaultMessage:"Connecticut"}},{code:"DE",name:{id:"gwbp.addressing.us.state.de",defaultMessage:"Delaware"}},{code:"DC",name:{id:"gwbp.addressing.us.state.dc",defaultMessage:"District of Columbia"}},{code:"FM",name:{id:"gwbp.addressing.us.state.fm",defaultMessage:"Federated States of Micronesia"}},{code:"FL",name:{id:"gwbp.addressing.us.state.fl",defaultMessage:"Florida"}},{code:"GA",name:{id:"gwbp.addressing.us.state.ga",defaultMessage:"Georgia"}},{code:"GU",name:{id:"gwbp.addressing.us.state.gu",defaultMessage:"Guam"}},{code:"HI",name:{id:"gwbp.addressing.us.state.hi",defaultMessage:"Hawaii"}},{code:"ID",name:{id:"gwbp.addressing.us.state.id",defaultMessage:"Idaho"}},{code:"IL",name:{id:"gwbp.addressing.us.state.il",defaultMessage:"Illinois"}},{code:"IN",name:{id:"gwbp.addressing.us.state.in",defaultMessage:"Indiana"}},{code:"IA",name:{id:"gwbp.addressing.us.state.ia",defaultMessage:"Iowa"}},{code:"KS",name:{id:"gwbp.addressing.us.state.ks",defaultMessage:"Kansas"}},{code:"KY",name:{id:"gwbp.addressing.us.state.ky",defaultMessage:"Kentucky"}},{code:"LA",name:{id:"gwbp.addressing.us.state.la",defaultMessage:"Louisiana"}},{code:"ME",name:{id:"gwbp.addressing.us.state.me",defaultMessage:"Maine"}},{code:"MH",name:{id:"gwbp.addressing.us.state.mh",defaultMessage:"Marshall Islands"}},{code:"MD",name:{id:"gwbp.addressing.us.state.md",defaultMessage:"Maryland"}},{code:"MA",name:{id:"gwbp.addressing.us.state.ma",defaultMessage:"Massachusetts"}},{code:"MI",name:{id:"gwbp.addressing.us.state.mi",defaultMessage:"Michigan"}},{code:"MN",name:{id:"gwbp.addressing.us.state.mn",defaultMessage:"Minnesota"}},{code:"MS",name:{id:"gwbp.addressing.us.state.ms",defaultMessage:"Mississippi"}},{code:"MO",name:{id:"gwbp.addressing.us.state.mo",defaultMessage:"Missouri"}},{code:"MT",name:{id:"gwbp.addressing.us.state.mt",defaultMessage:"Montana"}},{code:"NE",name:{id:"gwbp.addressing.us.state.ne",defaultMessage:"Nebraska"}},{code:"NV",name:{id:"gwbp.addressing.us.state.nv",defaultMessage:"Nevada"}},{code:"NH",name:{id:"gwbp.addressing.us.state.nh",defaultMessage:"New Hampshire"}},{code:"NJ",name:{id:"gwbp.addressing.us.state.nj",defaultMessage:"New Jersey"}},{code:"NM",name:{id:"gwbp.addressing.us.state.nm",defaultMessage:"New Mexico"}},{code:"NY",name:{id:"gwbp.addressing.us.state.ny",defaultMessage:"New York"}},{code:"NC",name:{id:"gwbp.addressing.us.state.nc",defaultMessage:"North Carolina"}},{code:"ND",name:{id:"gwbp.addressing.us.state.nd",defaultMessage:"North Dakota"}},{code:"MP",name:{id:"gwbp.addressing.us.state.mp",defaultMessage:"Northern Mariana Islands"}},{code:"OH",name:{id:"gwbp.addressing.us.state.oh",defaultMessage:"Ohio"}},{code:"OK",name:{id:"gwbp.addressing.us.state.ok",defaultMessage:"Oklahoma"}},{code:"OR",name:{id:"gwbp.addressing.us.state.or",defaultMessage:"Oregon"}},{code:"PA",name:{id:"gwbp.addressing.us.state.pa",defaultMessage:"Pennsylvania"}},{code:"PR",name:{id:"gwbp.addressing.us.state.pr",defaultMessage:"Puerto Rico"}},{code:"RI",name:{id:"gwbp.addressing.us.state.ri",defaultMessage:"Rhode Island"}},{code:"SC",name:{id:"gwbp.addressing.us.state.sc",defaultMessage:"South Carolina"}},{code:"SD",name:{id:"gwbp.addressing.us.state.sd",defaultMessage:"South Dakota"}},{code:"TN",name:{id:"gwbp.addressing.us.state.tn",defaultMessage:"Tennessee"}},{code:"TX",name:{id:"gwbp.addressing.us.state.tx",defaultMessage:"Texas"}},{code:"UT",name:{id:"gwbp.addressing.us.state.ut",defaultMessage:"Utah"}},{code:"VT",name:{id:"gwbp.addressing.us.state.vt",defaultMessage:"Vermont"}},{code:"VI",name:{id:"gwbp.addressing.us.state.vi",defaultMessage:"Virgin Islands"}},{code:"VA",name:{id:"gwbp.addressing.us.state.va",defaultMessage:"Virginia"}},{code:"WA",name:{id:"gwbp.addressing.us.state.wa",defaultMessage:"Washington"}},{code:"WV",name:{id:"gwbp.addressing.us.state.wv",defaultMessage:"West Virginia"}},{code:"WI",name:{id:"gwbp.addressing.us.state.wi",defaultMessage:"Wisconsin"}},{code:"WY",name:{id:"gwbp.addressing.us.state.wy",defaultMessage:"Wyoming"}}]},{name:"postalCode",path:"postalCode",label:{id:"gwbp.addressing.US.postalCode",defaultMessage:"ZIP Code"},pattern:"^(\\d{5})(?:[ \\-](\\d{4}))?$",tooltip:{text:{id:"gwbp.addressing.tooltip.us",defaultMessage:"Correct postal code example: 10466, 12345-6789"}}}],requiredFields:["addressLine1","city","state","postalCode"],fieldsLayoutType:"type4"},UY:{country:{id:"gwbp.addressing.country.uy",defaultMessage:"Uruguay"},countryCode:"UY",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode",pattern:"^\\d{5}$",mask:"99999"},{name:"city",path:"city"},{name:"department",path:"department",values:[{code:"UY_AR",name:{id:"gwbp.addressing.uy.department.uy_ar",defaultMessage:"Artigas"}},{code:"UY_CA",name:{id:"gwbp.addressing.uy.department.uy_ca",defaultMessage:"Canelones"}},{code:"UY_CL",name:{id:"gwbp.addressing.uy.department.uy_cl",defaultMessage:"Cerro Largo"}},{code:"UY_CO",name:{id:"gwbp.addressing.uy.department.uy_co",defaultMessage:"Colonia"}},{code:"UY_DU",name:{id:"gwbp.addressing.uy.department.uy_du",defaultMessage:"Durazno"}},{code:"UY_FS",name:{id:"gwbp.addressing.uy.department.uy_fs",defaultMessage:"Flores"}},{code:"UY_FD",name:{id:"gwbp.addressing.uy.department.uy_fd",defaultMessage:"Florida"}},{code:"UY_LA",name:{id:"gwbp.addressing.uy.department.uy_la",defaultMessage:"Lavalleja"}},{code:"UY_MA",name:{id:"gwbp.addressing.uy.department.uy_ma",defaultMessage:"Maldonado"}},{code:"UY_MO",name:{id:"gwbp.addressing.uy.department.uy_mo",defaultMessage:"Montevideo"}},{code:"UY_PA",name:{id:"gwbp.addressing.uy.department.uy_pa",defaultMessage:"Paysandú"}},{code:"UY_RN",name:{id:"gwbp.addressing.uy.department.uy_rn",defaultMessage:"Río Negro"}},{code:"UY_RV",name:{id:"gwbp.addressing.uy.department.uy_rv",defaultMessage:"Rivera"}},{code:"UY_RO",name:{id:"gwbp.addressing.uy.department.uy_ro",defaultMessage:"Rocha"}},{code:"UY_SA",name:{id:"gwbp.addressing.uy.department.uy_sa",defaultMessage:"Salto"}},{code:"UY_SJ",name:{id:"gwbp.addressing.uy.department.uy_sj",defaultMessage:"San José"}},{code:"UY_SO",name:{id:"gwbp.addressing.uy.department.uy_so",defaultMessage:"Soriano"}},{code:"UY_TA",name:{id:"gwbp.addressing.uy.department.uy_ta",defaultMessage:"Tacuarembó"}},{code:"UY_TT",name:{id:"gwbp.addressing.uy.department.uy_tt",defaultMessage:"Treinta y Tres"}}]}],requiredFields:["addressLine1","department","postalCode"],fieldsLayoutType:"type1"},ZA:{country:{id:"gwbp.addressing.country.za",defaultMessage:"South Africa"},countryCode:"ZA",fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"dependentLocality",path:"dependentLocality"},{name:"city",path:"city"},{name:"postalCode",path:"postalCode",pattern:"^\\d{4}$",mask:"9999"}],requiredFields:["addressLine1","city","postalCode"],fieldsLayoutType:"type2"},defaultCountryForm:{fields:[{name:"addressLine1",path:"addressLine1"},{name:"addressLine2",path:"addressLine2"},{name:"addressLine3",path:"addressLine3"},{name:"postalCode",path:"postalCode"},{name:"city",path:"city"}],requiredFields:["addressLine1","city"],fieldsLayoutType:"type1"},jutro:"6.2.0-next-20210506123804",$schema:"../../../../node_modules/@jutro/uimetadata/common/json-schema/metadata.schema.json"}},"./src/defaultCountryData/index.js":function(module,exports,__webpack_require__){"use strict";var _interopRequireDefault=__webpack_require__("@babel/runtime-corejs3/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"countriesAddressData",{enumerable:!0,get:function(){return _defaultCountriesMetadata.default}}),exports.defaultCountryForm=exports.ZA=exports.UY=exports.US=exports.TH=exports.SK=exports.SG=exports.SE=exports.RU=exports.RO=exports.PT=exports.PL=exports.PH=exports.NZ=exports.NO=exports.NL=exports.NA=exports.MY=exports.MX=exports.MT=exports.JP=exports.IT=exports.IN=exports.ID=exports.HU=exports.HK=exports.GB=exports.FR=exports.FI=exports.ES=exports.DK=exports.DE=exports.CO=exports.CH=exports.CA=exports.BR=exports.BG=exports.BE=exports.AU=exports.AT=exports.AR=void 0;var _defaultCountriesMetadata=_interopRequireDefault(__webpack_require__("./src/defaultCountryData/defaultCountries.metadata.json5")),AR=_defaultCountriesMetadata.default.AR;exports.AR=AR;var AT=_defaultCountriesMetadata.default.AT;exports.AT=AT;var AU=_defaultCountriesMetadata.default.AU;exports.AU=AU;var BE=_defaultCountriesMetadata.default.BE;exports.BE=BE;var BG=_defaultCountriesMetadata.default.BG;exports.BG=BG;var BR=_defaultCountriesMetadata.default.BR;exports.BR=BR;var CA=_defaultCountriesMetadata.default.CA;exports.CA=CA;var CH=_defaultCountriesMetadata.default.CH;exports.CH=CH;var CO=_defaultCountriesMetadata.default.CO;exports.CO=CO;var DE=_defaultCountriesMetadata.default.DE;exports.DE=DE;var DK=_defaultCountriesMetadata.default.DK;exports.DK=DK;var ES=_defaultCountriesMetadata.default.ES;exports.ES=ES;var FI=_defaultCountriesMetadata.default.FI;exports.FI=FI;var FR=_defaultCountriesMetadata.default.FR;exports.FR=FR;var GB=_defaultCountriesMetadata.default.GB;exports.GB=GB;var HK=_defaultCountriesMetadata.default.HK;exports.HK=HK;var HU=_defaultCountriesMetadata.default.HU;exports.HU=HU;var ID=_defaultCountriesMetadata.default.ID;exports.ID=ID;var IN=_defaultCountriesMetadata.default.IN;exports.IN=IN;var IT=_defaultCountriesMetadata.default.IT;exports.IT=IT;var JP=_defaultCountriesMetadata.default.JP;exports.JP=JP;var MT=_defaultCountriesMetadata.default.MT;exports.MT=MT;var MX=_defaultCountriesMetadata.default.MX;exports.MX=MX;var MY=_defaultCountriesMetadata.default.MY;exports.MY=MY;var NA=_defaultCountriesMetadata.default.NA;exports.NA=NA;var NL=_defaultCountriesMetadata.default.NL;exports.NL=NL;var NO=_defaultCountriesMetadata.default.NO;exports.NO=NO;var NZ=_defaultCountriesMetadata.default.NZ;exports.NZ=NZ;var PH=_defaultCountriesMetadata.default.PH;exports.PH=PH;var PL=_defaultCountriesMetadata.default.PL;exports.PL=PL;var PT=_defaultCountriesMetadata.default.PT;exports.PT=PT;var RO=_defaultCountriesMetadata.default.RO;exports.RO=RO;var RU=_defaultCountriesMetadata.default.RU;exports.RU=RU;var SE=_defaultCountriesMetadata.default.SE;exports.SE=SE;var SG=_defaultCountriesMetadata.default.SG;exports.SG=SG;var SK=_defaultCountriesMetadata.default.SK;exports.SK=SK;var TH=_defaultCountriesMetadata.default.TH;exports.TH=TH;var US=_defaultCountriesMetadata.default.US;exports.US=US;var UY=_defaultCountriesMetadata.default.UY;exports.UY=UY;var ZA=_defaultCountriesMetadata.default.ZA;exports.ZA=ZA;var defaultCountryForm=_defaultCountriesMetadata.default.defaultCountryForm;exports.defaultCountryForm=defaultCountryForm},"./src/index.js":function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"AddressComponent",{enumerable:!0,get:function(){return _AddressComponent.AddressComponent}}),Object.defineProperty(exports,"AR",{enumerable:!0,get:function(){return _defaultCountryData.AR}}),Object.defineProperty(exports,"AT",{enumerable:!0,get:function(){return _defaultCountryData.AT}}),Object.defineProperty(exports,"AU",{enumerable:!0,get:function(){return _defaultCountryData.AU}}),Object.defineProperty(exports,"BE",{enumerable:!0,get:function(){return _defaultCountryData.BE}}),Object.defineProperty(exports,"BG",{enumerable:!0,get:function(){return _defaultCountryData.BG}}),Object.defineProperty(exports,"BR",{enumerable:!0,get:function(){return _defaultCountryData.BR}}),Object.defineProperty(exports,"CA",{enumerable:!0,get:function(){return _defaultCountryData.CA}}),Object.defineProperty(exports,"CH",{enumerable:!0,get:function(){return _defaultCountryData.CH}}),Object.defineProperty(exports,"CO",{enumerable:!0,get:function(){return _defaultCountryData.CO}}),Object.defineProperty(exports,"DE",{enumerable:!0,get:function(){return _defaultCountryData.DE}}),Object.defineProperty(exports,"DK",{enumerable:!0,get:function(){return _defaultCountryData.DK}}),Object.defineProperty(exports,"ES",{enumerable:!0,get:function(){return _defaultCountryData.ES}}),Object.defineProperty(exports,"FI",{enumerable:!0,get:function(){return _defaultCountryData.FI}}),Object.defineProperty(exports,"FR",{enumerable:!0,get:function(){return _defaultCountryData.FR}}),Object.defineProperty(exports,"GB",{enumerable:!0,get:function(){return _defaultCountryData.GB}}),Object.defineProperty(exports,"HK",{enumerable:!0,get:function(){return _defaultCountryData.HK}}),Object.defineProperty(exports,"HU",{enumerable:!0,get:function(){return _defaultCountryData.HU}}),Object.defineProperty(exports,"ID",{enumerable:!0,get:function(){return _defaultCountryData.ID}}),Object.defineProperty(exports,"IN",{enumerable:!0,get:function(){return _defaultCountryData.IN}}),Object.defineProperty(exports,"IT",{enumerable:!0,get:function(){return _defaultCountryData.IT}}),Object.defineProperty(exports,"JP",{enumerable:!0,get:function(){return _defaultCountryData.JP}}),Object.defineProperty(exports,"MT",{enumerable:!0,get:function(){return _defaultCountryData.MT}}),Object.defineProperty(exports,"MX",{enumerable:!0,get:function(){return _defaultCountryData.MX}}),Object.defineProperty(exports,"MY",{enumerable:!0,get:function(){return _defaultCountryData.MY}}),Object.defineProperty(exports,"NA",{enumerable:!0,get:function(){return _defaultCountryData.NA}}),Object.defineProperty(exports,"NL",{enumerable:!0,get:function(){return _defaultCountryData.NL}}),Object.defineProperty(exports,"NO",{enumerable:!0,get:function(){return _defaultCountryData.NO}}),Object.defineProperty(exports,"NZ",{enumerable:!0,get:function(){return _defaultCountryData.NZ}}),Object.defineProperty(exports,"PH",{enumerable:!0,get:function(){return _defaultCountryData.PH}}),Object.defineProperty(exports,"PL",{enumerable:!0,get:function(){return _defaultCountryData.PL}}),Object.defineProperty(exports,"PT",{enumerable:!0,get:function(){return _defaultCountryData.PT}}),Object.defineProperty(exports,"RO",{enumerable:!0,get:function(){return _defaultCountryData.RO}}),Object.defineProperty(exports,"RU",{enumerable:!0,get:function(){return _defaultCountryData.RU}}),Object.defineProperty(exports,"SE",{enumerable:!0,get:function(){return _defaultCountryData.SE}}),Object.defineProperty(exports,"SG",{enumerable:!0,get:function(){return _defaultCountryData.SG}}),Object.defineProperty(exports,"SK",{enumerable:!0,get:function(){return _defaultCountryData.SK}}),Object.defineProperty(exports,"TH",{enumerable:!0,get:function(){return _defaultCountryData.TH}}),Object.defineProperty(exports,"US",{enumerable:!0,get:function(){return _defaultCountryData.US}}),Object.defineProperty(exports,"UY",{enumerable:!0,get:function(){return _defaultCountryData.UY}}),Object.defineProperty(exports,"ZA",{enumerable:!0,get:function(){return _defaultCountryData.ZA}}),Object.defineProperty(exports,"countriesAddressData",{enumerable:!0,get:function(){return _defaultCountryData.countriesAddressData}});var _AddressComponent=__webpack_require__("./src/AddressComponent.js"),_defaultCountryData=__webpack_require__("./src/defaultCountryData/index.js")},"@babel/runtime-corejs3/core-js-stable/instance/concat":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/concat")},"@babel/runtime-corejs3/core-js-stable/instance/ends-with":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/ends-with")},"@babel/runtime-corejs3/core-js-stable/instance/filter":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/filter")},"@babel/runtime-corejs3/core-js-stable/instance/includes":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/includes")},"@babel/runtime-corejs3/core-js-stable/instance/map":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/map")},"@babel/runtime-corejs3/core-js-stable/instance/reverse":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/reverse")},"@babel/runtime-corejs3/core-js-stable/instance/sort":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/sort")},"@babel/runtime-corejs3/core-js-stable/instance/values":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/instance/values")},"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor")},"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors")},"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols")},"@babel/runtime-corejs3/core-js-stable/object/keys":function(module,exports){module.exports=require("@babel/runtime-corejs3/core-js-stable/object/keys")},"@babel/runtime-corejs3/helpers/defineProperty":function(module,exports){module.exports=require("@babel/runtime-corejs3/helpers/defineProperty")},"@babel/runtime-corejs3/helpers/interopRequireDefault":function(module,exports){module.exports=require("@babel/runtime-corejs3/helpers/interopRequireDefault")},"@babel/runtime-corejs3/helpers/interopRequireWildcard":function(module,exports){module.exports=require("@babel/runtime-corejs3/helpers/interopRequireWildcard")},"@babel/runtime-corejs3/helpers/slicedToArray":function(module,exports){module.exports=require("@babel/runtime-corejs3/helpers/slicedToArray")},"@jutro/components":function(module,exports){module.exports=require("@jutro/components")},"@jutro/layout":function(module,exports){module.exports=require("@jutro/layout")},"@jutro/locale":function(module,exports){module.exports=require("@jutro/locale")},"@jutro/prop-types":function(module,exports){module.exports=require("@jutro/prop-types")},"@jutro/uiconfig":function(module,exports){module.exports=require("@jutro/uiconfig")},"core-js/modules/web.dom-collections.for-each.js":function(module,exports){module.exports=require("core-js/modules/web.dom-collections.for-each.js")},"lodash/isEmpty":function(module,exports){module.exports=require("lodash/isEmpty")},"lodash/isEqual":function(module,exports){module.exports=require("lodash/isEqual")},"lodash/isObject":function(module,exports){module.exports=require("lodash/isObject")},"lodash/omit":function(module,exports){module.exports=require("lodash/omit")},"lodash/pickBy":function(module,exports){module.exports=require("lodash/pickBy")},"lodash/set":function(module,exports){module.exports=require("lodash/set")},"prop-types":function(module,exports){module.exports=require("prop-types")},react:function(module,exports){module.exports=require("react")}});
//# sourceMappingURL=index.js.map