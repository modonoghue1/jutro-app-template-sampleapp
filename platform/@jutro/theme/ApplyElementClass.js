import{useRef,useLayoutEffect}from"react";export const ApplyElementClass=({element:element,className:className})=>(function({element:element,className:className}){const isUnmounting=useRef(!1),previousRef=useRef({updateTime:0,className:""});className!==previousRef.current.className&&(reconcileElementClass(element,previousRef.current.className,className),previousRef.current={updateTime:Date.now()+counter,className:className},counter+=1,elementStatusRegistry.set(element,previousRef.current));useLayoutEffect((()=>()=>{isUnmounting.current=!0}),[]),useLayoutEffect((()=>()=>{if(isUnmounting.current){const lastUpdateElementStatus=elementStatusRegistry.get(element);if(lastUpdateElementStatus&&(lastUpdateElementStatus.className!==className||lastUpdateElementStatus.updateTime>previousRef.current.updateTime)){const oldClasses=className.split(" "),newClasses=lastUpdateElementStatus.className.split(" ");return void reconcileElementClass(element,oldClasses.filter((oldClass=>!newClasses.includes(oldClass))).join(" "))}reconcileElementClass(element,className),elementStatusRegistry.delete(element)}}),[element,className])}({element:element,className:className}),null);function reconcileElementClass(element,prevClass,newClass){prevClass&&element.classList.remove(...prevClass.split(" ")),newClass&&element.classList.add(...newClass.split(" "))}const elementStatusRegistry=new WeakMap;let counter=0;