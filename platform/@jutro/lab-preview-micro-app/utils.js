import camelCase from"lodash/camelCase";import isUndefined from"lodash/isUndefined";import merge from"lodash/merge";import omit from"lodash/omit";import omitBy from"lodash/omitBy";import upperFirst from"lodash/upperFirst";export const formatPackageName=remoteScope=>upperFirst(camelCase(remoteScope));export const buildRendererName=remoteScope=>`render${formatPackageName(remoteScope)}`;export const buildUnmounterName=remoteScope=>`unmount${formatPackageName(remoteScope)}`;export const buildRendererTargetId=remoteScope=>`micro-app-container-${remoteScope}`;export const extractRemoteScope=rendererTargetId=>rendererTargetId.replace("micro-app-container-","");export const getNamespacedProps=allProps=>{const messageLoader=allProps.messageLoader,coreMessageLoader=allProps.coreMessageLoader,intlTextComponent=allProps.intlTextComponent,onAuthSessionExpired=allProps.onAuthSessionExpired,launchPropOverrides=allProps.launchPropOverrides,componentMapExtensions=allProps.componentMapExtensions,configOverrides=allProps.configOverrides,launchProps=omitBy({messageLoader:messageLoader,coreMessageLoader:coreMessageLoader,intlTextComponent:intlTextComponent,onAuthSessionExpired:onAuthSessionExpired},isUndefined),propOverrides=omitBy({launchPropOverrides:launchPropOverrides,configOverrides:configOverrides,componentMapExtensions:componentMapExtensions},isUndefined);return merge({},{jutro:{launchPropOverrides:launchProps}},{jutro:propOverrides},allProps)};export const applyDevProps=props=>{const devProps=props.devProps;if(!devProps)return props;const microAppPropsWithDevProps=props;return microAppPropsWithDevProps.devProps?omit(microAppPropsWithDevProps,["devProps"]):microAppPropsWithDevProps};