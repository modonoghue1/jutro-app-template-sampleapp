import{debug}from"@jutro/logger";export const getSharedLibs=()=>{const sharedLibs={};try{sharedLibs.React=require("react")}catch(e){handleImportError(e)}try{sharedLibs.ReactDOM=require("react-dom")}catch(e){handleImportError(e)}try{sharedLibs.ReactRouter=require("react-router")}catch(e){handleImportError(e)}try{sharedLibs.ReactRouterDOM=require("react-router-dom")}catch(e){handleImportError(e)}try{sharedLibs.ReactIntl=require("react-intl")}catch(e){handleImportError(e)}try{sharedLibs.jutroComponents=require("@jutro/components")}catch(e){handleImportError(e)}try{sharedLibs.jutroDatatable=require("@jutro/datatable")}catch(e){handleImportError(e)}try{sharedLibs.jutroLabPreviewComponents=require("@jutro/lab-preview-components")}catch(e){handleImportError(e)}try{sharedLibs.jutroLayout=require("@jutro/layout")}catch(e){handleImportError(e)}try{sharedLibs.jutroLocale=require("@jutro/locale")}catch(e){handleImportError(e)}try{sharedLibs.jutroLogger=require("@jutro/logger")}catch(e){handleImportError(e)}try{sharedLibs.jutroPlatform=require("@jutro/platform")}catch(e){handleImportError(e)}try{sharedLibs.jutroRouter=require("@jutro/router")}catch(e){handleImportError(e)}try{sharedLibs.jutroServices=require("@jutro/services")}catch(e){handleImportError(e)}try{sharedLibs.jutroTheme=require("@jutro/theme")}catch(e){handleImportError(e)}try{sharedLibs.jutroTransport=require("@jutro/transport")}catch(e){handleImportError(e)}try{sharedLibs.jutroUIConfig=require("@jutro/uiconfig")}catch(e){handleImportError(e)}try{sharedLibs.jutroUIMetadata=require("@jutro/uimetadata")}catch(e){handleImportError(e)}try{sharedLibs.jutroValidation=require("@jutro/validation")}catch(e){handleImportError(e)}try{sharedLibs.jutroWizardNext=require("@jutro/wizard-next")}catch(e){handleImportError(e)}try{sharedLibs.jutroAuth=require("@jutro/auth")}catch(e){handleImportError(e)}try{sharedLibs.jutroFloorPlan=require("@jutro/floorplan")}catch(e){handleImportError(e)}try{sharedLibs.jutroThemeStyles=require("@jutro/theme-styles")}catch(e){handleImportError(e)}return sharedLibs};const handleImportError=error=>{debug(`Unable to require and share package with micro-app: ${error.message}`)};