import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _ from"lodash";import{sha256}from"js-sha256";import{log}from"@jutro/logger";import ImplDescriptor from"./ImplDescriptor";let Contract=function(){function Contract(specification,...extended){_classCallCheck(this,Contract),this.spec=_.merge(...extended.map((c=>c.spec)),specification),this.hashFunc=_.memoize((()=>{const keyTar=Object.keys(this.spec).sort().join("");return sha256(keyTar)}))}return _createClass(Contract,[{key:"implementedBy",value:function(implementor){const descriptor=new ImplDescriptor(implementor);let adheres=!0;const members=descriptor.getMembers();return Object.getOwnPropertyNames(this.spec).forEach((specKey=>{const member=descriptor.getMember(specKey);member&&typeof member===this.spec[specKey]||(log.warning(members.includes(specKey)?`Invalid type for ${specKey}: '${typeof member}' is not of type '${this.spec[specKey]}'`:`Missing member: ${specKey}`),adheres=!1)})),adheres}},{key:"hash",value:function(){return this.hashFunc()}},{key:"toString",value:function(){return`contract {${Object.keys(this.spec).join(",")}}`}}],[{key:"specify",value:function(specification){return new Contract(specification)}}]),Contract}();export{Contract as default};