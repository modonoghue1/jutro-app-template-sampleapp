import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";function getPrototype(obj){return obj.prototype||Object.getPrototypeOf(obj)}let ImplDescriptor=function(){function ImplDescriptor(objOrFunc){_classCallCheck(this,ImplDescriptor),this.instance=objOrFunc,this.allPrototypes=function(object){let proto=getPrototype(object);const protos=[];for(;null!=proto&&proto!==Object.prototype;)protos.push(proto),proto=getPrototype(proto);return protos}(objOrFunc)}return _createClass(ImplDescriptor,[{key:"findPrototypeMember",value:function(name){const proto=this.allPrototypes.find((p=>void 0!==p[name]));return proto?proto[name]:void 0}},{key:"getMembers",value:function(){const keys=new Set([...Object.getOwnPropertyNames(this.instance),...this.allPrototypes.map((p=>Object.getOwnPropertyNames(p)))].filter((k=>"prototype"!==k&&"constructor"!==k)));return Array.from(keys)}},{key:"getMember",value:function(name){return this.instance[name]||this.findPrototypeMember(name)}},{key:"hasMember",value:function(name){return void 0!==this.getMember(name)}}]),ImplDescriptor}();export{ImplDescriptor as default};