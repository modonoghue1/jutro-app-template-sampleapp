module.exports = {
    extends: ['airbnb', 'plugin:jsx-a11y/recommended', 'prettier'],
    settings: {
        react: {
            version: '17.0',
        },
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: [
        '@typescript-eslint',
        'react',
        'jsx-a11y',
        'no-only-tests',
        'react-hooks',
    ],
    env: {
        browser: true,
    },
    globals: {
        require: false,
        define: false,
        console: false,
        $: false,
        inject: false,
        module: false,
        it: false,
        xit: false,
        describe: false,
        xdescribe: false,
        beforeAll: false,
        afterAll: false,
        expect: false,
        spyOn: false,
        beforeEach: false,
        waits: false,
        waitsFor: false,
        jest: true,
        runs: false,
        analytics: true,
        afterEach: true,
        fail: true,
        chai: false,
        sinon: false,
        shallow: false,
        render: false,
        mount: false,
        util: false,
        __BUILD_PARAMS__: false,
        __DEV__: false,
        __TEST__: false,
        __PROD__: false,
        __DEMO__: false,
        __FULL_ENV__: false,
        envConfig: false,
        browser: true,
        globalThis: true,
    },
    rules: {
        'arrow-body-style': 'off',
        'arrow-parens': 'off',
        camelcase: [
            'warn',
            {
                allow: [/\w+_DEPRECATED/.source, /\w+_OLD/.source],
            },
        ],
        'class-methods-use-this': 'off',
        'comma-dangle': 'off',
        'consistent-return': 'off',
        'eol-last': 'off',
        'func-names': 'off',
        'global-require': 'off',
        'no-case-declarations': 'off',
        'no-console': 'off',
        'no-param-reassign': 'off',
        'no-plusplus': 'off',
        'no-prototype-builtins': 'off',
        'no-restricted-syntax': ['error', 'LabeledStatement', 'WithStatement'],
        'no-underscore-dangle': 'off',
        'no-unused-vars': [
            'error',
            {
                ignoreRestSiblings: true,
            },
        ],
        'no-unused-expressions': 'off',
        'no-use-before-define': 'off',
        'no-warning-comments': 'error',
        'object-shorthand': 'off',
        'prefer-destructuring': 'off',
        'prefer-promise-reject-errors': 'off',
        radix: 'off',
        'require-jsdoc': 'off',
        'spaced-comment': [
            'error',
            'always',
            {
                exceptions: ['-', '+', '*'],
                markers: ['/', '!', ','],
            },
        ],
        'valid-jsdoc': [
            'error',
            {
                requireParamDescription: false,
                requireReturnDescription: false,
                requireReturn: false,
                prefer: {
                    return: 'returns',
                },
            },
        ],
        'import/extensions': 'off',
        'import/first': 'off',
        'import/no-dynamic-require': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/no-mutable-exports': 'off',
        'import/no-named-as-default': 'off',
        'import/no-unresolved': 'off',
        'import/no-webpack-loader-syntax': 'off',
        'import/prefer-default-export': 'off',
        'no-only-tests/no-only-tests': 'error',
        'react-hooks/exhaustive-deps': 'warn',
        'react-hooks/rules-of-hooks': 'error',
        'react/button-has-type': 'off',
        'react/default-props-match-prop-types': 'off',
        'react/destructuring-assignment': 'off',
        'react/forbid-foreign-prop-types': 'off',
        'react/forbid-prop-types': 'off',
        'react/jsx-curly-newline': 'off',
        'react/jsx-filename-extension': 'off',
        'react/jsx-fragments': ['error', 'element'],
        'react/jsx-indent': ['error', 4],
        'react/jsx-indent-props': ['error', 4],
        'react/jsx-one-expression-per-line': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/jsx-wrap-multilines': 'off',
        'react/no-array-index-key': 'off',
        'react/no-find-dom-node': 'off',
        'react/no-this-in-sfc': 'off',
        'react/no-unescaped-entities': 'off',
        'react/no-unused-prop-types': 'off',
        'react/prop-types': 'off',
        'react/require-default-props': 'off',
        'react/sort-comp': 'off',
        'react/state-in-constructor': 'off',
        'react/static-property-placement': ['error', 'static public field'],
        'react/jsx-no-literals': [
            'warn',
            {
                ignoreProps: true,
            },
        ],
    },
    overrides: [
        {
            files: [
                '*-test.js',
                '**/tests/**',
                '**/__tests__/**',
                '**/__mocks__/**',
            ],
            env: {
                jest: true,
            },
            rules: {
                'react/react-in-jsx-scope': 'off',
            },
            globals: {
                fixture: true,
                Exception: true,
            },
        },
        {
            files: [
                'packages/jutro-app/**',
                'packages/jutro-auth/**',
                'packages/jutro-components/**',
                'packages/jutro-data/**',
                'packages/jutro-datatable/**',
                'packages/jutro-router/**',
                'packages/jutro-theme/**',
                'packages/jutro-theme-styles/**',
            ],
            plugins: ['filenames'],
            rules: {
                'import/no-default-export': 'error',
                'filenames/no-index': 'error',
            },
        },
        {
            files: ['*.ts', '*.tsx'],
            rules: {
                'valid-jsdoc': 'off',
                'no-shadow': 'off',
                'no-unused-vars': 'off',

                '@typescript-eslint/ban-ts-comment': 'off',
                '@typescript-eslint/no-empty-function': 'off',

                '@typescript-eslint/explicit-module-boundary-types': 'warn',
                '@typescript-eslint/no-inferrable-types': [
                    'error',
                    { ignoreParameters: true },
                ],
                '@typescript-eslint/no-unused-vars': [
                    'error',
                    {
                        ignoreRestSiblings: true,
                    },
                ],

                // https://github.com/typescript-eslint/typescript-eslint/issues/420#issuecomment-481639915
                'no-useless-constructor': 'off',
                '@typescript-eslint/no-useless-constructor': 'error',
            },
            extends: ['plugin:@typescript-eslint/recommended'],
        },
    ],
};
