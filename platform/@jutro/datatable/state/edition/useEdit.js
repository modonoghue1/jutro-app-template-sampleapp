import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import{useReducer,useMemo}from"react";export const START="START";export const CANCEL="CANCEL";export const UPDATE="UPDATE";export const editReducer=(state,payload)=>{switch(payload.type){case CANCEL:return{};case START:return{row:{...payload.row},index:payload.index};case UPDATE:{const row=state.row,key=payload.key,newValue=payload.newValue;return{...state,row:{...row,[key]:newValue}}}default:return state}};export function useEdit({onSave:onSave,onCancel:onCancel,onStart:onStart,onUpdate:onUpdate}){const _useReducer=useReducer(editReducer,{}),_useReducer2=_slicedToArray(_useReducer,2),editProps=_useReducer2[0],dispatch=_useReducer2[1];return useMemo((()=>({...editProps,isEdited:index=>editProps.index===index,actions:{start(row,index){onStart&&onStart(row,index),dispatch({type:START,row:row,index:index})},update(row,path,newValue){onUpdate&&onUpdate(row,path,newValue),dispatch({type:UPDATE,key:path,newValue:newValue})},cancel(){const row=editProps.row,index=editProps.index;onCancel&&onCancel(row,index),dispatch({type:CANCEL})},save(){const row=editProps.row,index=editProps.index;onSave&&onSave(row,index),dispatch({type:CANCEL})}}})),[editProps,onCancel,onSave,onStart,onUpdate])}