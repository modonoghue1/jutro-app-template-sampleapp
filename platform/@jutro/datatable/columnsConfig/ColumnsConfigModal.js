import _extends from"@babel/runtime-corejs3/helpers/extends";import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useState,useCallback,useContext,useMemo}from"react";import PropTypes from"prop-types";import{ModalNext,ModalBody,ModalFooter,ModalHeader,Button}from"@jutro/components";import{TranslatorContext}from"@jutro/locale";import isNil from"lodash/isNil";import cloneDeep from"lodash/cloneDeep";import{messages}from"./ColumnsConfigModal.messages";import{ColumnEntry}from"./ColumnEntry";export function ColumnsConfigModal({isOpen:isOpen,onResolve:onResolve,onReject:onReject,parentSelector:parentSelector,initialColumns:initialColumns}){const translator=useContext(TranslatorContext),_useState=useState(initialColumns),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1],handleConfirm=useCallback((()=>onResolve(columns)),[onResolve,columns]),columnEntries=useMemo((()=>{const onColumnToggle=index=>enabled=>{const newColumns=cloneDeep(columns).map(((column,columnIndex)=>{var currentlyEnabled;return columnIndex===index&&(column.enabled=isNil(enabled)?!currentlyEnabled:enabled),column}));setColumns(newColumns)};return columns.map(((column,index)=>React.createElement(ColumnEntry,_extends({key:column.id},column,{onToggle:onColumnToggle(index)}))))}),[columns]);return React.createElement(ModalNext,{isOpen:isOpen,onRequestClose:onReject,parentSelector:parentSelector},React.createElement(ModalHeader,{title:translator(messages.title),subtitle:translator(messages.subtitle),onClose:onReject}),React.createElement(ModalBody,{contentLayout:{component:"Grid",componentProps:{columns:["1fr"],gap:"none"}}},columnEntries),React.createElement(ModalFooter,null,React.createElement(Button,{type:"text",onClick:onReject},translator(messages.cancel)),React.createElement(Button,{onClick:handleConfirm},translator(messages.applyChanges))))}const columnPropTypes={id:PropTypes.string.isRequired,header:PropTypes.string,enabled:PropTypes.bool};ColumnsConfigModal.propTypes={isOpen:PropTypes.bool,onResolve:PropTypes.func,onReject:PropTypes.func,parentSelector:PropTypes.func,initialColumns:PropTypes.arrayOf(PropTypes.shape(columnPropTypes))},ColumnsConfigModal.__docgenInfo={description:"ColumnsConfigModal\n@param {object} param0",methods:[],displayName:"ColumnsConfigModal",props:{isOpen:{type:{name:"bool"},required:!1,description:"Flag to indicate if the Modal is currently open"},onResolve:{type:{name:"func"},required:!1,description:"Callback to be called when the Modal has been requested to be resolve"},onReject:{type:{name:"func"},required:!1,description:"Callback to be called when the Modal has been requested to be closed"},parentSelector:{type:{name:"func"},required:!1,description:"Callback to find the Modal's parent selector"},initialColumns:{type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Used to identify the component",required:!0},header:{name:"string",description:"Label text to be displayed beside the checkbox",required:!1},enabled:{name:"bool",description:"If true, the checkbox marked as checked",required:!1}}}},required:!1,description:"Array of columns"}}},ColumnsConfigModal.__docgenInfo={componentName:"ColumnsConfigModal",packageName:"@jutro/datatable",description:"ColumnsConfigModal",displayName:"ColumnsConfigModal",methods:[],actualName:"ColumnsConfigModal",props:{isOpen:{type:{name:"bool"},required:!1,description:"Flag to indicate if the Modal is currently open"},onResolve:{type:{name:"func"},required:!1,description:"Callback to be called when the Modal has been requested to be resolve"},onReject:{type:{name:"func"},required:!1,description:"Callback to be called when the Modal has been requested to be closed"},parentSelector:{type:{name:"func"},required:!1,description:"Callback to find the Modal's parent selector"},initialColumns:{type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Used to identify the component",required:!0},header:{name:"string",description:"Label text to be displayed beside the checkbox",required:!1},enabled:{name:"bool",description:"If true, the checkbox marked as checked",required:!1}}}},required:!1,description:"Array of columns"}}};