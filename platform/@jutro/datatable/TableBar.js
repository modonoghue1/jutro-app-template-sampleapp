import React,{useContext,useMemo}from"react";import cx from"classnames";import{Transition,TransitionGroup}from"react-transition-group";import{InputField,IconButton,ModalNextContext}from"@jutro/components";import{TranslatorContext}from"@jutro/locale";import{useTableContext}from"./TableContext";import{ColumnsConfigModal}from"./columnsConfig/ColumnsConfigModal";import{messages}from"./DataTable.messages";export const TableBar=({filterValue:filterValue,onFilterChange:onFilterChange,filterPlaceholder:filterPlaceholder,selectionActions:selectionActions=[],showSelectionActions:showSelectionActions,disabled:disabled})=>{const translator=useContext(TranslatorContext),_useTableContext=useTableContext(),styles=_useTableContext.styles,columns=_useTableContext.columns,columnsConfigurable=columns.configurable,columnsConfig=columns.config,setColumnsConfig=columns.setConfig,showModal=useContext(ModalNextContext).showModal,columnsConfigAction=useMemo((()=>{if(!columnsConfigurable)return null;return React.createElement("div",{className:styles.columnsConfigAction},React.createElement(IconButton,{icon:"gw-view-column",label:translator(messages.columnsConfig),onClick:async()=>{try{const updatedConfig=await showModal(React.createElement(ColumnsConfigModal,{initialColumns:columnsConfig}));setColumnsConfig(updatedConfig)}catch{}}}))}),[columnsConfigurable,styles.columnsConfigAction,translator,columnsConfig,setColumnsConfig]),searchWrapperClassName=cx(styles.searchWrapper,{[styles.searchWrapperDisabled]:disabled});return React.createElement("div",{className:styles.tableBar},React.createElement(InputField,{id:"search",icon:"gw-search",iconPosition:"right",placeholder:filterPlaceholder,className:searchWrapperClassName,controlClassName:styles.search,onValueChange:onFilterChange,value:filterValue,editable:!disabled}),React.createElement("div",{className:styles.actionPanel},showSelectionActions&&React.createElement(TransitionGroup,{component:null},React.createElement(Transition,{timeout:400},(state=>{const actionBarStyles=cx(styles.selectionActions,{[styles.withBorder]:columnsConfigAction,[styles.transition]:"entered"!==state}),buttonsStyles=cx(styles.buttons,{[styles.enter]:state.startsWith("enter")});return React.createElement("div",{className:actionBarStyles},React.createElement("div",{className:buttonsStyles},selectionActions.map((({icon:icon,label:label,callback:callback})=>React.createElement(IconButton,{key:label,icon:icon,label:label,onClick:callback})))))}))),columnsConfigAction))};TableBar.__docgenInfo={description:"",methods:[],displayName:"TableBar",props:{selectionActions:{defaultValue:{value:"[]",computed:!1},required:!1}}},TableBar.__docgenInfo={componentName:"TableBar",packageName:"@jutro/datatable",description:"",displayName:"TableBar",methods:[],actualName:"TableBar",props:{selectionActions:{defaultValue:{value:"[]",computed:!1},required:!1}}};