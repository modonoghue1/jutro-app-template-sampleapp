import React,{useContext}from"react";import PropTypes from"prop-types";import cx from"classnames";import _ from"lodash";import{useDeprecationWarning}from"@jutro/platform";import{BreakpointTracker,BreakpointTrackerContext}from"@jutro/layout";import{log}from"@jutro/logger";import{TranslatorContext}from"@jutro/locale";import{metadataTypes}from"@jutro/uimetadata";import{intlMessageShape}from"@jutro/prop-types";import styles from"./Table_DEPRECATED.module.css";import{TableColumn}from"./TableColumn";import{TableTitleBar}from"./TableTitleBar";const tablePropTypes={title:PropTypes.oneOfType([PropTypes.string,PropTypes.func]),renderTitle:PropTypes.func,className:PropTypes.string,children:PropTypes.arrayOf(PropTypes.node),phone:PropTypes.object,phoneWide:PropTypes.object,tablet:PropTypes.object,renderTitleAction:PropTypes.func,columnsProportion:PropTypes.arrayOf(PropTypes.number),placeholder:intlMessageShape,renderPhoneCardComponent:PropTypes.func,titleId:PropTypes.string,titlePosition:PropTypes.string,data:PropTypes.arrayOf(PropTypes.shape({id:PropTypes.string}))};export const Table=props=>{!props.ignoreDeprecation&&useDeprecationWarning("Table","TableView/ListView/AdaptiveDataView",void 0,"7.0.0");const translator=useContext(TranslatorContext);return React.createElement(BreakpointTrackerContext.Consumer,null,(breakpoint=>renderTableComponent(props,breakpoint,translator)))};function renderHeader(headerProps){const componentProps=headerProps.componentProps,breakpoint=headerProps.breakpoint,translator=headerProps.translator;return renderLine({componentProps:componentProps,breakpoint:breakpoint,renderProp:({headerClassName:headerClassName,...rest})=>{const columnProps={headerClassName:cx(styles.tableHeader,headerClassName),...rest};return TableColumn.renderHeader(columnProps,translator)},keyMapper:()=>"header"})}function renderRow(props){const componentProps=props.componentProps,row=props.row,index=props.index,breakpoint=props.breakpoint,translator=props.translator;return renderLine({componentProps:componentProps,breakpoint:breakpoint,renderProp:columnProps=>TableColumn.renderCell(row,index,{...columnProps,basePath:componentProps.path},translator),keyMapper:()=>row.id||`${index}`,rowIndex:index})}const ignoreRowClicks=["INPUT","BUTTON","A","LABEL","SELECT"];function handleRowEvent(evt,columnCallback){const currentTarget=evt.target;currentTarget&&ignoreRowClicks.includes(currentTarget.tagName)||columnCallback(evt)}function renderLine(props){const componentProps=props.componentProps,breakpoint=props.breakpoint,renderProp=props.renderProp,keyMapper=props.keyMapper,rowIndex=props.rowIndex,children=componentProps.children,columnsProportion=componentProps.columnsProportion;let onRowClick,onKeyDown,tabIndex;const columns=React.Children.toArray(children).map(((column,index)=>{const columnProps=BreakpointTracker.applyBreakpointOverrides(column.props,breakpoint);return!1===columnProps.visible||columnsProportion&&!columnsProportion[index]?null:(column.type.onRowClick&&(onRowClick=evt=>handleRowEvent(evt,column.type.onRowClick)),column.type.getTabIndex&&(tabIndex=column.type.getTabIndex(rowIndex)),column.type.onKeyDown&&(onKeyDown=evt=>handleRowEvent(evt,column.type.onKeyDown)),renderProp({...columnProps,scope:"col"}))}));return React.createElement("tr",{className:styles.row,key:keyMapper(),onClick:onRowClick,onKeyDown:onKeyDown,tabIndex:tabIndex},columns)}function renderTableTitleBar(props){const title=props.title,renderTitleAction=props.renderTitleAction,theme=props.theme,titleId=props.titleId,titlePosition=props.titlePosition;return React.createElement(TableTitleBar,{title:title,titleAction:renderTitleAction,theme:theme,titleId:titleId,titlePosition:titlePosition})}function renderColGroup(columnsProportion,children){if(children&&columnsProportion){(Array.isArray(children)?children.filter((col=>col&&!1!==col.props.visible)).length:1)!==columnsProportion.length&&log.warning("Number of table columns and columns proportion does not match")}if(!columnsProportion||0===columnsProportion.length)return;const proportionTotal=(columnsProportion=columnsProportion.filter((x=>!!x))).reduce(((total,x)=>total+x)),cols=columnsProportion.map(((x,index)=>React.createElement("col",{key:index,style:{width:x/proportionTotal*100+"%"}})));return React.createElement("colgroup",null,cols)}function renderPlaceHolder(placeholder,translator){if(!placeholder)return null;const placeholderText=translator?translator(placeholder):placeholder;return React.createElement("div",{className:styles.placeholder},placeholderText)}const renderDesktopTable=(componentProps,breakpoint,translator,titleId)=>{const data=componentProps.data,children=componentProps.children,colGroup=renderColGroup(componentProps.columnsProportion,children),header=renderHeader({componentProps:componentProps,breakpoint:breakpoint,translator:translator}),body=data.map(((row,index)=>renderRow({componentProps:componentProps,row:row,index:index,breakpoint:breakpoint,translator:translator})));return React.createElement("table",{className:styles.tableElement,"aria-labelledby":titleId},colGroup,React.createElement("thead",null,header),React.createElement("tbody",null,body))},renderPhoneCardRow=(rowProps,row,index,translator,isVisible=!0)=>{const classes=cx(styles.tableCardRow,{[styles.radioRow]:null==rowProps?void 0:rowProps.option}),cardProps={...rowProps,headerClassName:styles.tableCardElementHeader,cellClassName:styles.tableCardElementContent,scope:"row",textAlign:void 0,visible:isVisible};return React.createElement("tr",{key:rowProps.id+index,className:classes},TableColumn.renderHeader(cardProps,translator),TableColumn.renderCell(row,index,cardProps,translator))},renderPhoneTable=(componentProps,breakpoint,translator,titleId)=>{const data=componentProps.data,children=componentProps.children,renderPhoneCardComponent=componentProps.renderPhoneCardComponent,columnsProportion=componentProps.columnsProportion,Card=renderPhoneCardComponent||"div";let clickableColumn;React.Children.toArray(children).filter(Boolean).forEach((child=>{child.type.onRowClick&&(clickableColumn=child)}));const onCardClick=clickableColumn?evt=>handleRowEvent(evt,clickableColumn.type.onRowClick):void 0,cards=data.map(((row,index)=>{const key=row.id||`${index}`,card=React.Children.toArray(children).map(((child,childIndex)=>renderPhoneCardRow(child.props,row,index,translator,0!==(null==columnsProportion?void 0:columnsProportion[childIndex]))));return React.createElement(Card,{key:key,className:styles.card,onClick:onCardClick,id:key},React.createElement("div",{onClick:onCardClick},React.createElement("table",{className:styles.tableCard,"aria-describedby":titleId},React.createElement("tbody",null,card))))}));return React.createElement(React.Fragment,null,cards)},renderDesktopOrPhoneTable=props=>{const componentProps=props.componentProps,breakpoint=props.breakpoint,translator=props.translator,titleId=props.titleId;return!breakpoint||"phone"!==breakpoint&&"phoneWide"!==breakpoint?renderDesktopTable(componentProps,breakpoint,translator,titleId):renderPhoneTable(componentProps,0,translator,titleId)},isClickable=child=>{var _child$type;return null==child||null===(_child$type=child.type)||void 0===_child$type?void 0:_child$type.onRowClick},isHoverable=props=>{let children=props.children;return!!children&&(Array.isArray(children)||children.type!==React.Fragment||(children=children.props.children),Array.isArray(children)?children.some(isClickable):children.type.onRowClick)},renderTableComponent=(props,breakpoint,translator)=>{const componentProps=BreakpointTracker.applyBreakpointOverrides(props,breakpoint),data=componentProps.data,className=componentProps.className,title=componentProps.title,renderTitle=componentProps.renderTitle,titleId=componentProps.titleId,renderTitleAction=componentProps.renderTitleAction,titlePosition=componentProps.titlePosition,placeholder=componentProps.placeholder,tableClasses=cx(styles.table,{[styles.hoverable]:isHoverable(props)},className),titleBar=renderTableTitleBar({title:title||renderTitle,renderTitleAction:renderTitleAction,titleId:titleId,titlePosition:titlePosition}),hasData=!_.isEmpty(data),placeholderElement=hasData?null:renderPlaceHolder(placeholder,translator);return React.createElement("div",{className:tableClasses},titleBar,hasData&&renderDesktopOrPhoneTable({componentProps:componentProps,breakpoint:breakpoint,translator:translator,titleId:titleId}),placeholderElement)};Table.propTypes=tablePropTypes,Table.metadataType=metadataTypes.CONTAINER,Table.__docgenInfo={description:"Renders a table. You can use it to display data from a model.\n\n@type {React.FC<PropTypes.InferProps<typeof tablePropTypes>>}\n\n@metadataType container\n@deprecated",methods:[],displayName:"Table",props:{title:{type:{name:"union",value:[{name:"string"},{name:"func"}]},required:!1,description:"Title which is placed in title bar"},renderTitle:{type:{name:"func"},required:!1,description:"Function that renders custom title"},className:{type:{name:"string"},required:!1,description:"Optional css class(es) to add to the grid tag"},children:{type:{name:"arrayOf",value:{name:"node"}},required:!1,description:"Children; preferably 'GridItem'; works with any child"},phone:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'phone' breakpoint"},phoneWide:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'phoneWide' and 'phone' breakpoint"},tablet:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'tablet' and 'phone' breakpoint"},renderTitleAction:{type:{name:"func"},required:!1,description:"Render prop for customizing action in the title area"},columnsProportion:{type:{name:"arrayOf",value:{name:"number"}},required:!1,description:"Proportion of columns (e.g. [2, 2, 1])"},placeholder:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Placeholder to show when data is empty"},renderPhoneCardComponent:{type:{name:"func"},required:!1,description:"Component to wrap mobile Radio Table"},titleId:{type:{name:"string"},required:!1,description:"The id used for the tables title for use in the aria-describedby"},titlePosition:{type:{name:"string"},required:!1,description:"The position of the title in the title bar (left, right, center)"},data:{type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Optional string for generating keys for rows",required:!1}}}},required:!1,description:"Cells data"}}},Table.__docgenInfo={componentName:"Table",packageName:"@jutro/datatable",description:"Renders a table. You can use it to display data from a model.",displayName:"Table",methods:[],actualName:"Table",metadataType:"container",props:{title:{type:{name:"union",value:[{name:"string"},{name:"func"}]},required:!1,description:"Title which is placed in title bar"},renderTitle:{type:{name:"func"},required:!1,description:"Function that renders custom title"},className:{type:{name:"string"},required:!1,description:"Optional css class(es) to add to the grid tag"},children:{type:{name:"arrayOf",value:{name:"node"}},required:!1,description:"Children; preferably 'GridItem'; works with any child"},phone:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'phone' breakpoint"},phoneWide:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'phoneWide' and 'phone' breakpoint"},tablet:{type:{name:"object"},required:!1,description:"Include any Table property for use at 'tablet' and 'phone' breakpoint"},renderTitleAction:{type:{name:"func"},required:!1,description:"Render prop for customizing action in the title area"},columnsProportion:{type:{name:"arrayOf",value:{name:"number"}},required:!1,description:"Proportion of columns (e.g. [2, 2, 1])"},placeholder:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Placeholder to show when data is empty"},renderPhoneCardComponent:{type:{name:"func"},required:!1,description:"Component to wrap mobile Radio Table"},titleId:{type:{name:"string"},required:!1,description:"The id used for the tables title for use in the aria-describedby"},titlePosition:{type:{name:"string"},required:!1,description:"The position of the title in the title bar (left, right, center)"},data:{type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Optional string for generating keys for rows",required:!1}}}},required:!1,description:"Cells data"}}},renderHeader.__docgenInfo={componentName:"renderHeader",packageName:"@jutro/datatable",description:"Renders header props",displayName:"renderHeader",methods:[],actualName:"renderHeader"},renderRow.__docgenInfo={componentName:"renderRow",packageName:"@jutro/datatable",description:"Renders row",displayName:"renderRow",methods:[],actualName:"renderRow"},renderLine.__docgenInfo={componentName:"renderLine",packageName:"@jutro/datatable",description:"",displayName:"renderLine",methods:[],actualName:"renderLine"},renderTableTitleBar.__docgenInfo={componentName:"renderTableTitleBar",packageName:"@jutro/datatable",description:"Renders TableTitleBar",displayName:"renderTableTitleBar",methods:[],actualName:"renderTableTitleBar"},renderColGroup.__docgenInfo={componentName:"renderColGroup",packageName:"@jutro/datatable",description:"Renders colgroup",displayName:"renderColGroup",methods:[],actualName:"renderColGroup"},renderPlaceHolder.__docgenInfo={componentName:"renderPlaceHolder",packageName:"@jutro/datatable",description:"",displayName:"renderPlaceHolder",methods:[],actualName:"renderPlaceHolder"},renderDesktopTable.__docgenInfo={componentName:"renderDesktopTable",packageName:"@jutro/datatable",description:"",displayName:"renderDesktopTable",methods:[],actualName:"renderDesktopTable"},renderPhoneCardRow.__docgenInfo={componentName:"renderPhoneCardRow",packageName:"@jutro/datatable",description:"",displayName:"renderPhoneCardRow",methods:[],actualName:"renderPhoneCardRow"},renderPhoneTable.__docgenInfo={componentName:"renderPhoneTable",packageName:"@jutro/datatable",description:"",displayName:"renderPhoneTable",methods:[],actualName:"renderPhoneTable"},renderDesktopOrPhoneTable.__docgenInfo={componentName:"renderDesktopOrPhoneTable",packageName:"@jutro/datatable",description:"",displayName:"renderDesktopOrPhoneTable",methods:[],actualName:"renderDesktopOrPhoneTable"},renderTableComponent.__docgenInfo={componentName:"renderTableComponent",packageName:"@jutro/datatable",description:"",displayName:"renderTableComponent",methods:[],actualName:"renderTableComponent"};