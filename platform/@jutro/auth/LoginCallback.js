import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useEffect,useState}from"react";import{useAuth}from"./AuthContext";import{useAuthState}from"./AuthStateProvider";export const LoginCallback=({errorComponent:ErrorComponent})=>{const _useState=useState(),_useState2=_slicedToArray(_useState,2),loginError=_useState2[0],setLoginError=_useState2[1],_useAuth=useAuth(),error=_useAuth.error,isPending=_useAuth.isPending,oktaAuth=useAuthState().oktaAuth;useEffect((()=>{let hasUnmounted=!1;return(async()=>{try{await oktaAuth.handleLoginRedirect()}catch(e){hasUnmounted||setLoginError(e)}})(),()=>{hasUnmounted=!0}}),[oktaAuth]);const finalError=loginError||!isPending&&error;return finalError?React.createElement(ErrorComponent,{error:finalError}):null};LoginCallback.__docgenInfo={description:"",methods:[],displayName:"LoginCallback"},LoginCallback.__docgenInfo={componentName:"LoginCallback",packageName:"@jutro/auth",description:"",displayName:"LoginCallback",methods:[],actualName:"LoginCallback"};