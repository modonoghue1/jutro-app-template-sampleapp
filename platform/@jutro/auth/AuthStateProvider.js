import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useState,useMemo,useEffect,useContext,createContext}from"react";import isEqual from"lodash/isEqual";import{OktaAuth}from"@okta/okta-auth-js";import{useHistory}from"react-router-dom";import{joinUrl}from"@jutro/platform";import{getConfigValue}from"@jutro/config";import{fetchUserInfo}from"./fetchUserInfo";export const AuthStateContext=createContext(void 0);export const useAuthState=()=>useContext(AuthStateContext);function convertAuthState(state){const isAuthenticated=state.isAuthenticated,isPending=state.isPending,accessToken=state.accessToken,idToken=state.idToken,error=state.error,_state$userInfo=state.userInfo,userInfo=void 0===_state$userInfo?null:_state$userInfo,newState={isAuthenticated:!!isAuthenticated,isPending:!!isPending,accessToken:accessToken?accessToken.accessToken:null,idToken:idToken?idToken.idToken:null,userInfo:userInfo};return error&&(newState.error=error),newState}export const transformAuthState=async(oktaAuth,authState)=>authState.accessToken&&authState.idToken?{...authState,userInfo:await oktaAuth.getUser()}:authState.accessToken&&!authState.idToken?{...authState,userInfo:await fetchUserInfo(authState.accessToken),isAuthenticated:!0}:authState;export const AuthStateProvider=({children:children,oktaAuth:oktaAuthProp,...props})=>{const history=useHistory(),oktaAuth=useMemo((()=>oktaAuthProp||new OktaAuth({transformAuthState:transformAuthState,...props})),[oktaAuthProp]);oktaAuth.options.restoreOriginalUri||(oktaAuth.options.restoreOriginalUri=async(_,originalUri)=>{history.replace(originalUri.replace(joinUrl(window.location.origin,getConfigValue("JUTRO_ROUTER_BASENAME","")),""))});const _useState=useState((()=>convertAuthState(oktaAuth.authStateManager.getAuthState()))),_useState2=_slicedToArray(_useState,2),authState=_useState2[0],setAuthState=_useState2[1];useEffect((()=>{const subscriptionHandler=()=>{setAuthState((oldState=>{const newState=convertAuthState(oktaAuth.authStateManager.getAuthState());return isEqual(oldState,newState)?oldState:newState}))};return oktaAuth.authStateManager.subscribe(subscriptionHandler),oktaAuth.isLoginRedirect()||oktaAuth.authStateManager.updateAuthState(),()=>{oktaAuth.authStateManager.unsubscribe(subscriptionHandler)}}),[oktaAuth]);const stateMemo=useMemo((()=>({oktaAuth:oktaAuth,authState:authState})),[oktaAuth,authState]);return React.createElement(AuthStateContext.Provider,{value:stateMemo},children)};AuthStateProvider.__docgenInfo={description:"Initiate Okta's OktaAuth and store auth state\nSimilar to okta-react's Secure component",methods:[],displayName:"AuthStateProvider"},AuthStateProvider.__docgenInfo={componentName:"AuthStateProvider",packageName:"@jutro/auth",description:"Initiate Okta's OktaAuth and store auth state\nSimilar to okta-react's Secure component",displayName:"AuthStateProvider",methods:[],actualName:"AuthStateProvider"};