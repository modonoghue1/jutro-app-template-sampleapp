import React,{createContext,useRef,useCallback}from"react";import{IntlProvider as ReactIntlProvider,useIntl}from"react-intl";import{warning}from"@jutro/logger";import debounce from"lodash/debounce";export const IntlContext=createContext(void 0);const ReactIntlConsumer=({children:children})=>{const intl=useIntl();return React.createElement(IntlContext.Provider,{value:intl},children)};export const IntlProvider=({defaultLocale:defaultLocale,locale:locale,messages:messages,textComponent:textComponent,children:children})=>{const bulkErrors=useRef({locale:"",ids:[]}),deferWarning=useCallback(debounce((()=>{warning(`${bulkErrors.current.locale} locale translations are not provided or missing next ${bulkErrors.current.ids.length} id's: ${bulkErrors.current.ids.join(", ")}`),bulkErrors.current={locale:"",ids:[]}}),500),[bulkErrors]);return React.createElement(ReactIntlProvider,{onError:err=>(errMessage=>{const missingId=errMessage.match(/Missing message: "(.*)" for locale "(.*)"/);missingId&&(bulkErrors.current.locale=bulkErrors.current.locale||missingId[2],bulkErrors.current.ids.push(missingId[1]),deferWarning())})(err.message),defaultLocale:defaultLocale,locale:locale,messages:messages,textComponent:textComponent},React.createElement(ReactIntlConsumer,null,children))};IntlProvider.displayName="IntlProvider",IntlProvider.__docgenInfo={description:"",methods:[],displayName:"IntlProvider"},ReactIntlConsumer.__docgenInfo={componentName:"ReactIntlConsumer",packageName:"@jutro/locale",description:"",displayName:"ReactIntlConsumer",methods:[],actualName:"ReactIntlConsumer"},IntlProvider.__docgenInfo={componentName:"IntlProvider",packageName:"@jutro/locale",description:"",displayName:"IntlProvider",methods:[],actualName:"IntlProvider"};