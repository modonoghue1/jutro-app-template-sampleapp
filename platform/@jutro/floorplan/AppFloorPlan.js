import _objectWithoutProperties from"@babel/runtime-corejs3/helpers/objectWithoutProperties";import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useMemo,useContext}from"react";import merge from"lodash/merge";import PropTypes from"prop-types";import cx from"classnames";import{SideNavigation,NavRoutes,ApplicationHeader,RightSideBar,SubApplicationHeader}from"@jutro/router";import{MetadataContent,resolveProps,resolveNestedPropClassNames,resolveCallbackProps}from"@jutro/uiconfig";import{routesShape,contextSwitcherShape,sideContentShape}from"@jutro/prop-types";import{ScrollToTop}from"@jutro/platform";import{BreakpointTrackerContext}from"@jutro/layout";import AppFloorPlanLayout from"./AppFloorPlanLayout";import{AppFloorPlanContext}from"./AppFloorPlanProvider";import useFloorPlanMatch from"./useFloorPlanMatch";import styles from"./AppFloorPlan.module.css";export const AppFloorPlan=({componentMap:componentMap,callbackMap:callbackMap={},classNameMap:classNameMap={},floorPlans:floorPlans=[]})=>{var _footerProps$componen;const floorPlan=useFloorPlanMatch(floorPlans),contextualProps=useContext(AppFloorPlanContext),_merge=merge({},contextualProps,floorPlan),className=_merge.className,_merge$header=_merge.header,headerProps=void 0===_merge$header?{}:_merge$header,rightSideProps=_merge.rightSide,_merge$subHeader=_merge.subHeader,subHeaderProps=void 0===_merge$subHeader?{}:_merge$subHeader,_merge$routes=_merge.routes,routes=void 0===_merge$routes?[]:_merge$routes,_merge$sideRoutes=_merge.sideRoutes,sideRoutes=void 0===_merge$sideRoutes?[]:_merge$sideRoutes,_merge$footer=_merge.footer,footerProps=void 0===_merge$footer?{}:_merge$footer,_merge$leftSide=_merge.leftSide,leftSideProps=void 0===_merge$leftSide?{}:_merge$leftSide,_merge$scrollContent=_merge.scrollContent,scrollContent=void 0===_merge$scrollContent||_merge$scrollContent,_merge$showSubHeader=_merge.showSubHeader,showSubHeaderProp=void 0===_merge$showSubHeader||_merge$showSubHeader,_merge$showHeader=_merge.showHeader,showHeader=void 0===_merge$showHeader||_merge$showHeader,_merge$showLeftSide=_merge.showLeftSide,showLeftSideProp=void 0===_merge$showLeftSide||_merge$showLeftSide,_merge$showRightSide=_merge.showRightSide,showRightSide=void 0===_merge$showRightSide||_merge$showRightSide,_merge$showFooter=_merge.showFooter,showFooter=void 0===_merge$showFooter||_merge$showFooter,renderHeader=_merge.renderHeader,isLowerThanDesktop="desktop"!==useContext(BreakpointTrackerContext);function resolveAllProps(allProps){return resolveProps(allProps,callbackMap,classNameMap)}const resolvedHeaderProps=useMemo((()=>{var _headerProps$commonAv;return{...resolveAllProps(headerProps),commonAvatarRoutes:null===(_headerProps$commonAv=headerProps.commonAvatarRoutes)||void 0===_headerProps$commonAv?void 0:_headerProps$commonAv.map((route=>route&&resolveAllProps(route)))}}),[headerProps]),visibleRoutes=routes.filter((route=>!1!==route.showOnNavBar)).map((route=>resolveNestedPropClassNames(route,callbackMap,classNameMap))),visibleLeftSideRoutes=sideRoutes.filter((route=>!1!==route.showOnNavBar)),headerClasses=cx(resolvedHeaderProps.className,styles.header),header=showHeader&&(renderHeader&&function(renderHeader,callbackMap,props){if("function"==typeof renderHeader)return renderHeader(props);const resolvedRenderHeader=resolveCallbackProps({renderHeader:renderHeader},callbackMap).renderHeader;return null==resolvedRenderHeader?void 0:resolvedRenderHeader(props)}(renderHeader,callbackMap,{header:{...resolvedHeaderProps,className:headerClasses},subHeader:subHeaderProps,navigationRoutes:visibleRoutes})||React.createElement(ApplicationHeader,_extends({},resolvedHeaderProps,{className:headerClasses,helpPopoverItems:headerProps.helpPopoverItems&&[React.createElement(MetadataContent,{uiProps:headerProps.helpPopoverItems,resolveComponentMap:componentMap,resolveCallbackMap:callbackMap,resolveClassNameMap:classNameMap,key:"MetadataContentKey"})],burgerMenuRoutes:[...visibleRoutes,...visibleLeftSideRoutes]}))),subHeaderContextSwitcher=subHeaderProps.contextSwitcher,subHeaderClassName=subHeaderProps.className,otherSubHeaderProps=_objectWithoutProperties(subHeaderProps,["contextSwitcher","className"]),subHeader=showSubHeaderProp&&(visibleRoutes.length>0||subHeaderContextSwitcher)&&!isLowerThanDesktop&&React.createElement(SubApplicationHeader,_extends({navigationRoutes:visibleRoutes,contextSwitcher:subHeaderContextSwitcher},otherSubHeaderProps,{className:cx(subHeaderClassName,styles.subHeader)})),leftSideContextSwitcher=leftSideProps.contextSwitcher,otherLeftSideProps=_objectWithoutProperties(leftSideProps,["contextSwitcher"]),leftSide=showLeftSideProp&&(visibleLeftSideRoutes.length>0||leftSideContextSwitcher)&&!isLowerThanDesktop&&React.createElement(SideNavigation,_extends({routes:sideRoutes,contextSwitcher:leftSideContextSwitcher},otherLeftSideProps)),_ref=rightSideProps||{},collapsible=_ref.collapsible,isInitiallyCollapsed=_ref.isInitiallyCollapsed,sides=_ref.sides,rightSide=showRightSide&&sides&&sides.length>0&&React.createElement(RightSideBar,{collapsible:collapsible||isLowerThanDesktop,isInitiallyCollapsed:isInitiallyCollapsed||isLowerThanDesktop,sides:sides,componentMap:componentMap,expandOverContent:isLowerThanDesktop}),footerClasses=cx(null==footerProps||null===(_footerProps$componen=footerProps.componentProps)||void 0===_footerProps$componen?void 0:_footerProps$componen.className,styles.footer),footer=showFooter&&React.createElement(MetadataContent,{uiProps:{content:[{id:"footer",component:"Footer",...footerProps,componentProps:{...footerProps.componentProps,className:footerClasses}}]},resolveComponentMap:componentMap,resolveCallbackMap:callbackMap,resolveClassNameMap:classNameMap}),allRoutes=[...routes,...sideRoutes],floorPlanContent=allRoutes.length>0&&React.createElement(NavRoutes,{resolveComponentMap:componentMap||{},routes:allRoutes});return React.createElement(AppFloorPlanLayout,{className:className,scrollContent:scrollContent,header:header,subHeader:subHeader,leftSide:leftSide,rightSide:rightSide,footer:footer},allRoutes.length>0&&React.createElement(ScrollToTop,{excludeRoutes:floorPlan.excludeScrollToTopRoutes}),floorPlanContent)};const subHeaderProps={className:PropTypes.string,contextSwitcher:contextSwitcherShape},rightSideProps={isInitiallyCollapsed:PropTypes.bool,collapsible:PropTypes.bool,sides:PropTypes.arrayOf(sideContentShape.isRequired)},footerProps={component:PropTypes.string,componentProps:PropTypes.shape({}),content:PropTypes.array},floorPlanProps={showHeader:PropTypes.bool,showSubHeader:PropTypes.bool,showFooter:PropTypes.bool,showLeftSide:PropTypes.bool,showRightSide:PropTypes.bool,routes:routesShape,sideRoutes:routesShape,renderHeader:PropTypes.oneOfType([PropTypes.func.isRequired,PropTypes.string.isRequired]),header:PropTypes.shape({commonAvatarRoutes:PropTypes.array,helpPopoverItems:PropTypes.array}),subHeader:PropTypes.shape(subHeaderProps),rightSide:PropTypes.shape(rightSideProps),footer:PropTypes.shape(footerProps),scrollContent:PropTypes.bool,className:PropTypes.string,leftSide:PropTypes.shape({contextSwitcher:contextSwitcherShape})},routeMatchProps={exact:PropTypes.bool,strict:PropTypes.bool,sensitive:PropTypes.bool,path:PropTypes.string},routeMatchShape=PropTypes.shape(routeMatchProps),floorPlanOverrideProps={...floorPlanProps,matches:PropTypes.oneOfType([PropTypes.string,routeMatchShape,PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,routeMatchShape]).isRequired)]).isRequired},appFloorPlanPropTypes={componentMap:PropTypes.shape({}),classNameMap:PropTypes.shape({}),callbackMap:PropTypes.shape({}),floorPlans:PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape(floorPlanProps),PropTypes.shape(floorPlanOverrideProps)]).isRequired)};AppFloorPlan.propTypes=appFloorPlanPropTypes,AppFloorPlan.displayName="AppFloorPlan",AppFloorPlan.__docgenInfo={description:"Floorplan for the app, giving ability to use footer, header and nav out of the box",methods:[],displayName:"AppFloorPlan",props:{callbackMap:{defaultValue:{value:"{}",computed:!1},type:{name:"shape",value:{}},required:!1,description:"Resolve callback map"},classNameMap:{defaultValue:{value:"{}",computed:!1},type:{name:"shape",value:{}},required:!1,description:"Resolve class name map"},floorPlans:{defaultValue:{value:"[]",computed:!1},type:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{showHeader:{name:"bool",description:"Show/hide Header",required:!1},showSubHeader:{name:"bool",description:"Defines whether the sub navigation is shown or not",required:!1},showFooter:{name:"bool",description:"Show/hide footer",required:!1},showLeftSide:{name:"bool",description:"Show/hide left navigation",required:!1},showRightSide:{name:"bool",description:"Show/hide right panel",required:!1},routes:{name:"custom",raw:"routesShape",description:"Routing metadata object",required:!1},sideRoutes:{name:"custom",raw:"routesShape",description:"App routes to be shown in Left Side",required:!1},renderHeader:{name:"union",value:[{name:"func"},{name:"string"}],description:"Render custom header",required:!1},header:{name:"shape",value:{commonAvatarRoutes:{name:"array",required:!1},helpPopoverItems:{name:"array",required:!1}},description:"Properties for Application Header component",required:!1},subHeader:{name:"shape",value:{className:{name:"string",required:!1},contextSwitcher:{name:"custom",raw:"contextSwitcherShape",required:!1}},description:"Sub header config",required:!1},rightSide:{name:"shape",value:{isInitiallyCollapsed:{name:"bool",required:!1},collapsible:{name:"bool",required:!1},sides:{name:"arrayOf",value:{name:"custom",raw:"sideContentShape.isRequired"},required:!1}},description:"Right panel config",required:!1},footer:{name:"shape",value:{component:{name:"string",required:!1},componentProps:{name:"shape",value:{},required:!1},content:{name:"array",required:!1}},description:"Children components config for Footer",required:!1},scrollContent:{name:"bool",description:"Make content scrollable",required:!1},className:{name:"string",description:"Additional class names for component.",required:!1},leftSide:{name:"shape",value:{contextSwitcher:{name:"custom",raw:"contextSwitcherShape",description:"Context switcher object",required:!1}},description:"Props passed to SideNavigation",required:!1}}},{name:"shape",value:{matches:{name:"union",value:[{name:"string"},{name:"custom",raw:"routeMatchShape"},{name:"arrayOf",value:{name:"union",value:[{name:"string"},{name:"custom",raw:"routeMatchShape"}]}}],description:"The props to match against the current location. If match, the configuration override will be applied",required:!0}}}]}},required:!1,description:"Array with the default floorplan and floorplan overrides"},componentMap:{type:{name:"shape",value:{}},required:!1,description:"Resolve component map"}}};export default AppFloorPlan;AppFloorPlan.__docgenInfo={componentName:"AppFloorPlan",packageName:"@jutro/floorplan",description:"Floorplan for the app, giving ability to use footer, header and nav out of the box",displayName:"AppFloorPlan",methods:[],actualName:"AppFloorPlan",props:{componentMap:{type:{name:"shape",value:{}},required:!1,description:"Resolve component map"},classNameMap:{type:{name:"shape",value:{}},required:!1,description:"Resolve class name map",defaultValue:{value:"{}",computed:!1}},callbackMap:{type:{name:"shape",value:{}},required:!1,description:"Resolve callback map",defaultValue:{value:"{}",computed:!1}},floorPlans:{type:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{showHeader:{name:"bool",description:"Show/hide Header",required:!1},showSubHeader:{name:"bool",description:"Defines whether the sub navigation is shown or not",required:!1},showFooter:{name:"bool",description:"Show/hide footer",required:!1},showLeftSide:{name:"bool",description:"Show/hide left navigation",required:!1},showRightSide:{name:"bool",description:"Show/hide right panel",required:!1},routes:{name:"arrayOf",description:"Routing metadata object",required:!1,value:{name:"custom",raw:"routeShape"}},sideRoutes:{name:"arrayOf",description:"App routes to be shown in Left Side",required:!1,value:{name:"custom",raw:"routeShape"}},renderHeader:{name:"union",value:[{name:"func"},{name:"string"}],description:"Render custom header",required:!1},header:{name:"shape",value:{commonAvatarRoutes:{name:"array",required:!1},helpPopoverItems:{name:"array",required:!1}},description:"Properties for Application Header component",required:!1},subHeader:{name:"shape",value:{className:{name:"string",required:!1},contextSwitcher:{name:"shape",required:!1,value:{defaultLabel:{name:"custom",raw:"intlMessageShape",description:"Default button label when no context is active",required:!1},values:{name:"arrayOf",value:{name:"custom",raw:"contextShape.isRequired"},description:"Array of values for the contexts",required:!0}}}},description:"Sub header config",required:!1},rightSide:{name:"shape",value:{isInitiallyCollapsed:{name:"bool",required:!1},collapsible:{name:"bool",required:!1},sides:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Id of side content trigger button",required:!1},label:{name:"custom",raw:"intlMessageShape.isRequired",description:"Label describing the content used for accessibility",required:!0},icon:{name:"string",description:"Icon that will represent the content on the icon bar",required:!1},component:{name:"elementType",description:"Component to render as content",required:!0},componentProps:{name:"shape",value:{},description:"Component props",required:!1}}},required:!1}},description:"Right panel config",required:!1},footer:{name:"shape",value:{component:{name:"string",required:!1},componentProps:{name:"shape",value:{},required:!1},content:{name:"array",required:!1}},description:"Children components config for Footer",required:!1},scrollContent:{name:"bool",description:"Make content scrollable",required:!1},className:{name:"string",description:"Additional class names for component.",required:!1},leftSide:{name:"shape",value:{contextSwitcher:{name:"shape",description:"Context switcher object",required:!1,value:{defaultLabel:{name:"custom",raw:"intlMessageShape",description:"Default button label when no context is active",required:!1},values:{name:"arrayOf",value:{name:"custom",raw:"contextShape.isRequired"},description:"Array of values for the contexts",required:!0}}}},description:"Props passed to SideNavigation",required:!1}}},{name:"shape",value:{matches:{name:"union",value:[{name:"string"},{name:"custom",raw:"routeMatchShape"},{name:"arrayOf",value:{name:"union",value:[{name:"string"},{name:"custom",raw:"routeMatchShape"}]}}],description:"The props to match against the current location. If match, the configuration override will be applied",required:!0}}}]}},required:!1,description:"Array with the default floorplan and floorplan overrides",defaultValue:{value:"[]",computed:!1}}}};