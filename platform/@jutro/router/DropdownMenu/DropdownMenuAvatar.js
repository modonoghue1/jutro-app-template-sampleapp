import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext}from"react";import _ from"lodash";import PropTypes from"prop-types";import{Avatar}from"@jutro/components";import{TranslatorContext}from"@jutro/locale";import{intlMessageShape}from"@jutro/prop-types";import{useAuth}from"@jutro/auth";import cx from"classnames";import{DropdownMenu}from"./DropdownMenu";import styles from"./DropdownMenuAvatar.module.css";import{messages}from"./DropdownMenuAvatar.messages.js";import{DropdownMenuAvatarContent}from"./DropdownMenuAvatarContent";export const DropdownMenuAvatar=({username:username,icon:icon,className:className,imageSource:imageSource,messageProps:messageProps,showImageBorder:showImageBorder,useAuthInfo:useAuthInfo,id:id,isOpen:isOpenProp,dropUp:dropUp,alignRight:alignRight,title:title,subtitle:subtitle,children:children,onBeforeLogout:onBeforeLogout,headerClassName:headerClassName,authLinksClassName:authLinksClassName,separatorClassName:separatorClassName,dropdownClassName:dropdownClassName})=>{const auth=useAuth(),translator=useContext(TranslatorContext),dropdownMenuAvatarContentProps={title:title,subtitle:subtitle,children:children,username:username,icon:icon,imageSource:imageSource,messageProps:messageProps,useAuthInfo:useAuthInfo,showImageBorder:showImageBorder,onBeforeLogout:onBeforeLogout,headerClassName:headerClassName,authLinksClassName:authLinksClassName,separatorClassName:separatorClassName,className:dropdownClassName},menuProps={id:id,isOpen:isOpenProp,dropUp:dropUp,alignRight:alignRight},avatarProps={username:username,icon:icon,className:cx(className,"dropdownMenuAvatarTrigger"),imageSource:useAuthInfo?_.get(auth,"userInfo.pictureUrl",null):imageSource,messageProps:messageProps,showImageBorder:showImageBorder,useAuthInfo:useAuthInfo};return React.createElement(DropdownMenu,_extends({},menuProps,{className:styles.dropdownMenuAvatar,renderTrigger:({isOpen:isOpen,menuId:menuId,...other},toggleMenu)=>React.createElement(Avatar,_extends({"aria-label":translator(messages.profileMenu),"aria-controls":menuId},other,avatarProps,{onClick:()=>toggleMenu(!isOpen)})),menuClassName:styles.dropdownMenuAvatarMenu}),React.createElement(DropdownMenuAvatarContent,dropdownMenuAvatarContentProps))};DropdownMenuAvatar.propTypes={title:intlMessageShape,subtitle:intlMessageShape,username:PropTypes.string,icon:PropTypes.string,className:PropTypes.string,imageSource:PropTypes.string,messageProps:PropTypes.shape({userAvatar:intlMessageShape}),id:PropTypes.string.isRequired,isOpen:PropTypes.bool,dropUp:PropTypes.bool,alignRight:PropTypes.bool,useAuthInfo:PropTypes.bool,children:PropTypes.node,showImageBorder:PropTypes.bool,headerClassName:PropTypes.string,authLinksClassName:PropTypes.string,separatorClassName:PropTypes.string,onBeforeLogout:PropTypes.func,dropdownClassName:PropTypes.string},DropdownMenuAvatar.defaultAvatarProps={alignRight:!0,useAuthInfo:!1},DropdownMenuAvatar.__docgenInfo={description:"DropdownMenuAvatar\n@metadataType container",methods:[],displayName:"DropdownMenuAvatar",props:{title:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Menu header title text"},subtitle:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Menu header subtitle text"},username:{type:{name:"string"},required:!1,description:"Users first and last names, used as component alt text as well\nas to display initials if no image selected"},icon:{type:{name:"string"},required:!1,description:"Icon name from Material Icons icon list to be displayed if no image or initials present"},className:{type:{name:"string"},required:!1,description:"Additional component styling class name"},imageSource:{type:{name:"string"},required:!1,description:"Path to user image, preferentially shown before user initials or icon"},messageProps:{type:{name:"shape",value:{userAvatar:{name:"custom",raw:"intlMessageShape",description:"userAvatar message",required:!1}}},required:!1,description:"Message props(error message/aria-label)"},id:{type:{name:"string"},required:!0,description:"Used to identify menu component."},isOpen:{type:{name:"bool"},required:!1,description:"The prop that indicates if the menu is currently visible."},dropUp:{type:{name:"bool"},required:!1,description:"If `true`, the menu appears above the trigger component."},alignRight:{type:{name:"bool"},required:!1,description:"If `true`, items are aligned to the right edge of the menu."},useAuthInfo:{type:{name:"bool"},required:!1,description:"If `true`, display header information from Okta, if available, and Logout menu link"},children:{type:{name:"node"},required:!1,description:"The component children wrapped by the dropdown menu avatar component."},showImageBorder:{type:{name:"bool"},required:!1,description:"Defines whether image border should be shown or not"},headerClassName:{type:{name:"string"},required:!1,description:"Additional css class to the dropdown menu avatar header"},authLinksClassName:{type:{name:"string"},required:!1,description:"Additional css class to the dropdown menu avatar auth links"},separatorClassName:{type:{name:"string"},required:!1,description:"Optional css class to the dropdown menu separator"},onBeforeLogout:{type:{name:"func"},required:!1,description:"Callback to be called before okta logout"},dropdownClassName:{type:{name:"string"},required:!1,description:"Optional css class to the dropdown menu"}}},DropdownMenuAvatar.__docgenInfo={componentName:"DropdownMenuAvatar",packageName:"@jutro/router",description:"DropdownMenuAvatar",displayName:"DropdownMenuAvatar",methods:[],actualName:"DropdownMenuAvatar",metadataType:"container",props:{title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Menu header title text"},subtitle:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Menu header subtitle text"},username:{type:{name:"string"},required:!1,description:"Users first and last names, used as component alt text as well\nas to display initials if no image selected"},icon:{type:{name:"string"},required:!1,description:"Icon name from Material Icons icon list to be displayed if no image or initials present"},className:{type:{name:"string"},required:!1,description:"Additional component styling class name"},imageSource:{type:{name:"string"},required:!1,description:"Path to user image, preferentially shown before user initials or icon"},messageProps:{type:{name:"shape",value:{userAvatar:{name:"union",description:"userAvatar message",required:!1,value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]}}},required:!1,description:"Message props(error message/aria-label)"},id:{type:{name:"string"},required:!0,description:"Used to identify menu component."},isOpen:{type:{name:"bool"},required:!1,description:"The prop that indicates if the menu is currently visible."},dropUp:{type:{name:"bool"},required:!1,description:"If `true`, the menu appears above the trigger component."},alignRight:{type:{name:"bool"},required:!1,description:"If `true`, items are aligned to the right edge of the menu."},useAuthInfo:{type:{name:"bool"},required:!1,description:"If `true`, display header information from Okta, if available, and Logout menu link"},children:{type:{name:"node"},required:!1,description:"The component children wrapped by the dropdown menu avatar component."},showImageBorder:{type:{name:"bool"},required:!1,description:"Defines whether image border should be shown or not"},headerClassName:{type:{name:"string"},required:!1,description:"Additional css class to the dropdown menu avatar header"},authLinksClassName:{type:{name:"string"},required:!1,description:"Additional css class to the dropdown menu avatar auth links"},separatorClassName:{type:{name:"string"},required:!1,description:"Optional css class to the dropdown menu separator"},onBeforeLogout:{type:{name:"func"},required:!1,description:"Callback to be called before okta logout"},dropdownClassName:{type:{name:"string"},required:!1,description:"Optional css class to the dropdown menu"}}};