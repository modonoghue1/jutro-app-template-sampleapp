import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useMemo,useContext}from"react";import PropTypes from"prop-types";import{matchPath}from"react-router";import{useLocation}from"react-router-dom";import cx from"classnames";import{TranslatorContext}from"@jutro/locale";import{contextShape,intlMessageShape}from"@jutro/prop-types";import{DropdownMenu}from"../DropdownMenu/DropdownMenu";import{DropdownMenuLink}from"../DropdownMenu/DropdownMenuLink";import{ContextSwitcherButton}from"./ContextSwitcherButton";import styles from"./ContextSwitcher.module.css";export const isContextActive=(location,{path:path,exact:exact,match:match})=>{const pathMatches=matchPath(location,{path:path,exact:exact}),regexMatches=!!match&&location.match(match);return!!pathMatches||!!regexMatches};export const ContextSwitcher=({className:className,values:values,defaultLabel:defaultLabel,...others})=>{const location=useLocation(),translator=useContext(TranslatorContext),classes=cx(styles.contextSwitcher,className),activeContext=useMemo((()=>values.find((context=>isContextActive(location.pathname,context)))),[location,values]);return React.createElement(DropdownMenu,_extends({id:"context-switcher",className:classes,menuClassName:styles.contextSwitcherMenu,renderTrigger:({isOpen:isOpen,menuId:menuId,...other},toggleMenu)=>React.createElement(ContextSwitcherButton,_extends({"aria-controls":menuId,onClick:toggleMenu},other),React.createElement("span",null,(null==activeContext?void 0:activeContext.title)||translator(defaultLabel)))},others),values.map(((context,index)=>{const path=context.path,title=context.title;return React.createElement(DropdownMenuLink,{key:index.toString(),to:path,activeClassName:styles.activeContext,isActive:()=>isContextActive(location.pathname,context)},title)})))};ContextSwitcher.propTypes={className:PropTypes.string,defaultLabel:intlMessageShape,values:PropTypes.arrayOf(contextShape).isRequired},ContextSwitcher.__docgenInfo={description:"Context switcher is a route dropdown. It can be used to\nnavigate through high level routes (contexts) in an application.\n\n@metadataType container\n@param {object} props Props for the component",methods:[],displayName:"ContextSwitcher",props:{className:{type:{name:"string"},required:!1,description:"Additional class name por the component"},defaultLabel:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Default button label when no context is active"},values:{type:{name:"arrayOf",value:{name:"custom",raw:"contextShape"}},required:!0,description:"Array of values for the contexts"}}},ContextSwitcher.__docgenInfo={componentName:"ContextSwitcher",packageName:"@jutro/router",description:"Context switcher is a route dropdown. It can be used to\nnavigate through high level routes (contexts) in an application.",displayName:"ContextSwitcher",methods:[],actualName:"ContextSwitcher",metadataType:"container",props:{className:{type:{name:"string"},required:!1,description:"Additional class name por the component"},defaultLabel:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Default button label when no context is active"},values:{type:{name:"arrayOf",value:{name:"shape",value:{path:{name:"string",description:"The context path",required:!1},title:{name:"custom",raw:"intlMessageShape",description:"Context title",required:!1},exact:{name:"bool",description:"When true, will only match if the path matches the location.pathname exactly\n(unless match regular expression matches)",required:!1},match:{name:"union",value:[{name:"string"},{name:"instanceOf",value:"RegExp"}],description:"The context will be considered active if the path matches this regular\nexpression, even if the path does not match the active route",required:!1}}}},required:!0,description:"Array of values for the contexts"}}};