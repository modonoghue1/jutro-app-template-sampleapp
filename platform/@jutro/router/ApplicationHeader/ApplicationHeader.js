import _extends from"@babel/runtime-corejs3/helpers/extends";import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useContext,useCallback,useState}from"react";import cx from"classnames";import{NavLink}from"react-router-dom";import isUndefined from"lodash/isUndefined";import isString from"lodash/isString";import{IconButton,Link,NotificationAction,Header,HeaderActions,LogoTitle,HelpPopover}from"@jutro/components";import{useAuth}from"@jutro/auth";import{useBreakpoint}from"@jutro/layout";import{TranslatorContext,isIntlShape}from"@jutro/locale";import{applicationHeaderPropTypes}from"@jutro/prop-types";import{uniqueInnerId}from"@jutro/platform";import{AppSwitcher}from"../AppSwitcher/AppSwitcher";import{DropdownMenuAvatar}from"../DropdownMenu/DropdownMenuAvatar";import{DropdownMenuAvatarContent}from"../DropdownMenu/DropdownMenuAvatarContent";import{DropdownMenuSeparator}from"../DropdownMenu/DropdownMenuSeparator";import{DropdownMenuLink}from"../DropdownMenu/DropdownMenuLink";import{BurgerMenu}from"../BurgerMenu/BurgerMenu";import{BurgerMenuItem}from"../BurgerMenu/BurgerMenuItem";import{BurgerMenuLink}from"../BurgerMenu/BurgerMenuLink";import burgerMenuStyles from"../BurgerMenu/BurgerMenu.module.css";import styles from"./ApplicationHeader.module.css";import{messages}from"./ApplicationHeader.messages";import{SearchField}from"./SearchField";import{BurgerAppSwitcherButton}from"../BurgerMenu/BurgerAppSwitcherButton";import{NavigationContent}from"../NavBar/NavigationContent";import{NavigationContext}from"../NavBar/NavigationContext";import{NavBarAccordion}from"../NavBar/SideNavigation/NavBarAccordion/NavBarAccordion";export const ApplicationHeader=props=>{const _useState=useState(""),_useState2=_slicedToArray(_useState,2),activeRoute=_useState2[0],setActiveRoute=_useState2[1],translator=useContext(TranslatorContext),auth=useAuth(),_useBreakpoint=useBreakpoint(props),breakpointProps=_useBreakpoint.breakpointProps,breakpoint=_useBreakpoint.breakpoint,className=breakpointProps.className,logoSrc=breakpointProps.logoSrc,logoTitle=breakpointProps.logoTitle,logoUrl=breakpointProps.logoUrl,onSearchValueChange=breakpointProps.onSearchValueChange,onLoadValues=breakpointProps.onLoadValues,showNotifications=breakpointProps.showNotifications,notificationChildren=breakpointProps.notificationChildren,showAvatarProp=breakpointProps.showAvatar,avatarChildren=breakpointProps.avatarChildren,avatarProps=breakpointProps.avatarProps,searchFieldPlaceholder=breakpointProps.searchFieldPlaceholder,showAppSwitcher=breakpointProps.showAppSwitcher,appSwitcherItems=breakpointProps.appSwitcherItems,useAuthInfo=breakpointProps.useAuthInfo,commonAvatarRoutes=breakpointProps.commonAvatarRoutes,showHelp=breakpointProps.showHelp,helpUrl=breakpointProps.helpUrl,helpPopoverItems=breakpointProps.helpPopoverItems,searchAvailableValues=breakpointProps.searchAvailableValues,callbackMap=breakpointProps.callbackMap,appSwitcherFooterText=breakpointProps.appSwitcherFooterText,appSwitcherFooterUrl=breakpointProps.appSwitcherFooterUrl,onAppSwitcherFooterClick=breakpointProps.onAppSwitcherFooterClick,appSwitcherSearchEnabled=breakpointProps.appSwitcherSearchEnabled,appSwitcherCollapsibleGroupsThreshold=breakpointProps.appSwitcherCollapsibleGroupsThreshold,appSwitcherHideFooter=breakpointProps.appSwitcherHideFooter,burgerMenuRoutes=breakpointProps.burgerMenuRoutes,classes=cx(styles.applicationHeader,className),shouldShowHelp=!(void 0!==showHelp||!helpUrl)||showHelp,showAvatar=showAvatarProp&&(auth&&auth.authenticated||!useAuthInfo),isDesktop="desktop"===breakpoint,headerLogo=(logoSrc||logoTitle)&&React.createElement("div",{className:cx(styles.logoWrapper,{[styles.logoWrapperHasSearch]:onSearchValueChange||!isDesktop})},React.createElement(NavLink,{to:logoUrl,className:styles.applicationLogoTitleLink},React.createElement(LogoTitle,{src:logoSrc,logoClassName:styles.applicationLogo,titleClassName:styles.logoTitleText,alt:translator(messages.logoAlt),title:logoTitle}))),headerNotifications=showNotifications&&React.createElement("span",null,React.createElement(NotificationAction,{id:"notificationAction",title:messages.notifications,isFlipEnabled:!1,renderTrigger:(toggle,ref,hasShownPopover)=>React.createElement(IconButton,{id:"notificationButton",icon:"gw-notifications",iconColor:"light",ref:ref,onClick:toggle,className:styles.headerActionButton,"aria-label":translator(messages.notificationButton),"aria-haspopup":"menu","aria-expanded":hasShownPopover})},notificationChildren)),iconButtonProps={id:"helpButton","data-testid":"help-icon",icon:"gw-help",iconColor:"light",className:styles.headerActionButton,"aria-label":translator(messages.help)},renderTrigger=useCallback(((toggle,ref,hasShownPopover)=>React.createElement(IconButton,_extends({},iconButtonProps,{ref:ref,onClick:toggle,"aria-haspopup":"menu","aria-expanded":hasShownPopover}))),[iconButtonProps]),helpPopoverId=uniqueInnerId("ApplicationHeader","helpPopoverId").helpPopoverId,helpPopover=shouldShowHelp&&React.createElement("span",null,React.createElement(HelpPopover,{id:helpPopoverId,renderTrigger:renderTrigger,footerLink:helpUrl},helpPopoverItems)),helpLink=shouldShowHelp&&React.createElement((({children:children})=>{const url="string"==typeof helpUrl||isIntlShape(helpUrl)?helpUrl:null==helpUrl?void 0:helpUrl.href;return React.createElement(Link,{href:url,textClassName:styles.helpIcon,target:"_blank"},children)}),null,React.createElement(IconButton,iconButtonProps)),helpItem=(null==helpPopoverItems?void 0:helpPopoverItems.length)>0?helpPopover:helpLink,renderHeaderSearchField=searchColorTheme=>React.createElement(SearchField,{isDarkTheme:"dark"===searchColorTheme,onSearchValueChange:onSearchValueChange,onLoadValues:onLoadValues,searchAvailableValues:searchAvailableValues,searchFieldPlaceholder:searchFieldPlaceholder}),handleCallbackRedirect=(callback,shouldRedirect)=>shouldRedirect?callback:(callback=>(evt,...args)=>{evt.preventDefault(),callback(evt,...args)})(callback),commonAvatarContent=null==commonAvatarRoutes?void 0:commonAvatarRoutes.map((({title:title,onClick:onClick,className:linkClassName,...rest},index)=>{const to=rest.to,href=rest.href,shouldRedirect=!isUndefined(to||href),callback=isString(onClick)?null==callbackMap?void 0:callbackMap[onClick]:onClick,resolvedCallback=callback?{onClick:handleCallbackRedirect(callback,shouldRedirect)}:{},dropdownProps={...rest,...resolvedCallback};return React.createElement(DropdownMenuLink,_extends({key:`${index}`,className:cx(linkClassName,burgerMenuStyles.sidebarItem,burgerMenuStyles.sidebarItemInteractive)},dropdownProps),title)})),dropdownContentClassNames={headerClassName:cx(burgerMenuStyles.sidebarItem,styles.burgerMenuAvatar),authLinksClassName:cx(burgerMenuStyles.sidebarItem,burgerMenuStyles.sidebarItemInteractive),separatorClassName:burgerMenuStyles.sidebarSeparator},getHeaderAvatar=useCallback((()=>showAvatar?React.createElement(DropdownMenuAvatar,_extends({id:"dropdownavatar",dropUp:!1,alignRight:!0,useAuthInfo:useAuthInfo,className:"withLightFocusOnApplicationHeader"},dropdownContentClassNames,avatarProps),avatarChildren,commonAvatarContent):null),[avatarChildren,avatarProps,commonAvatarContent,useAuthInfo,showAvatar]),renderAppSwitcher=(isDropdown,onRouteClick)=>React.createElement(AppSwitcher,{id:"appSwitcher",items:appSwitcherItems,onRouteClick:onRouteClick||void 0,iconColor:"light",iconClassName:styles.headerActionButton,footerText:appSwitcherFooterText,footerUrl:appSwitcherFooterUrl,onFooterClick:onAppSwitcherFooterClick,isDropdown:isDropdown,searchEnabled:appSwitcherSearchEnabled,collapsibleGroupsThreshold:appSwitcherCollapsibleGroupsThreshold,hideFooter:appSwitcherHideFooter}),addBurgerMenuStyles=useCallback((({navLink:navLink,...rest})=>({...rest,navLink:{...navLink,className:cx(navLink&&navLink.className,burgerMenuStyles.sidebarItem)}})),[styles.burgerMenuLink]),mobileBurgerContent=[onSearchValueChange&&React.createElement(BurgerMenuItem,{id:"burger-search-menu",key:"burger-search-menu",isContainerOnly:!0,className:styles.burgerMenuSidebarStyledContent},renderHeaderSearchField()),burgerMenuRoutes&&React.createElement(React.Fragment,{key:"burger-menu-routes"},React.createElement(DropdownMenuSeparator,{className:burgerMenuStyles.sidebarSeparator}),React.createElement(NavigationContext.Provider,{value:{activeRoute:activeRoute,setActiveRoute:setActiveRoute}},React.createElement(NavigationContent,{routes:burgerMenuRoutes.map(addBurgerMenuStyles),nestedRoutesComponent:NavBarAccordion}))),shouldShowHelp&&React.createElement(BurgerMenuLink,{id:"burger-menu-help",key:"burger-menu-help",href:"string"==typeof helpUrl||isIntlShape(helpUrl)?helpUrl:null==helpUrl?void 0:helpUrl.href,target:"_blank",rel:"noopener noreferrer","data-testid":"help-link"},translator(messages.help)),showAppSwitcher&&React.createElement(BurgerAppSwitcherButton,{icon:"gw-apps",key:"burger-app-switcher",title:messages.switchApplication,renderAppSwitcher:onRouteClick=>renderAppSwitcher(!1,onRouteClick)}),showAvatar&&React.createElement(React.Fragment,{key:"burger-avatar"},React.createElement(DropdownMenuSeparator,{className:burgerMenuStyles.sidebarSeparator}),React.createElement(DropdownMenuAvatarContent,_extends({useAuthInfo:useAuthInfo},dropdownContentClassNames,avatarProps),(avatarChildren||(null==commonAvatarContent?void 0:commonAvatarContent.length)>0)&&React.createElement(React.Fragment,null,avatarChildren,commonAvatarContent)))],appSwitcher=showAppSwitcher&&React.createElement("span",null,renderAppSwitcher(!0));return!breakpoint||isDesktop?React.createElement(Header,{className:classes},headerLogo,(element=renderHeaderSearchField("dark"),onSearchValueChange&&React.createElement("div",{className:styles.centerWrapper},element)),React.createElement(HeaderActions,{className:styles.headerActions},helpItem,appSwitcher,headerNotifications,getHeaderAvatar())):React.createElement(Header,{className:classes},React.createElement(BurgerMenu,{className:styles.burgerMenuWrapper,buttonClassName:styles.headerActionButton,burgerContent:mobileBurgerContent,separatorClassName:styles.burgerMenuSeparator}),headerLogo,React.createElement(HeaderActions,{className:styles.headerActions},headerNotifications));var element};ApplicationHeader.displayName="ApplicationHeader",ApplicationHeader.propTypes=applicationHeaderPropTypes,ApplicationHeader.defaultProps={showNotifications:!0,showAvatar:!0,showAppSwitcher:!0,searchFieldPlaceholder:messages.searchFieldPlaceholder,useAuthInfo:!0,logoUrl:"/",callbackMap:{}},ApplicationHeader.__docgenInfo={description:"ApplicationHeader is the default header for all Guidewire applications.\nIt contains all the typical controls for Guidewire apps.\nIf you want to add other controls to the header, use the Header component instead\n\n@metadataType container\n@param props",methods:[],displayName:"ApplicationHeader",props:{showNotifications:{defaultValue:{value:"true",computed:!1},required:!1},showAvatar:{defaultValue:{value:"true",computed:!1},required:!1},showAppSwitcher:{defaultValue:{value:"true",computed:!1},required:!1},searchFieldPlaceholder:{defaultValue:{value:"messages.searchFieldPlaceholder",computed:!0},required:!1},useAuthInfo:{defaultValue:{value:"true",computed:!1},required:!1},logoUrl:{defaultValue:{value:"'/'",computed:!1},required:!1},callbackMap:{defaultValue:{value:"{}",computed:!1},required:!1}},composes:["@jutro/prop-types"]},ApplicationHeader.__docgenInfo={componentName:"ApplicationHeader",packageName:"@jutro/router",description:"ApplicationHeader is the default header for all Guidewire applications.\nIt contains all the typical controls for Guidewire apps.\nIf you want to add other controls to the header, use the Header component instead",displayName:"ApplicationHeader",methods:[],actualName:"ApplicationHeader",metadataType:"container",props:{showNotifications:{defaultValue:{value:"true",computed:!1},required:!1},showAvatar:{defaultValue:{value:"true",computed:!1},required:!1},showAppSwitcher:{defaultValue:{value:"true",computed:!1},required:!1},searchFieldPlaceholder:{defaultValue:{value:"messages.searchFieldPlaceholder",computed:!0},required:!1},useAuthInfo:{defaultValue:{value:"true",computed:!1},required:!1},logoUrl:{defaultValue:{value:"'/'",computed:!1},required:!1},callbackMap:{defaultValue:{value:"{}",computed:!1},required:!1}},composes:["@jutro/prop-types"]};