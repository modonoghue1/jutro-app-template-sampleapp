import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useEffect,useCallback,useRef,useContext,useMemo}from"react";import cx from"classnames";import{useLocation}from"react-router-dom";import{InlineLabel,Icon}from"@jutro/components";import{TranslatorContext}from"@jutro/locale";import{DropdownMenu}from"../DropdownMenu/DropdownMenu";import{NavigationContent}from"../NavBar/NavigationContent";import{removeNavLinkIcon}from"../NavBar/navBarHelper";import{NavBarAccordion}from"../NavBar/SideNavigation/NavBarAccordion/NavBarAccordion";import{messages}from"./ApplicationHeader.messages";import styles from"../NavBar/NavBarItem.module.css";import appHeaderStyles from"./ApplicationHeader.module.css";const MoreButtonContent=({toggle:toggle,routes:routes,isOpen:isOpen,accessibilityProps:accessibilityProps,id:id})=>{const location=useLocation(),translator=useContext(TranslatorContext);((callback,deps=[])=>{const location=useLocation(),oldLocation=useRef(location),cb=useCallback(callback,deps);useEffect((()=>{location!==oldLocation.current&&cb(),oldLocation.current=location}),[cb,location])})((()=>toggle(!1)),[isOpen]);const isActivePath=({path:path})=>path===location.pathname,hasActiveRoute=routes.some((({path:path,routes:subRoutes})=>isActivePath({path:path})||(null==subRoutes?void 0:subRoutes.some(isActivePath)))),classes=cx(appHeaderStyles.navItem,styles.topNavBarItem,styles.navBarItem,hasActiveRoute&&appHeaderStyles.activeNavItem);return React.createElement("button",_extends({id:id,onClick:()=>{toggle(!isOpen)},className:classes,tabIndex:0,role:"menuitem"},accessibilityProps),React.createElement(InlineLabel,{iconPosition:"right",icon:React.createElement(Icon,{icon:"gw-more-vertical",style:{fontSize:"1rem"}}),className:appHeaderStyles.titleWrapper},translator(messages.moreButtonText)))},NestedRoutesComponent=({routes:routes,id:id,moreButtonListMenuOnLeft:moreButtonListMenuOnLeft})=>{const nestedRoutes=useMemo((()=>routes.map(removeNavLinkIcon).map((({navLink:navLink,...rest})=>({...rest,navLink:{...navLink,className:cx(null==navLink?void 0:navLink.className,appHeaderStyles.moreMenuItem)}})))),[routes]),renderTriggerWrapFN=useCallback((({id:triggerId,menuId:menuId,isOpen:isOpen,onMenuItemClick:__,...accessibilityProps},toggle)=>React.createElement(MoreButtonContent,{toggle:toggle,routes:nestedRoutes,isOpen:isOpen,id:triggerId,accessibilityProps:accessibilityProps})),[nestedRoutes,appHeaderStyles]);return nestedRoutes.length?React.createElement(DropdownMenu,{id:id,renderTrigger:renderTriggerWrapFN,alignRight:moreButtonListMenuOnLeft,className:appHeaderStyles.moreButtonDropdown},React.createElement(NavigationContent,{routes:nestedRoutes,nestedRoutesComponent:NavBarAccordion,alignment:"top"})):null};export const createMoreButton=({routes:routes,moreButtonListMenuOnLeft:moreButtonListMenuOnLeft})=>({nestedRoutesComponent:({focused:focused,id:id})=>React.createElement(NestedRoutesComponent,{routes:routes,focused:focused,id:id,moreButtonListMenuOnLeft:moreButtonListMenuOnLeft}),routes:[{path:"/"}]});MoreButtonContent.__docgenInfo={componentName:"MoreButtonContent",packageName:"@jutro/router",description:"",displayName:"MoreButtonContent",methods:[],actualName:"MoreButtonContent"},NestedRoutesComponent.__docgenInfo={componentName:"NestedRoutesComponent",packageName:"@jutro/router",description:"",displayName:"NestedRoutesComponent",methods:[],actualName:"NestedRoutesComponent"};