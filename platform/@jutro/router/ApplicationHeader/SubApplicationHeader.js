import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useState,useLayoutEffect,useMemo,useRef,useContext}from"react";import cx from"classnames";import debounce from"lodash/debounce";import last from"lodash/last";import merge from"lodash/merge";import sum from"lodash/sum";import PropTypes from"prop-types";import{routesShape,contextSwitcherShape}from"@jutro/prop-types";import{TranslatorContext}from"@jutro/locale";import{TopNavigation}from"../NavBar/TopNavigation/TopNavigation";import styles from"./ApplicationHeader.module.css";import{createMoreButton}from"./MoreButton";import{messages}from"./ApplicationHeader.messages";import{useObserveThemeFontsLoading}from"../hooks/useObserveThemeFontsLoading";const getElementPaddings=(element,padding)=>parseInt(getComputedStyle(element).getPropertyValue(padding),10),countNavItemToSlice=element=>{const elementWidth=(element=>element.clientWidth-getElementPaddings(element,"padding-right")-getElementPaddings(element,"padding-left"))(element);let childrenWidth=0;return[...element.children].findIndex((el=>(childrenWidth+=el.getBoundingClientRect().width,childrenWidth>elementWidth)))},useMoreListPosition=(navigationRoutes,subHeaderRef,subHeaderRoutesCount)=>{const _useState5=useState(!0),_useState6=_slicedToArray(_useState5,2),moreButtonListMenuOnLeft=_useState6[0],changeMoreMenuPosition=_useState6[1],initialNavigationChildrenWidths=((element,navigationRoutes)=>{const _useState=useState([]),_useState2=_slicedToArray(_useState,2),initialElementChildrenWidthsArray=_useState2[0],setInitialElementChildrenWidthsArray=_useState2[1];return useLayoutEffect((()=>{var _element$current;const navigationContentNode=null===(_element$current=element.current)||void 0===_element$current?void 0:_element$current.children,navigationContentNodeWidthsArray=navigationContentNode?[...navigationContentNode].map((node=>node.offsetWidth)):void 0;setInitialElementChildrenWidthsArray(navigationContentNodeWidthsArray)}),[element,navigationRoutes]),initialElementChildrenWidthsArray})(subHeaderRef,navigationRoutes);return useLayoutEffect((()=>{if(!(navigationRoutes.length>subHeaderRoutesCount)||!subHeaderRef.current)return;const container=subHeaderRef.current,moreListNavLinksWidths=initialNavigationChildrenWidths.slice(subHeaderRoutesCount),subHeaderNavLinksWidths=initialNavigationChildrenWidths.slice(0,subHeaderRoutesCount),moreButtonWidth=last(container.children).offsetWidth,subHeaderPaddings=getElementPaddings(container,"padding-right")+getElementPaddings(container,"padding-left");container.offsetWidth+subHeaderPaddings-sum(subHeaderNavLinksWidths)-moreButtonWidth>Math.max(...moreListNavLinksWidths)?changeMoreMenuPosition(!1):changeMoreMenuPosition(!0),subHeaderNavLinksWidths.length||changeMoreMenuPosition(!1)}),[navigationRoutes.length,subHeaderRoutesCount,subHeaderRef,initialNavigationChildrenWidths]),moreButtonListMenuOnLeft},subApplicationHeaderPropTypes={className:PropTypes.string,navigationRoutes:routesShape,contextSwitcher:contextSwitcherShape};export const SubApplicationHeader=({className:className,navigationRoutes:navigationRoutes,contextSwitcher:contextSwitcher})=>{const classes=cx(styles.subApplicationHeader,className),translator=useContext(TranslatorContext),subHeaderRef=useRef(),_useRoutesForNavigati=((navigationRoutes,containerRef)=>{const statusRef=useRef("initial"),_useState3=useState(navigationRoutes.length),_useState4=_slicedToArray(_useState3,2),sliceIndex=_useState4[0],setSliceIndex=_useState4[1],visibleNavigationRoutes=useMemo((()=>navigationRoutes.filter((route=>!1!==route.showOnNavBar))),[navigationRoutes]),routesForSubHeader=useMemo((()=>visibleNavigationRoutes.slice(0,sliceIndex)),[visibleNavigationRoutes,sliceIndex]),routesForMoreButton=useMemo((()=>visibleNavigationRoutes.slice(sliceIndex)),[visibleNavigationRoutes,sliceIndex]),hasMoreButton=!!routesForMoreButton.length,latestFontLoadUpdate=useObserveThemeFontsLoading(containerRef);return useLayoutEffect((()=>{var _containerRef$current;"initial"===statusRef.current&&(null===(_containerRef$current=containerRef.current)||void 0===_containerRef$current||_containerRef$current.classList.add(styles.hiddenOverflow));const applyHiddenOverflow=()=>{var _containerRef$current2;null===(_containerRef$current2=containerRef.current)||void 0===_containerRef$current2||_containerRef$current2.classList.add(styles.hiddenOverflow),window.removeEventListener("resize",applyHiddenOverflow)},setStable=()=>{var _containerRef$current3;statusRef.current="stable",null===(_containerRef$current3=containerRef.current)||void 0===_containerRef$current3||_containerRef$current3.classList.remove(styles.hiddenOverflow)},computeSliceIndex=()=>{if(!containerRef.current||"stable"===statusRef.current)return;const navItemIndexToSlice=countNavItemToSlice(containerRef.current)-(hasMoreButton?1:0),possiblyMoreButtonNotNeeded=!!hasMoreButton&&containerRef.current.children.length===visibleNavigationRoutes.length,needToGrow=hasMoreButton||possiblyMoreButtonNotNeeded;if(navItemIndexToSlice<0&&needToGrow)return statusRef.current="growing",void setSliceIndex(possiblyMoreButtonNotNeeded?visibleNavigationRoutes.length:containerRef.current.children.length);if(!needToGrow||"initial"===statusRef.current){const isEnoughSpace=navItemIndexToSlice<0;return isEnoughSpace||"growing"===statusRef.current?setStable():statusRef.current="split",void setSliceIndex(isEnoughSpace?visibleNavigationRoutes.length:navItemIndexToSlice)}if("growing"===statusRef.current)return setStable(),void setSliceIndex((prev=>prev-1));setStable(),setSliceIndex(navItemIndexToSlice)};"stable"!==statusRef.current?computeSliceIndex():statusRef.current="idle";const handleResize=debounce((()=>{statusRef.current="initial",computeSliceIndex()}),200);return window.addEventListener("resize",applyHiddenOverflow),window.addEventListener("resize",handleResize),()=>{"idle"===statusRef.current&&(statusRef.current="initial"),handleResize.cancel(),window.removeEventListener("resize",applyHiddenOverflow),window.removeEventListener("resize",handleResize)}}),[sliceIndex,visibleNavigationRoutes,containerRef,latestFontLoadUpdate,hasMoreButton]),[routesForSubHeader,routesForMoreButton]})(navigationRoutes,subHeaderRef),_useRoutesForNavigati2=_slicedToArray(_useRoutesForNavigati,2),routesForSubHeader=_useRoutesForNavigati2[0],routesForMoreButton=_useRoutesForNavigati2[1],moreButtonListMenuOnLeft=useMoreListPosition(navigationRoutes,subHeaderRef,routesForSubHeader.length-(routesForMoreButton.length?1:0)),navRoutes=(routesForSubHeader||navigationRoutes).map((route=>{var _route$routes,_route$navLink;return merge({},route,{navLink:{className:cx(styles.navItem,{[styles.navigationDropDown]:(null===(_route$routes=route.routes)||void 0===_route$routes?void 0:_route$routes.length)>0},null===(_route$navLink=route.navLink)||void 0===_route$navLink?void 0:_route$navLink.className),activeClassName:styles.activeNavItem}})}));return React.createElement("nav",{title:translator(messages.subHeaderNavTitle),className:classes},React.createElement(TopNavigation,{wrap:!0,contextSwitcher:contextSwitcher,navBarRef:subHeaderRef,routes:routesForMoreButton.length?[...navRoutes,createMoreButton({routes:routesForMoreButton,moreButtonListMenuOnLeft:moreButtonListMenuOnLeft})]:navRoutes}))};SubApplicationHeader.defaultProps={navigationRoutes:[]},SubApplicationHeader.propTypes=subApplicationHeaderPropTypes,SubApplicationHeader.__docgenInfo={description:"SubApplicationHeader is subheader for the default header for all Guidewire applications.\nIt contains navigation.\n\n@type {React.FC<PropTypes.InferProps<typeof subApplicationHeaderPropTypes>>}\n@metadataType container\n@param props",methods:[],displayName:"SubApplicationHeader",props:{navigationRoutes:{defaultValue:{value:"[]",computed:!1},type:{name:"custom",raw:"routesShape"},required:!1,description:"Display nav bar defined by routing metadata object. The className and activeClassName in navLink in each element is overwritten"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},contextSwitcher:{type:{name:"custom",raw:"contextSwitcherShape"},required:!1,description:"Context switcher object"}}},SubApplicationHeader.__docgenInfo={componentName:"SubApplicationHeader",packageName:"@jutro/router",description:"SubApplicationHeader is subheader for the default header for all Guidewire applications.\nIt contains navigation.",displayName:"SubApplicationHeader",methods:[],actualName:"SubApplicationHeader",metadataType:"container",props:{className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},navigationRoutes:{type:{name:"arrayOf",value:{name:"custom",raw:"routeShape"}},required:!1,description:"Display nav bar defined by routing metadata object. The className and activeClassName in navLink in each element is overwritten",defaultValue:{value:"[]",computed:!1}},contextSwitcher:{type:{name:"shape",value:{defaultLabel:{name:"custom",raw:"intlMessageShape",description:"Default button label when no context is active",required:!1},values:{name:"arrayOf",value:{name:"custom",raw:"contextShape.isRequired"},description:"Array of values for the contexts",required:!0}}},required:!1,description:"Context switcher object"}}};