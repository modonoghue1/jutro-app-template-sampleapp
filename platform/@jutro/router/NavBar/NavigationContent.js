import React,{useMemo}from"react";import PropTypes from"prop-types";import get from"lodash/get";import{routesShape,contextSwitcherShape}from"@jutro/prop-types";import cx from"classnames";import{NavBarLink}from"./NavBarLink";import styles from"./NavigationContent.module.css";import{ContextSwitcher}from"../ContextSwitcher/ContextSwitcher";export const NavigationContent=({routes:routes,contextSwitcher:contextSwitcher,nestedRoutesComponent:nestedRoutesComponent,alignment:alignment,className:className,contextSwitcherClassName:contextSwitcherClassName,navBarRef:navBarRef})=>{var _contextSwitcher$valu;const isTop="top"===alignment,classes=cx(styles.navigationContent,className),contextSwitcherClasses=cx(styles.contextSwitcherContainer,contextSwitcherClassName),items=useMemo((()=>{let index=-1;return routes.map((({title:title,navLink:navLink={},path:path,href:href,target:target,showOnNavBar:showOnNavBar=!0,exact:exact,routes:navRoutes,nestedRoutesComponent:nestedRoutesComponentForNavItem,id:id})=>{if(!showOnNavBar)return null;index+=1;const navItemProps={header:navLink.text||title,icon:navLink.icon,to:path,href:href,target:target,exact:exact,className:navLink.className,activeClassName:navLink.activeClassName,alignment:alignment,id:navLink.id||id||`navLink_${index}`,routes:navRoutes,role:"menuitem",notifications:navLink.notifications,...navLink.componentProps},routesComponent=get(navRoutes,"length",0)&&(nestedRoutesComponentForNavItem||nestedRoutesComponent),NavComponent=navLink.component||routesComponent||NavBarLink;return{key:path+title+index,NavComponent:NavComponent,navItemProps:navItemProps}})).filter((item=>item))}),[routes,alignment,nestedRoutesComponent]);return React.createElement(React.Fragment,null,(null==contextSwitcher||null===(_contextSwitcher$valu=contextSwitcher.values)||void 0===_contextSwitcher$valu?void 0:_contextSwitcher$valu.length)>0&&React.createElement("div",{className:contextSwitcherClasses},React.createElement(ContextSwitcher,contextSwitcher)),React.createElement("ul",{className:classes,role:isTop?"menubar":"menu",ref:navBarRef},items.map((({key:key,NavComponent:NavComponent,navItemProps:navItemProps})=>React.createElement("li",{className:cx({[styles.topNavigationItem]:isTop}),role:"none",key:key},React.createElement(NavComponent,navItemProps))))))};NavigationContent.propTypes={routes:routesShape,contextSwitcher:contextSwitcherShape,alignment:PropTypes.oneOf(["top","left"]),className:PropTypes.string,navBarRef:PropTypes.shape({current:PropTypes.instanceOf(Element)})},NavigationContent.__docgenInfo={description:"",methods:[],displayName:"NavigationContent",props:{routes:{type:{name:"custom",raw:"routesShape"},required:!1,description:"Routing metadata object"},contextSwitcher:{type:{name:"custom",raw:"contextSwitcherShape"},required:!1,description:"Context switcher object"},alignment:{type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'left'",computed:!1}]},required:!1,description:"Navigation alignment"},className:{type:{name:"string"},required:!1,description:"Additional class names for component"},navBarRef:{type:{name:"shape",value:{current:{name:"instanceOf",value:"Element",required:!1}}},required:!1,description:"Reference to the navigation bar HTML element"}}},NavigationContent.__docgenInfo={componentName:"NavigationContent",packageName:"@jutro/router",description:"",displayName:"NavigationContent",methods:[],actualName:"NavigationContent",props:{routes:{type:{name:"arrayOf",value:{name:"custom",raw:"routeShape"}},required:!1,description:"Routing metadata object"},contextSwitcher:{type:{name:"shape",value:{defaultLabel:{name:"custom",raw:"intlMessageShape",description:"Default button label when no context is active",required:!1},values:{name:"arrayOf",value:{name:"custom",raw:"contextShape.isRequired"},description:"Array of values for the contexts",required:!0}}},required:!1,description:"Context switcher object"},alignment:{type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'left'",computed:!1}]},required:!1,description:"Navigation alignment"},className:{type:{name:"string"},required:!1,description:"Additional class names for component"},navBarRef:{type:{name:"shape",value:{current:{name:"instanceOf",value:"Element",required:!1}}},required:!1,description:"Reference to the navigation bar HTML element"}}};