import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext,useCallback}from"react";import cx from"classnames";import PropTypes from"prop-types";import{TranslatorContext}from"@jutro/locale";import{intlMessageShape}from"@jutro/prop-types";import{Icon,InlineLabel}from"@jutro/components";import{withRouter}from"react-router-dom";import _ from"lodash";import{DropdownMenu}from"../../../DropdownMenu/DropdownMenu";import{DropdownMenuLink}from"../../../DropdownMenu/DropdownMenuLink";import styles from"../../NavBarItem.module.css";export const NavBarDropdownInternal=props=>{const header=props.header,icon=props.icon,disabled=props.disabled,className=props.className,activeClassName=props.activeClassName,alignment=props.alignment,routes=props.routes,id=props.id,translator=useContext(TranslatorContext),isTopNavBar="top"===alignment,hasActiveRoute=_.some(routes,(route=>route.path===props.location.pathname)),classes=cx(styles.navBarItem,className,isTopNavBar?styles.topNavBarItem:styles.leftNavBarItem,{[styles.activeLeftNavBarItem]:hasActiveRoute&&!isTopNavBar,[styles.activeTopNavBarItem]:hasActiveRoute,[activeClassName]:hasActiveRoute}),iconComponent=icon&&React.createElement(Icon,{icon:icon,className:styles.navBarItemIcon}),handleRenderTrigger=useCallback((({id:triggerId,isOpen:isOpen,menuId:menuId,...others},toggleMenu)=>React.createElement("button",_extends({id:triggerId,tabIndex:disabled?-1:0,disabled:disabled,className:classes,onClick:()=>{toggleMenu(!isOpen)},"aria-expanded":isOpen},others),React.createElement(InlineLabel,{icon:iconComponent},translator(header)),React.createElement(Icon,{icon:"gw-expand-more",className:styles.navBarItemChevron}))),[classes,disabled,header,iconComponent,styles.navBarItemChevron,translator]);return React.createElement(DropdownMenu,{className:styles.navBarDropdown,id:id,renderTrigger:handleRenderTrigger},routes&&routes.map((({title:title,path:path})=>React.createElement(DropdownMenuLink,{key:path,activeClassName:styles.active,to:path},title))))};NavBarDropdownInternal.propTypes={id:PropTypes.string,className:PropTypes.string,header:intlMessageShape.isRequired,icon:PropTypes.string,disabled:PropTypes.bool,alignment:PropTypes.oneOf(["top","left"])},NavBarDropdownInternal.displayName="NavBarDropdown";export const NavBarDropdown=withRouter(NavBarDropdownInternal);NavBarDropdownInternal.__docgenInfo={description:"The NavBarLink component is designed as a simple component for presenting a dropdown inside the NavBar container.\n\n@param {Array<any>} props properties for NavBarLink component\n\n@returns {React.ReactElement} JSX for the NavBarLink component",methods:[],displayName:"NavBarDropdown",props:{id:{type:{name:"string"},required:!1,description:"Used to identify the component"},className:{type:{name:"string"},required:!1,description:"Additional class names for component."},header:{type:{name:"custom",raw:"intlMessageShape.isRequired"},required:!1,description:"Link header."},icon:{type:{name:"string"},required:!1,description:"Icon to render to the left of the header"},disabled:{type:{name:"bool"},required:!1,description:"Flag to make dropdown disabled"},alignment:{type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'left'",computed:!1}]},required:!1,description:"Navigation alignment"}}},NavBarDropdownInternal.__docgenInfo={componentName:"NavBarDropdown",packageName:"@jutro/router",description:"The NavBarLink component is designed as a simple component for presenting a dropdown inside the NavBar container.",displayName:"NavBarDropdown",methods:[],actualName:"NavBarDropdownInternal",props:{id:{type:{name:"string"},required:!1,description:"Used to identify the component"},className:{type:{name:"string"},required:!1,description:"Additional class names for component."},header:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!0,description:"Link header."},icon:{type:{name:"string"},required:!1,description:"Icon to render to the left of the header"},disabled:{type:{name:"bool"},required:!1,description:"Flag to make dropdown disabled"},alignment:{type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'left'",computed:!1}]},required:!1,description:"Navigation alignment"}}};