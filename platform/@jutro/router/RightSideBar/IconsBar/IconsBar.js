import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext}from"react";import cx from"classnames";import PropTypes from"prop-types";import{IconButton}from"@jutro/components";import{Flex}from"@jutro/layout";import{TranslatorContext}from"@jutro/locale";import{sideContentShape}from"@jutro/prop-types";import styles from"./IconsBar.module.css";export const IconsBar=({className:className,sides:sides,activeSide:activeSide,onSelection:onSelection,...other})=>{const classes=cx(styles.iconsBar,className),translator=useContext(TranslatorContext),getIconClassName=sideId=>cx({[styles.activeIcon]:sideId===activeSide});return React.createElement(Flex,_extends({className:classes,role:"tablist",direction:"column"},other),sides.map((({icon:icon,label:label,id:id},index)=>{const sideId=null!=id?id:index;return React.createElement(IconButton,{id:`right-side-icon-tab-${sideId}`,key:sideId,className:getIconClassName(sideId),onClick:()=>onSelection(sideId),icon:icon,role:"tab","aria-controls":`right-side-panel-${sideId}`,"aria-label":translator(label),"aria-selected":sideId===activeSide})})))};const iconsBarPropTypes={className:PropTypes.string,sides:PropTypes.arrayOf(sideContentShape.isRequired).isRequired,activeSide:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),onSelection:PropTypes.func.isRequired};IconsBar.propTypes=iconsBarPropTypes,IconsBar.__docgenInfo={description:"The `IconsBar` component is designed as a container for Icon tabs\n\n@param {object} props properties for IconsBar component\n@returns {React.ReactElement}\n\n@metadataType container",methods:[],displayName:"IconsBar",props:{className:{type:{name:"string"},required:!1,description:"Additional class names for component."},sides:{type:{name:"arrayOf",value:{name:"custom",raw:"sideContentShape.isRequired"}},required:!0,description:"Array of contents and icons to display"},activeSide:{type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1,description:"Index of the active icon in the array"},onSelection:{type:{name:"func"},required:!0,description:"Callback when an icon is clicked on"}}},IconsBar.__docgenInfo={componentName:"IconsBar",packageName:"@jutro/router",description:"The `IconsBar` component is designed as a container for Icon tabs",displayName:"IconsBar",methods:[],actualName:"IconsBar",metadataType:"container",props:{className:{type:{name:"string"},required:!1,description:"Additional class names for component."},sides:{type:{name:"arrayOf",value:{name:"shape",value:{id:{name:"string",description:"Id of side content trigger button",required:!1},label:{name:"custom",raw:"intlMessageShape.isRequired",description:"Label describing the content used for accessibility",required:!0},icon:{name:"string",description:"Icon that will represent the content on the icon bar",required:!1},component:{name:"elementType",description:"Component to render as content",required:!0},componentProps:{name:"shape",value:{},description:"Component props",required:!1}}}},required:!0,description:"Array of contents and icons to display"},activeSide:{type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1,description:"Index of the active icon in the array"},onSelection:{type:{name:"func"},required:!0,description:"Callback when an icon is clicked on"}}};