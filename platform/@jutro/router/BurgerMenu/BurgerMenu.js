import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useContext,useState,useCallback,useEffect}from"react";import PropTypes from"prop-types";import cx from"classnames";import{TranslatorContext}from"@jutro/locale";import{IconButton}from"@jutro/components";import styles from"./BurgerMenu.module.css";import{BurgerSidebar}from"./BurgerSidebar";import{messages}from"./BurgerMenu.messages";export const BurgerMenu=({className:className,burgerContent:burgerContent,separatorClassName:separatorClassName,buttonClassName:buttonClassName})=>{const _useState=useState(!1),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1],_useState3=useState(document.body.style.overflow),initialBodyOverflow=_slicedToArray(_useState3,1)[0],translator=useContext(TranslatorContext),toggleSidebar=useCallback((()=>setIsOpen((prevIsOpen=>!prevIsOpen))),[]);useEffect((()=>{document.body.style.overflow=isOpen?"hidden":initialBodyOverflow}),[isOpen]);const burgerMenuStyles=cx(styles.burgerMenu,className),adjustSidebarMenuToViewportHeight=useCallback((()=>{const viewportHeight=window.innerHeight;document.documentElement.style.setProperty("--burger-menu-sidebar-height",`${viewportHeight}px`)}),[]);return useEffect((()=>(window.addEventListener("resize",adjustSidebarMenuToViewportHeight),()=>{window.removeEventListener("resize",adjustSidebarMenuToViewportHeight)})),[adjustSidebarMenuToViewportHeight]),React.createElement("div",{className:burgerMenuStyles},React.createElement(IconButton,{icon:"gw-menu",iconColor:"light",onClick:toggleSidebar,"aria-label":translator(messages.openBurgerMenu),"aria-expanded":isOpen,className:cx(styles.burgerButton,buttonClassName),iconClassName:styles.burgerButtonIcon}),React.createElement(BurgerSidebar,{isOpen:isOpen,setIsOpen:setIsOpen,burgerContent:burgerContent.filter(Boolean),separatorClassName:separatorClassName}))};BurgerMenu.propTypes={className:PropTypes.string,burgerContent:PropTypes.arrayOf(PropTypes.node),separatorClassName:PropTypes.string,buttonClassName:PropTypes.string},BurgerMenu.__docgenInfo={description:"BurgerMenu component renders burger menu\n\n@returns {React.ReactElement} - rendered component",methods:[],displayName:"BurgerMenu",props:{className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},burgerContent:{type:{name:"arrayOf",value:{name:"node"}},required:!1,description:"Sidebar content"},separatorClassName:{type:{name:"string"},required:!1,description:"Optional css class to the burger sidebar separator"},buttonClassName:{type:{name:"string"},required:!1,description:"Optional css class to the burger menu button"}}},BurgerMenu.__docgenInfo={componentName:"BurgerMenu",packageName:"@jutro/router",description:"BurgerMenu component renders burger menu",displayName:"BurgerMenu",methods:[],actualName:"BurgerMenu",props:{className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},burgerContent:{type:{name:"arrayOf",value:{name:"node"}},required:!1,description:"Sidebar content"},separatorClassName:{type:{name:"string"},required:!1,description:"Optional css class to the burger sidebar separator"},buttonClassName:{type:{name:"string"},required:!1,description:"Optional css class to the burger menu button"}}};