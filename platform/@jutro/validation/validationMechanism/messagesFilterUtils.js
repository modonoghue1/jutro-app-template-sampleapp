import isEmpty from"lodash/isEmpty";import isUndefined from"lodash/isUndefined";export const excludeMultiMessageWarningsFromMessages=validationMessages=>Object.entries(validationMessages).reduce(((accu,[key,messageList])=>{if(Array.isArray(messageList)){const errorList=messageList.filter((message=>"error"===message.type));return isEmpty(errorList)?{...accu,[key]:messageList.filter((message=>"warning"===message.type))}:{...accu,[key]:messageList.filter((message=>"error"===message.type))}}return{...accu,[key]:messageList}}),{});export const groupCurrentValidationMessages=messageObject=>Object.entries(messageObject).reduce(((accu,[key,messageList])=>{const formattedMessageList=Array.isArray(messageList)?messageList:[messageList],errorList=formattedMessageList.filter((message=>"error"===message.type)),warningList=formattedMessageList.filter((message=>"warning"===message.type));return{error:{...null==accu?void 0:accu.error,[key]:errorList},warning:{...null==accu?void 0:accu.warning,[key]:warningList}}}),{error:{},warning:{}});export const getMessagesCount=messageObject=>isUndefined(messageObject)||isEmpty(messageObject)?0:Object.keys(messageObject).reduce(((accu,keyName)=>{const messageDetails=messageObject[keyName];return accu+(Array.isArray(messageDetails)?messageDetails.length:1)}),0);