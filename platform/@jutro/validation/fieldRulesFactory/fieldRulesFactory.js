import isNil from"lodash/isNil";import isObject from"lodash/isObject";import{isValidatePhoneNumber}from"@jutro/locale";import{parseDateFromDataType,formatDateToLocalePattern,isDateInRange,validateDateUserInput,getDateInputFormats}from"@jutro/platform";import{messages}from"./fieldValidation.messages";import{isComplete}from"../helpers/inputMaskHelpers";import*as mimeTypes from"../helpers/fileUploadHelpers";const getMessage=(key,message)=>message||messages[key],handleTranslation=(message,translator,translatorArgs)=>isObject(message)&&"type"in message?{message:translator(message.message,translatorArgs),details:translator(message.details,translatorArgs),type:message.type}:translator(message,translatorArgs),inputPatterns={email:(input,message)=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(input).toLowerCase())?void 0:message,alphanumeric:(input,message)=>/^[a-z0-9]+$/i.test(input)?void 0:message,lowercase:(input,message)=>input!==(null==input?void 0:input.toLowerCase())?message:void 0,uppercase:(input,message)=>input!==(null==input?void 0:input.toUpperCase())?message:void 0,url:(input,message)=>new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(input)?void 0:message};export const fieldRulesFactory={required:([,message])=>(value,path,translator)=>isNil(value)||""===value?handleTranslation(getMessage("required",message),translator):void 0,minValue:([minValue,message])=>(value,path,translator)=>value<(null!=minValue?minValue:Number.MIN_SAFE_INTEGER)?handleTranslation(getMessage("minValue",message),translator,{value:String(minValue)}):void 0,maxValue:([maxValue,message])=>(value,path,translator)=>value>(null!=maxValue?maxValue:Number.MAX_SAFE_INTEGER)?handleTranslation(getMessage("maxValue",message),translator,{value:String(maxValue)}):void 0,maxDate:([maxDate,message],options)=>(value,path,translator)=>{if(!value)return;const date=parseDateFromDataType(value);if(!isDateInRange(date,void 0,maxDate).fulfillMaxRequirement&&maxDate&&options){const formattedMaxDate=formatDateToLocalePattern(parseDateFromDataType(maxDate),options.locale.code,options.format);return handleTranslation(getMessage("maxDate",message),translator,{maxDate:formattedMaxDate||""})}},minDate:([minDate,message],options)=>(value,path,translator)=>{if(!value)return;const date=parseDateFromDataType(value);if(!isDateInRange(date,minDate,void 0).fulfillMinRequirement&&minDate&&options){const formattedMinDate=formatDateToLocalePattern(parseDateFromDataType(minDate),options.locale.code,options.format);return handleTranslation(getMessage("minDate",message),translator,{minDate:formattedMinDate||""})}},pattern:([pattern,message])=>{const presetPattern=inputPatterns[String(pattern)];if(presetPattern)return(value,path,translator)=>{if(value)return presetPattern(String(value),handleTranslation(getMessage(pattern,message),translator))};const customRegex=new RegExp(String(pattern));return(value,path,translator)=>customRegex.test(String(value))?void 0:handleTranslation(getMessage("regex",message),translator,{value:String(pattern)})},mask:([mask,message])=>(value,path,translator)=>{if(value)return isComplete(String(value),String(mask))?void 0:handleTranslation(getMessage("incompleteInput",message),translator)},countryCode:([countryCode,message])=>(value,path,translator)=>{if(countryCode&&value&&isComplete(String(value)))return isValidatePhoneNumber(String(value),String(countryCode))?void 0:handleTranslation(getMessage("invalidPhone",message),translator)},accept:([accept,message])=>(value,path,translator)=>{if(!isObject(value)||!accept)return;return String(accept).toLowerCase().split(",").map((item=>item.trim())).some(mimeTypes.isMatches(value))?void 0:handleTranslation(getMessage("incorrectFileTypeMessage",message),translator)},maxFileSizeKB:([maxFileSizeKB,message])=>(value,path,translator)=>{if(isObject(value))return maxFileSizeKB&&value.file&&isObject(value.file)&&value.file.size>1e3*Number(maxFileSizeKB)?handleTranslation(getMessage("maxFileSizeKBMessage",message),translator,{value:String(maxFileSizeKB)}):void 0},maxLength:([maxLength,message])=>(value,path,translator)=>{if(isObject(value))return maxLength&&value.file&&String(value.fileName).length>maxLength?handleTranslation(getMessage("maxFileNameLengthMessage",message),translator,{value:String(maxLength)}):void 0},invalidDate:([,message],options)=>(value,path,translator)=>{if("string"==typeof value&&options&&!validateDateUserInput(value,getDateInputFormats(options.localePattern)))return handleTranslation(getMessage("invalidDate",message),translator)}};