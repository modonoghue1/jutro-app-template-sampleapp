import React,{memo}from"react";import PropTypes from"prop-types";import{Prompt,matchPath}from"react-router-dom";import{PromptService}from"@jutro/router";import{v1 as uuid}from"uuid";function WizardPromptInternal({cancelPrompt:cancelPrompt,previousPrompt:previousPrompt,basePath:basePath}){const when=previousPrompt&&!1!==previousPrompt.when||cancelPrompt&&!1!==cancelPrompt.when;return React.createElement(Prompt,{when:!!when,message:function(location){return handlePromptMessage(location,cancelPrompt,previousPrompt,basePath)}})}export const handlePromptMessage=(location,cancelPrompt,previousPrompt,basePath)=>{var _location$state;let action=uuid();if(null!==(_location$state=location.state)&&void 0!==_location$state&&_location$state.action&&(action=location.state.action),["finish","next","redirect"].includes(action))return!0;const isWizardPath=matchPath(location.pathname,{path:basePath});return isWizardPath&&previousPrompt&&!1!==previousPrompt.when?(PromptService.pushPrompt(action,{...previousPrompt}),action):!(!isWizardPath&&cancelPrompt&&!1!==cancelPrompt.when)||(PromptService.pushPrompt(action,{...cancelPrompt}),action)};WizardPromptInternal.propTypes={cancelPrompt:PropTypes.shape({when:PropTypes.bool,title:PropTypes.string,message:PropTypes.string,trigger:PropTypes.func}),previousPrompt:PropTypes.shape({when:PropTypes.bool,title:PropTypes.string,message:PropTypes.string,trigger:PropTypes.func}),basePath:PropTypes.string},WizardPromptInternal.displayName="WizardPrompt";export const WizardPrompt=memo(WizardPromptInternal);WizardPromptInternal.__docgenInfo={description:"WizardPrompt is a Jutro component.\nIt wraps <Prompt> for convenient prompting when in the context of a wizard.\nIt allows separate condition and prompt for 'previous' page and 'cancel' page.\n\nProperties: {@link WizardPromptInternal.propTypes}\n\n@example\n<WizardPrompt\n  cancelPrompt={{when: wizardChanged, message: 'Want to cancel?'}}\n  previousPrompt={{when: dataChanged, message: 'Want to go back?'}}\n/>",methods:[],displayName:"WizardPrompt",props:{cancelPrompt:{type:{name:"shape",value:{when:{name:"bool",required:!1},title:{name:"string",required:!1},message:{name:"string",required:!1},trigger:{name:"func",required:!1}}},required:!1,description:"Properties for 'cancel' prompt; contains 'when' and 'message'"},previousPrompt:{type:{name:"shape",value:{when:{name:"bool",required:!1},title:{name:"string",required:!1},message:{name:"string",required:!1},trigger:{name:"func",required:!1}}},required:!1,description:"Properties for 'previous' prompt; contains 'when' and 'message'"},basePath:{type:{name:"string"},required:!1,description:"Path"}}},WizardPromptInternal.__docgenInfo={componentName:"WizardPrompt",packageName:"@jutro/wizard-next",description:"WizardPrompt is a Jutro component.\nIt wraps <Prompt> for convenient prompting when in the context of a wizard.\nIt allows separate condition and prompt for 'previous' page and 'cancel' page.\n\nProperties: {@link WizardPromptInternal.propTypes}",displayName:"WizardPrompt",methods:[],actualName:"WizardPromptInternal",props:{cancelPrompt:{type:{name:"shape",value:{when:{name:"bool",required:!1},title:{name:"string",required:!1},message:{name:"string",required:!1},trigger:{name:"func",required:!1}}},required:!1,description:"Properties for 'cancel' prompt; contains 'when' and 'message'"},previousPrompt:{type:{name:"shape",value:{when:{name:"bool",required:!1},title:{name:"string",required:!1},message:{name:"string",required:!1},trigger:{name:"func",required:!1}}},required:!1,description:"Properties for 'previous' prompt; contains 'when' and 'message'"},basePath:{type:{name:"string"},required:!1,description:"Path"}}};