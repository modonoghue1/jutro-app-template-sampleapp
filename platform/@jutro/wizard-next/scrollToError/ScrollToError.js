import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React,{PureComponent}from"react";import PropTypes from"prop-types";import ReactDOM from"react-dom";export let ScrollToError=function(_PureComponent){_inherits(ScrollToError,PureComponent);var _super=_createSuper(ScrollToError);function ScrollToError(){return _classCallCheck(this,ScrollToError),_super.apply(this,arguments)}return _createClass(ScrollToError,[{key:"componentDidUpdate",value:function(){const containerNode=ReactDOM.findDOMNode(this).parentNode;this.scrollToError(containerNode)}},{key:"scrollToError",value:function(containerNode,initialQuery="div[role=alert][class*=error]"){if(containerNode){const errorFields=Array.from(containerNode.querySelectorAll(initialQuery));if(0===errorFields.length&&"div[role=alert][class*=error]"===initialQuery)return void this.scrollToError(containerNode,"div[role=alert][class*=fieldMessage]");const firstErrorField=errorFields.find((elem=>elem.offsetTop>0&&elem.offsetHeight>0))||errorFields[0];firstErrorField&&setTimeout((()=>{firstErrorField.scrollIntoView({behavior:"smooth",block:"center"})}),this.props.timeout)}}},{key:"render",value:function(){return""}}]),ScrollToError}();_defineProperty(ScrollToError,"propTypes",{counter:PropTypes.number,timeout:PropTypes.number}),_defineProperty(ScrollToError,"defaultProps",{counter:0,timeout:0}),ScrollToError.__docgenInfo={description:"ScrollToError is an Jutro component.\n\nThis is a helper component that can be added to\na page where form fields are displayed and validated.\nThis doesn't render anything, but uses the side effects\nof React lifecycle to inspect the DOM and scroll to the\nfirst field in error.\n\n@example\nthis.setState({errorTimestamp: Date.now()});\n<ScrollToError counter={this.state.errorTimestamp} />\n\n@extends PureComponent<{}>",methods:[{name:"scrollToError",docblock:"Searches for error fields in the container node and then scrolls to the first one\n\n@param {Node} containerNode - container node to search for error fields",modifiers:[],params:[{name:"containerNode",description:"container node to search for error fields",type:{name:"Node"},optional:!1},{name:"initialQuery"}],returns:null,description:"Searches for error fields in the container node and then scrolls to the first one"}],displayName:"ScrollToError",props:{counter:{defaultValue:{value:"0",computed:!1},type:{name:"number"},required:!1,description:"counter that should be incremented to trigger a scroll to error"},timeout:{defaultValue:{value:"0",computed:!1},type:{name:"number"},required:!1,description:"timeout used when the page is using some transition and we need to wait\nit finish to verify errors, eg. coverages inside an accordion"}}},ScrollToError.__docgenInfo={componentName:"ScrollToError",packageName:"@jutro/wizard-next",description:"ScrollToError is an Jutro component.\n\nThis is a helper component that can be added to\na page where form fields are displayed and validated.\nThis doesn't render anything, but uses the side effects\nof React lifecycle to inspect the DOM and scroll to the\nfirst field in error.",displayName:"ScrollToError",methods:[{name:"scrollToError",docblock:"Searches for error fields in the container node and then scrolls to the first one\n\n@param {Node} containerNode - container node to search for error fields",modifiers:[],params:[{name:"containerNode",description:"container node to search for error fields",type:{name:"Node"},optional:!1},{name:"initialQuery"}],returns:null,description:"Searches for error fields in the container node and then scrolls to the first one"}],actualName:"ScrollToError",props:{counter:{type:{name:"number"},required:!1,description:"counter that should be incremented to trigger a scroll to error",defaultValue:{value:"0",computed:!1}},timeout:{type:{name:"number"},required:!1,description:"timeout used when the page is using some transition and we need to wait\nit finish to verify errors, eg. coverages inside an accordion",defaultValue:{value:"0",computed:!1}}}};