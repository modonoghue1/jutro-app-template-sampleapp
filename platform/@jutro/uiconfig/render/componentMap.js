import React from"react";import cloneDeep from"lodash/cloneDeep";import merge from"lodash/merge";import{warning,makeUniqueWarningLog}from"@jutro/logger";import{Accordion,AccordionCard,AddressDisplay,Avatar,Badge,Breadcrumb,Button,ToggleField,Card,CheckboxField,CheckboxGroupField,ClickableCard,IconButton,ColorPicker,ColorSwatch,CurrencyField,CurrencyValue,DateField,DateValue,ImageRadioButtonField,Image,InfoLabel,InlineNotification,InputField,InputMaskField,InputNumberField,FileUploadField,FieldValue,FormattedCurrency,FormattedDate,FormattedDateRange,FormattedNumber,GlobalizationChooser,Link,Loader,LookupField,MapArea,NumberValue,PhoneNumberField,RadioButtonCardField,RadioButtonField,DropdownSelectField,StepperField,SwitchField,Slider,TabSet,Tab,TextAreaField,IntlElement,TypeaheadMultiSelectField,YearField,Panel,Header,HeaderActions,LogoTitle,Footer,FooterText,FooterNavBar,FooterCopyright,FooterNavLink,StickyFooter,InlineLoader,NotificationAction,IFrame,TagCollection,Tag,FieldIcon,Icon,Chevron,HelpHeading,HelpParagraph,HelpLink,SimpleProgressBar,PhaseProgressBar,StepProgressBar,ThemeChooser,ErrorBoundary,IntlPhoneNumberField,FormattedPhoneNumber,PhoneNumberValue,DateTimeField,DateRangeField,DateTimeZoneField}from"@jutro/components";import{Grid,GridItem,GridLayout,ColumnsLayout,Flex,FlexItem}from"@jutro/layout";import{AsyncLink,AsyncButtonLink,ButtonLink,DropdownMenu,DropdownMenuAvatar,DropdownMenuButton,DropdownMenuHeader,DropdownMenuLink,DropdownMenuSeparator,TopNavigation,SideNavigation}from"@jutro/router";export const simpleDatatypeComponentMap={boolean:{component:ToggleField},checkbox:{component:CheckboxField},currency:{component:CurrencyField},number:{component:InputNumberField},integer:{component:InputNumberField},radio:{component:RadioButtonField},select:{component:DropdownSelectField},string:{component:InputField},tel:{component:PhoneNumberField},text:{component:InputField},textarea:{component:TextAreaField},typelist:{component:DropdownSelectField},date:{component:DateField},year:{component:YearField},yesno:{component:ToggleField}};export const simpleNamedComponentMap={Accordion:{component:Accordion},AccordionCard:{component:AccordionCard},AddressDisplay:{component:AddressDisplay},AsyncLink:{component:AsyncLink},AsyncButtonLink:{component:AsyncButtonLink},Avatar:{component:Avatar},Badge:{component:Badge},Breadcrumb:{component:Breadcrumb},Button:{component:Button},ButtonLink:{component:ButtonLink},IconButton:{component:IconButton},Toggle:{component:ToggleField},Card:{component:Card},ClickableCard:{component:ClickableCard},Checkbox:{component:CheckboxField},CheckboxGroup:{component:CheckboxGroupField},Chevron:{component:Chevron},ColorPicker:{component:ColorPicker},ColorSwatch:{component:ColorSwatch},Currency:{component:CurrencyField},CurrencyValue:{component:CurrencyValue},DateValue:{component:DateValue},DropdownMenu:{component:DropdownMenu},DropdownMenuAvatar:{component:DropdownMenuAvatar},DropdownMenuButton:{component:DropdownMenuButton},DropdownMenuHeader:{component:DropdownMenuHeader},DropdownMenuLink:{component:DropdownMenuLink},DropdownMenuSeparator:{component:DropdownMenuSeparator},FieldIcon:{component:FieldIcon},FieldValue:{component:FieldValue},Flex:{component:Flex},FlexItem:{component:FlexItem},Footer:{component:Footer},FooterText:{component:FooterText},FooterNavBar:{component:FooterNavBar},FooterCopyright:{component:FooterCopyright},FooterNavLink:{component:FooterNavLink},FormattedCurrency:{component:FormattedCurrency},FormattedDate:{component:FormattedDate},FormattedDateRange:{component:FormattedDateRange},FormattedNumber:{component:FormattedNumber},Fragment:{component:React.Fragment},Grid:{component:Grid},GridItem:{component:GridItem},GridLayout:{component:GridLayout},ColumnsLayout:{component:ColumnsLayout},Icon:{component:Icon},Image:{component:Image},ImageRadioButton:{component:ImageRadioButtonField},InfoLabel:{component:InfoLabel},InlineNotification:{component:InlineNotification},Input:{component:InputField},InputMask:{component:InputMaskField},InputNumber:{component:InputNumberField},PhoneNumber:{component:PhoneNumberField},FileUpload:{component:FileUploadField},Link:{component:Link},Loader:{component:Loader},Lookup:{component:LookupField},GlobalizationChooser:{component:GlobalizationChooser},MapArea:{component:MapArea},NotificationAction:{component:NotificationAction},NumberValue:{component:NumberValue},RadioButtonCard:{component:RadioButtonCardField},RadioButton:{component:RadioButtonField},DropdownSelect:{component:DropdownSelectField},Stepper:{component:StepperField},Switch:{component:SwitchField},Slider:{component:Slider},TabSet:{component:TabSet},Tab:{component:Tab},TextArea:{component:TextAreaField},ThemeChooser:{component:ThemeChooser},TypeaheadMultiSelect:{component:TypeaheadMultiSelectField},Date:{component:DateField},DateTime:{component:DateTimeField},DateTimeZone:{component:DateTimeZoneField},Year:{component:YearField},Panel:{component:Panel},Header:{component:Header},HeaderActions:{component:HeaderActions},LogoTitle:{component:LogoTitle},TopNavigation:{component:TopNavigation},SideNavigation:{component:SideNavigation},StickyFooter:{component:StickyFooter},InlineLoader:{component:InlineLoader},IFrame:{component:IFrame},IntlElement:{component:IntlElement},Tag:{component:Tag},TagCollection:{component:TagCollection},HelpHeading:{component:HelpHeading},HelpParagraph:{component:HelpParagraph},HelpLink:{component:HelpLink},SimpleProgressBar:{component:SimpleProgressBar},PhaseProgressBar:{component:PhaseProgressBar},StepProgressBar:{component:StepProgressBar},IntlPhoneNumber:{component:IntlPhoneNumberField},DateRange:{component:DateRangeField},ErrorBoundary:{component:ErrorBoundary},FormattedPhoneNumber:{component:FormattedPhoneNumber},PhoneNumberValue:{component:PhoneNumberValue}};export const lowercaseSimpleNamedComponentMap=Object.entries(simpleNamedComponentMap).reduce(((componentMap,[key,val])=>({...componentMap,[key.toLowerCase()]:val})),{});export function resolveComponentFromDatatype(datatype,useDefault=!0){const componentInfo=simpleDatatypeComponentMap[datatype&&datatype.toLowerCase()];return componentInfo||(useDefault?simpleDatatypeComponentMap.string:null)}export function resolveComponentFromName(name){if(name)return simpleNamedComponentMap[name]||resolveComponentFromLowercaseName(name)}const logDeprecationWarning=makeUniqueWarningLog('using case-insensitive keys for "component" property in metadata has been deprecated. Match the casing used by the component Name'),resolveComponentFromLowercaseName=name=>{const component=lowercaseSimpleNamedComponentMap[name.toLowerCase()];return component&&logDeprecationWarning(),component};export function setComponentMapOverrides(componentMap,components){const overrideMap=cloneDeep(componentMap);Object.keys(overrideMap).forEach((key=>{const overrideComponent=overrideMap[key].component;if(overrideComponent){if(components){const component=components[overrideComponent];component&&(overrideComponent===overrideComponent.toLowerCase()?lowercaseSimpleNamedComponentMap[overrideComponent.toLowerCase()]={component:component}:simpleNamedComponentMap[overrideComponent]={component:component})}if(resolveComponentFromName(overrideComponent)){const resolvedComponent=resolveComponentFromName(overrideComponent);overrideMap[key].component=resolvedComponent.component}}simpleDatatypeComponentMap[key]&&(!0===overrideMap[key].replace?simpleDatatypeComponentMap[key]=overrideMap[key]:merge(simpleDatatypeComponentMap[key],overrideMap[key]))}))}export function setSimpleNamedComponentMapOverrides(componentMapOverrides){Object.keys(componentMapOverrides).forEach((key=>{if(simpleNamedComponentMap[key]&&(simpleNamedComponentMap[key]={...simpleNamedComponentMap[key],...componentMapOverrides[key]}),lowercaseSimpleNamedComponentMap[key.toLowerCase()]){const lowerCaseKey=key.toLowerCase();lowercaseSimpleNamedComponentMap[lowerCaseKey]={...lowercaseSimpleNamedComponentMap[lowerCaseKey],...componentMapOverrides[key]}}}))}export function appendSimpleNamedComponentMap(componentsMap){Object.entries(componentsMap).forEach((([key,value])=>{simpleNamedComponentMap[key]||lowercaseSimpleNamedComponentMap[key.toLowerCase()]?warning(`${key} already exists in simpleNamedComponentMap`):(simpleNamedComponentMap[key]=value,lowercaseSimpleNamedComponentMap[key.toLowerCase()]=value)}))}export function setSimpleDatatypeComponentMapOverrides(componentMapOverrides){Object.keys(componentMapOverrides).forEach((key=>{simpleDatatypeComponentMap[key]&&(simpleDatatypeComponentMap[key]={...simpleDatatypeComponentMap[key],...componentMapOverrides[key]})}))}