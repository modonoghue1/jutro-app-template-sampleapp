import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext,useEffect,useCallback,useMemo}from"react";import{logDeprecationMessage}from"@jutro/platform";import{ThemeContext}from"@jutro/theme";import{DropdownSelectField}from"../../inputs/DropdownSelectField/DropdownSelectField";import{themeChooserPropTypes,themeChooserDefaultProps}from"./propTypes";export const ThemeChooser=({id:id,availableThemes:availableThemes,theme:themeInput,defaultTheme:defaultTheme,onThemeChange:onThemeChange,className:className,label:label,skipPropagation:isValueControlledOutside,readOnly:readOnly,hideLabel:hideLabel,internalClassNames:internalClassNames,alwaysShowPlaceholder:alwaysShowPlaceholder,searchable:searchable,isInitiallyOpen:isInitiallyOpen,controlClassName:controlClassName,secondaryLabel:secondaryLabel,tooltip:tooltip,placeholder:placeholder,required:required,schemaRequired:schemaRequired,disabled:disabled,nullable:nullable,visible:visible,onValidationChange:onValidationChange,onBlur:onBlur,onFocus:onFocus,showErrors:showErrors,showRequired:showRequired,showOptional:showOptional,layout:layout,labelClassName:labelClassName,secondaryLabelClassName:secondaryLabelClassName,showValidationIcon:showValidationIcon,requiredFieldValidationMessage:requiredFieldValidationMessage,successMessage:successMessage,messageProps:messageProps,labelPosition:labelPosition,phone:phone,phoneWide:phoneWide,tablet:tablet})=>{const themeContextConfig=useContext(ThemeContext),theme=useMemo((()=>isValueControlledOutside&&availableThemes.find((({name:name})=>name===(themeInput&&themeInput.name)))),[themeInput])||themeContextConfig;useEffect((()=>{availableThemes.forEach((({dropTarget:dropTarget,name:name})=>{dropTarget&&logDeprecationMessage(`ThemeChooser: ${name} Theme`,void 0,void 0,dropTarget)}))}),[availableThemes]);const availableThemesOptions=useMemo((()=>availableThemes.map((({name:name})=>({displayName:name,id:name})))),[availableThemes]),handleOnChange=useCallback((themeName=>{const newTheme=availableThemes.find((themeItem=>themeItem.name===themeName));newTheme&&(onThemeChange&&onThemeChange(newTheme),!isValueControlledOutside&&(theme=>"switchTheme"in theme)(theme)&&theme.switchTheme(newTheme))}),[onThemeChange,availableThemes,theme]),dropdownSelectProps={id:id,className:className,label:label,hideLabel:hideLabel,readOnly:readOnly,internalClassNames:internalClassNames,alwaysShowPlaceholder:alwaysShowPlaceholder,searchable:searchable,isInitiallyOpen:isInitiallyOpen,controlClassName:controlClassName,secondaryLabel:secondaryLabel,tooltip:tooltip,placeholder:placeholder,required:required,schemaRequired:schemaRequired,disabled:disabled,nullable:nullable,visible:visible,onValidationChange:onValidationChange,onBlur:onBlur,onFocus:onFocus,showErrors:showErrors,showRequired:showRequired,showOptional:showOptional,layout:layout,labelClassName:labelClassName,secondaryLabelClassName:secondaryLabelClassName,showValidationIcon:showValidationIcon,requiredFieldValidationMessage:requiredFieldValidationMessage,successMessage:successMessage,messageProps:messageProps,labelPosition:labelPosition,phone:phone,phoneWide:phoneWide,tablet:tablet,defaultValue:defaultTheme?{id:defaultTheme.name,displayName:defaultTheme.name}:void 0};return React.createElement(DropdownSelectField,_extends({availableValues:availableThemesOptions,value:theme.name,onValueChange:handleOnChange},dropdownSelectProps))};ThemeChooser.propTypes=themeChooserPropTypes,ThemeChooser.defaultProps=themeChooserDefaultProps,ThemeChooser.displayName="ThemeChooser",ThemeChooser.__docgenInfo={description:"Component that allows the user to select the theme configuration\n\n@metadataType element",methods:[],displayName:"ThemeChooser",composes:["./propTypes"]},ThemeChooser.__docgenInfo={componentName:"ThemeChooser",packageName:"@jutro/components",description:"Component that allows the user to select the theme configuration",displayName:"ThemeChooser",methods:[],actualName:"ThemeChooser",metadataType:"element",composes:["./propTypes"]};