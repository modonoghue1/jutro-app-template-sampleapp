import _extends from"@babel/runtime-corejs3/helpers/extends";import _objectWithoutProperties from"@babel/runtime-corejs3/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _assertThisInitialized from"@babel/runtime-corejs3/helpers/assertThisInitialized";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React from"react";import Tippy from"@tippyjs/react";import{followCursor,sticky}from"tippy.js";import{placementOptions}from"@jutro/prop-types";import{uniqueInnerId}from"@jutro/platform";import PropTypes from"prop-types";import{TranslatorContext}from"@jutro/locale";import"tippy.js/dist/tippy.css";import styles from"./Tooltip.module.css";export let Tooltip=function(_React$Component){_inherits(Tooltip,_React$Component);var _super=_createSuper(Tooltip);function Tooltip(...args){var _this;return _classCallCheck(this,Tooltip),_this=_super.call(this,...args),_defineProperty(_assertThisInitialized(_this),"onMount",(instance=>{instance.reference.setAttribute("aria-describedby",`tippy-${instance.id}`),instance.reference.setAttribute("aria-controls",`tippy-${instance.id}`),instance.reference.setAttribute("aria-owns",`tippy-${instance.id}`)})),_defineProperty(_assertThisInitialized(_this),"onHide",(instance=>{instance.reference.removeAttribute("aria-describedby"),instance.reference.removeAttribute("aria-controls"),instance.reference.removeAttribute("aria-owns")})),_defineProperty(_assertThisInitialized(_this),"renderTooltip",(()=>{const _this$props=_this.props,id=_this$props.id,children=_this$props.children,showOnInit=_this$props.showOnInit,flipBehavior=_this$props.flipBehavior,tippyProps=_objectWithoutProperties(_this$props,["id","children","showOnInit","flipBehavior"]);if(!tippyProps.content)return null;const tooltipId=uniqueInnerId(id||"tooltip","tooltipId").tooltipId;return tippyProps.content=_this.translator(tippyProps.content),React.createElement(Tippy,_extends({},tippyProps,Tooltip.nonConfigurableTippyProps,{interactive:!0,className:styles.tooltip,onMount:_this.onMount,onHide:_this.onHide,aria:tooltipId,showOnCreate:showOnInit,popperOptions:{modifiers:[{name:"flip",options:{flipBehavior:flipBehavior}}]},plugins:[sticky,followCursor]}),children)})),_this}return _createClass(Tooltip,[{key:"translator",get:function(){return this.context}},{key:"render",value:function(){return this.renderTooltip()}}]),Tooltip}(React.Component);_defineProperty(Tooltip,"propTypes",{id:PropTypes.string.isRequired,followCursor:PropTypes.bool,placement:PropTypes.oneOf(placementOptions),trigger:PropTypes.string,duration:PropTypes.oneOfType([PropTypes.number,PropTypes.array]),hideOnClick:PropTypes.oneOfType([PropTypes.string,PropTypes.bool]),animation:PropTypes.string,delay:PropTypes.oneOfType([PropTypes.number,PropTypes.array]),sticky:PropTypes.oneOfType([PropTypes.string,PropTypes.bool]),flipBehavior:PropTypes.array,showOnInit:PropTypes.bool}),_defineProperty(Tooltip,"defaultProps",{followCursor:!1,placement:"right",trigger:"mouseenter focus",duration:[300,300],hideOnClick:!0,animation:"fade",delay:[0,20],sticky:!0,flipBehavior:["right","bottom","top","left","right"],showOnInit:!1}),_defineProperty(Tooltip,"nonConfigurableTippyProps",{animation:"fade",arrow:!0,inertia:!1,theme:"dark"}),_defineProperty(Tooltip,"contextType",TranslatorContext),Tooltip.__docgenInfo={description:"Adds a tooltip to the parent component.\n\n@typedef {typeof Tooltip.propTypes} TooltipPropTypes\n@extends React.Component<PropTypes.InferProps<TooltipPropTypes>>",methods:[{name:"translator",docblock:null,modifiers:["get"],params:[],returns:null},{name:"onMount",docblock:null,modifiers:[],params:[{name:"instance",type:null}],returns:null},{name:"onHide",docblock:null,modifiers:[],params:[{name:"instance",type:null}],returns:null},{name:"renderTooltip",docblock:"Renders Tooltip\n@returns {React.ReactElement}",modifiers:[],params:[],returns:{description:null,type:{name:"React.ReactElement"}},description:"Renders Tooltip"}],displayName:"Tooltip",props:{followCursor:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"Determines if follows the user's mouse cursor"},placement:{defaultValue:{value:"'right'",computed:!1},type:{name:"enum",computed:!0,value:"placementOptions"},required:!1,description:"Positions of the tooltip relative to its reference element"},trigger:{defaultValue:{value:"'mouseenter focus'",computed:!1},type:{name:"string"},required:!1,description:"The events (each separated by a space) which cause tooltip to show"},duration:{defaultValue:{value:"[300, 300]",computed:!1},type:{name:"union",value:[{name:"number"},{name:"array"}]},required:!1,description:"Duration of the CSS transition animation in ms"},hideOnClick:{defaultValue:{value:"true",computed:!1},type:{name:"union",value:[{name:"string"},{name:"bool"}]},required:!1,description:"Determines if the tooltip should hide if a mousedown event was fired outside of it"},animation:{defaultValue:{value:"'fade'",computed:!1},type:{name:"string"},required:!1,description:"The type of transition animation"},delay:{defaultValue:{value:"[0, 20]",computed:!1},type:{name:"union",value:[{name:"number"},{name:"array"}]},required:!1,description:"Delay in ms once a trigger event is fired before a tooltip shows or hides"},sticky:{defaultValue:{value:"true",computed:!1},type:{name:"union",value:[{name:"string"},{name:"bool"}]},required:!1,description:"Ensures the tooltip stays stuck to its reference element if it moves around or changes size while showing"},flipBehavior:{defaultValue:{value:"['right', 'bottom', 'top', 'left', 'right']",computed:!1},type:{name:"array"},required:!1,description:"Determines the order of flipping, i.e. which placements to prefer if a certain placement cannot be used"},showOnInit:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"Show tooltip when page is loaded"},id:{type:{name:"string"},required:!0,description:"Used to identify the component. referenced to find it in the document tree"}}},Tooltip.__docgenInfo={componentName:"Tooltip",packageName:"@jutro/components",description:"Adds a tooltip to the parent component.",displayName:"Tooltip",methods:[{name:"translator",docblock:null,modifiers:["get"],params:[],returns:null},{name:"onMount",docblock:null,modifiers:[],params:[{name:"instance",optional:void 0,type:null}],returns:null},{name:"onHide",docblock:null,modifiers:[],params:[{name:"instance",optional:void 0,type:null}],returns:null},{name:"renderTooltip",docblock:"Renders Tooltip\n@returns {React.ReactElement}",modifiers:[],params:[],returns:{description:null,type:{name:"React.ReactElement"}},description:"Renders Tooltip"}],actualName:"Tooltip",props:{id:{type:{name:"string"},required:!0,description:"Used to identify the component. referenced to find it in the document tree"},followCursor:{type:{name:"bool"},required:!1,description:"Determines if follows the user's mouse cursor",defaultValue:{value:"false",computed:!1}},placement:{type:{name:"enum",computed:!0,value:"placementOptions"},required:!1,description:"Positions of the tooltip relative to its reference element",defaultValue:{value:"'right'",computed:!1}},trigger:{type:{name:"string"},required:!1,description:"The events (each separated by a space) which cause tooltip to show",defaultValue:{value:"'mouseenter focus'",computed:!1}},duration:{type:{name:"union",value:[{name:"number"},{name:"array"}]},required:!1,description:"Duration of the CSS transition animation in ms",defaultValue:{value:"[300, 300]",computed:!1}},hideOnClick:{type:{name:"union",value:[{name:"string"},{name:"bool"}]},required:!1,description:"Determines if the tooltip should hide if a mousedown event was fired outside of it",defaultValue:{value:"true",computed:!1}},animation:{type:{name:"string"},required:!1,description:"The type of transition animation",defaultValue:{value:"'fade'",computed:!1}},delay:{type:{name:"union",value:[{name:"number"},{name:"array"}]},required:!1,description:"Delay in ms once a trigger event is fired before a tooltip shows or hides",defaultValue:{value:"[0, 20]",computed:!1}},sticky:{type:{name:"union",value:[{name:"string"},{name:"bool"}]},required:!1,description:"Ensures the tooltip stays stuck to its reference element if it moves around or changes size while showing",defaultValue:{value:"true",computed:!1}},flipBehavior:{type:{name:"array"},required:!1,description:"Determines the order of flipping, i.e. which placements to prefer if a certain placement cannot be used",defaultValue:{value:"['right', 'bottom', 'top', 'left', 'right']",computed:!1}},showOnInit:{type:{name:"bool"},required:!1,description:"Show tooltip when page is loaded",defaultValue:{value:"false",computed:!1}}}};