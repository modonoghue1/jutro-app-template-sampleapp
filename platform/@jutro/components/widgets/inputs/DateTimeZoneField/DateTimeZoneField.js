import _extends from"@babel/runtime-corejs3/helpers/extends";import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime-corejs3/helpers/objectWithoutProperties";import React,{useContext}from"react";import cx from"classnames";import PropTypes from"prop-types";import isEmpty from"lodash/isEmpty";import{publish,JUTRO_TOPICS}from"@jutro/events";import{GridLayout}from"@jutro/layout";import{LocaleContext}from"@jutro/locale";import{DATA_TYPE_OBJECT,dateTimeZoneValueShape,intlMessageShape,nestedTooltipShape}from"@jutro/prop-types";import{FieldComponent}from"../FieldComponent/FieldComponent";import{DateField}from"../DateField/DateField";import styles from"./DateTimeZoneField.module.css";import{DateTimeField}from"../DateTimeField/DateTimeField";import{TimeZoneField}from"./TimeZoneField";import{useTimeZoneDropdownValues}from"./useTimeZoneDropdownValues";import{parseDateTimeZoneFromDataType,formatDateTimeZoneToDataType}from"./helpers";import{timezones}from"./timezones";const timezonesList=Object.keys(timezones),dateTimeZoneFieldPropTypes={...DateTimeField.propTypes,value:dateTimeZoneValueShape,defaultValue:dateTimeZoneValueShape,showTimeZone:PropTypes.bool,labelTimeZone:intlMessageShape,secondaryLabelTimeZone:intlMessageShape,tooltipTimeZone:PropTypes.oneOfType([PropTypes.string,nestedTooltipShape]),hideLabelTimeZone:PropTypes.bool,timeZones:PropTypes.arrayOf(PropTypes.oneOf(timezonesList).isRequired),defaultTimeZone:PropTypes.oneOf(timezonesList)};export const DateTimeZoneField=props=>{const className=props.className,contentContainerClassName=props.contentContainerClassName,labelContainerClassName=props.labelContainerClassName,isClearable=props.isClearable,showTime=props.showTime,tooltipTime=props.tooltipTime,placeholderTime=props.placeholderTime,labelTime=props.labelTime,hideLabelTime=props.hideLabelTime,secondaryLabelTime=props.secondaryLabelTime,showTimeZone=props.showTimeZone,labelTimeZone=props.labelTimeZone,secondaryLabelTimeZone=props.secondaryLabelTimeZone,tooltipTimeZone=props.tooltipTimeZone,hideLabelTimeZone=props.hideLabelTimeZone,timeZones=props.timeZones,defaultTimeZone=props.defaultTimeZone,id=props.id,_props$dataType=props.dataType,dataType=void 0===_props$dataType?DATA_TYPE_OBJECT:_props$dataType,_props$value=props.value,valueProp=void 0===_props$value?{}:_props$value,_props$defaultValue=props.defaultValue,defaultValue=void 0===_props$defaultValue?{}:_props$defaultValue,path=props.path,model=props.model,label=props.label,dataPath=(props.hideLabel,props.dataPath),onValueChange=props.onValueChange,commonFieldProps=_objectWithoutProperties(props,["className","contentContainerClassName","labelContainerClassName","isClearable","showTime","tooltipTime","placeholderTime","labelTime","hideLabelTime","secondaryLabelTime","showTimeZone","labelTimeZone","secondaryLabelTimeZone","tooltipTimeZone","hideLabelTimeZone","timeZones","defaultTimeZone","id","dataType","value","defaultValue","path","model","label","hideLabel","dataPath","onValueChange"]),_useTimeZoneDropdownV=useTimeZoneDropdownValues(timeZones),_useTimeZoneDropdownV2=_slicedToArray(_useTimeZoneDropdownV,2),currentTimeZone=_useTimeZoneDropdownV2[0],timeZoneValues=_useTimeZoneDropdownV2[1],appDefaultTimezone=useContext(LocaleContext).defaultTimeZone,parsedValue=parseDateTimeZoneFromDataType(isEmpty(valueProp)?defaultValue:valueProp,defaultTimeZone||appDefaultTimezone||currentTimeZone,showTime),labelOnTop="top"===commonFieldProps.labelPosition,handleChange=value=>{const newValue={...parsedValue,...value},formattedValue=formatDateTimeZoneToDataType(newValue,dataType,showTime);onValueChange&&(onValueChange(formattedValue,model||path,{id:id,valueProp:valueProp,dataPath:dataPath}),publish(JUTRO_TOPICS.VALUE_CHANGED,FieldComponent.fieldEventFormatter({...props,value:formattedValue})))};return React.createElement(GridLayout,{id:id,className:className,columns:labelOnTop?["2fr","auto"]:[],hgap:"small",vgap:labelOnTop?"none":void 0,phone:{columns:[],vgap:void 0},style:{gridTemplateRows:"min-content"},defaultGridItem:{className:cx({[styles.fieldContainer]:labelOnTop}),phone:{className:void 0}}},React.createElement(DateTimeField,_extends({},commonFieldProps,{id:`${id}-datetime`,isClearable:isClearable,label:label,showTime:showTime,dataType:DATA_TYPE_OBJECT,onValueChange:datetime=>handleChange({...parsedValue,datetime:datetime}),value:parsedValue.datetime,tooltipTime:tooltipTime,placeholderTime:placeholderTime,labelTime:labelTime,hideLabelTime:hideLabelTime,secondaryLabelTime:secondaryLabelTime,contentContainerClassName:contentContainerClassName,labelContainerClassName:labelContainerClassName,preserveTimeZone:!0})),showTimeZone&&(()=>{const disabled=props.disabled;return React.createElement(TimeZoneField,_extends({},commonFieldProps,{id:`${id}-timezone`,availableValues:timeZoneValues,value:parsedValue.timezone,disabled:disabled,label:labelTimeZone,secondaryLabel:secondaryLabelTimeZone,hideLabel:hideLabelTimeZone,tooltip:tooltipTimeZone,onValueChange:timezone=>handleChange({...parsedValue,timezone:timezone}),contentContainerClassName:cx({[styles.timeZoneField]:labelOnTop},{[styles.disabled]:disabled},contentContainerClassName),labelContainerClassName:cx({[styles.timeZoneLabel]:labelOnTop},labelContainerClassName)}))})())};DateTimeZoneField.displayName="DateTimeZoneField",DateTimeZoneField.propTypes=dateTimeZoneFieldPropTypes,DateTimeZoneField.defaultProps={...DateField.defaultProps,dataType:DATA_TYPE_OBJECT,showTime:!0,showTimeZone:!0},DateTimeZoneField.__docgenInfo={description:"@metadataType field",methods:[],displayName:"DateTimeZoneField",props:{dataType:{defaultValue:{value:"DATA_TYPE_OBJECT",computed:!0},required:!1},showTime:{defaultValue:{value:"true",computed:!1},required:!1},showTimeZone:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:"Show timezone picker"},value:{type:{name:"custom",raw:"dateTimeZoneValueShape"},required:!1,description:"Value to display"},defaultValue:{type:{name:"custom",raw:"dateTimeZoneValueShape"},required:!1,description:"Set the default field value on render if there is a default value; needs onValueChange to work"},labelTimeZone:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Intl message for time zone field label"},secondaryLabelTimeZone:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Intl message for time zone field secondary label (same as secondaryLabel prop by default)"},tooltipTimeZone:{type:{name:"union",value:[{name:"string"},{name:"custom",raw:"nestedTooltipShape"}]},required:!1,description:"Tooltip for time zone field (same as tooltip prop by default)"},hideLabelTimeZone:{type:{name:"bool"},required:!1,description:"Hide time zone label (same as hideLabel by default)"},timeZones:{type:{name:"arrayOf",value:{name:"enum",computed:!0,value:"timezonesList"}},required:!1,description:"Time zones to show in the dropdown"},defaultTimeZone:{type:{name:"enum",computed:!0,value:"timezonesList"},required:!1,description:"Default time zone to be used (local by default)"}},composes:["../DateTimeField/DateTimeField"]},DateTimeZoneField.__docgenInfo={componentName:"DateTimeZoneField",packageName:"@jutro/components",description:"",displayName:"DateTimeZoneField",methods:[],actualName:"DateTimeZoneField",metadataType:"field",props:{value:{type:{name:"custom",raw:"dateTimeZoneValueShape"},required:!1,description:"Value to display"},defaultValue:{type:{name:"custom",raw:"dateTimeZoneValueShape"},required:!1,description:"Set the default field value on render if there is a default value; needs onValueChange to work"},showTimeZone:{type:{name:"bool"},required:!1,description:"Show timezone picker",defaultValue:{value:"true",computed:!1}},labelTimeZone:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Intl message for time zone field label"},secondaryLabelTimeZone:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Intl message for time zone field secondary label (same as secondaryLabel prop by default)"},tooltipTimeZone:{type:{name:"union",value:[{name:"string"},{name:"custom",raw:"nestedTooltipShape"}]},required:!1,description:"Tooltip for time zone field (same as tooltip prop by default)"},hideLabelTimeZone:{type:{name:"bool"},required:!1,description:"Hide time zone label (same as hideLabel by default)"},timeZones:{type:{name:"arrayOf",value:{name:"enum",computed:!0,value:"timezonesList"}},required:!1,description:"Time zones to show in the dropdown"},defaultTimeZone:{type:{name:"enum",computed:!0,value:"timezonesList"},required:!1,description:"Default time zone to be used (local by default)"},dataType:{defaultValue:{value:"DATA_TYPE_OBJECT",computed:!0},required:!1},showTime:{defaultValue:{value:"true",computed:!1},required:!1}},composes:["../DateTimeField/DateTimeField"]};