import{utcToZonedTime,zonedTimeToUtc}from"date-fns-tz";import isNil from"lodash/isNil";import{DATA_TYPE_OBJECT}from"@jutro/prop-types";import{formatDateToDataType,parseDateFromDataType}from"@jutro/platform";export const parseDateTimeZoneFromDataType=(value,defaultTimeZone,showTime)=>{const datetime=value.datetime,timeZone=value.timezone||defaultTimeZone;if(isNil(datetime))return{timezone:timeZone};if(!showTime){const parsedDate=parseDateFromDataType(datetime);return{datetime:{year:parsedDate.getFullYear(),month:parsedDate.getMonth(),day:parsedDate.getDate()},timezone:timeZone}}let date;if(isNil(dateShape=datetime)||isNil(dateShape.year)||isNil(dateShape.month)||isNil(dateShape.day))date=datetime;else{const year=datetime.year,month=datetime.month,day=datetime.day,hour=datetime.hour,minute=datetime.minute;date=new Date(Date.UTC(year,month,day,hour,minute))}var dateShape;const zonedDate=utcToZonedTime(date,timeZone);return{datetime:{year:zonedDate.getFullYear(),month:zonedDate.getMonth(),day:zonedDate.getDate(),hour:zonedDate.getHours(),minute:zonedDate.getMinutes()},timezone:timeZone}};export const formatDateTimeZoneToDataType=(value,dataType,showTime)=>{const datetime=value.datetime,timezone=value.timezone;if(!datetime)return value;if(!showTime){const date=new Date(datetime.year,datetime.month,datetime.day);return{datetime:formatDateToDataType(date,dataType),timezone:timezone}}const year=datetime.year,month=datetime.month,day=datetime.day,hour=datetime.hour,minute=datetime.minute,utcDate=zonedTimeToUtc(new Date(year,month,day,hour,minute),timezone);return dataType===DATA_TYPE_OBJECT?{datetime:{year:utcDate.getUTCFullYear(),month:utcDate.getUTCMonth(),day:utcDate.getUTCDate(),hour:utcDate.getUTCHours(),minute:utcDate.getUTCMinutes()},timezone:timezone}:{datetime:utcDate.toISOString(),timezone:timezone}};