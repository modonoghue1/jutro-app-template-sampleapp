import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _get from"@babel/runtime-corejs3/helpers/get";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import{isValid}from"date-fns";import{isEmptyValue}from"@jutro/data";import{FieldComponentValidationImplementation}from"../FieldComponent/FieldComponentValidationImplementation";export let DateFieldValidationImplementation=function(_FieldComponentValida){_inherits(DateFieldValidationImplementation,FieldComponentValidationImplementation);var _super=_createSuper(DateFieldValidationImplementation);function DateFieldValidationImplementation(){return _classCallCheck(this,DateFieldValidationImplementation),_super.apply(this,arguments)}return _createClass(DateFieldValidationImplementation,[{key:"bind",value:function(entityToBind){const superBoundMethods=_get(_getPrototypeOf(DateFieldValidationImplementation.prototype),"bind",this).call(this,entityToBind);return["getValidationMessages","handleChangeRaw","handleDateChange","getValue"].reduce(((acc,method)=>({...acc,[method]:this[method].bind(entityToBind)})),superBoundMethods)}},{key:"handleChangeRaw",value:function(evt){"change"===evt.type&&(this.touch(),this.ongoingUserInput=!0,this.notifyChange(evt.target.value))}},{key:"handleDateChange",value:function(date){const isValidDate=isValid(date);isEmptyValue(date)||isValidDate?(this.ongoingUserInput=!1,this.notifyChange(isValidDate?this.formatValue(date):void 0)):this.touch()}},{key:"getValue",value:function(value){return value||this.props.value}},{key:"getValidationMessages",value:function(){return this.props.errorMessage}}]),DateFieldValidationImplementation}();