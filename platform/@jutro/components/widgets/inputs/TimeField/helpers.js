import addMinutes from"date-fns/addMinutes";import formatDate from"date-fns/format";import{isDateInRange}from"@jutro/platform";export function generateTimeIntervals(intervalPeriod,format,min,max){const dates=[],intervalGenerator=function*(startDate,intervalPeriod){yield startDate;let prevDate=startDate,newDate=addMinutes(startDate,intervalPeriod);for(;prevDate.getDay()===newDate.getDay();){yield newDate;var _ref=[newDate,addMinutes(newDate,intervalPeriod)];prevDate=_ref[0],newDate=_ref[1]}}(new Date(1970,0,1,0,0,0),intervalPeriod);let interval=intervalGenerator.next();for(;!interval.done;)isInRange(interval.value,min,max)&&dates.push((date=interval.value,{label:formatDate(date,timeFormat=format),value:formatDate(date,timeFormat)})),interval=intervalGenerator.next();var date,timeFormat;return dates}export function filterOptions({value:value},rawInput){const normalizeInput=rawInput.replace(/_|\s/g,"").toLowerCase();return value.replace(/_|\s/g,"").toLowerCase().includes(normalizeInput)}export function isInRange(value,min,max){if(!value)return!0;if(!0===min||!0===max)return!1;let dateValue,minDate,maxDate;dateValue=value instanceof Date?new Date(1970,0,1,value.getHours(),value.getMinutes()):new Date(1970,0,1,value.hour,value.minute),min&&(minDate=new Date(1970,0,1,min.hour,min.minute)),max&&(maxDate=new Date(1970,0,1,max.hour,max.minute));const _isDateInRange=isDateInRange(dateValue,minDate,maxDate,!0),fulfillMinRequirement=_isDateInRange.fulfillMinRequirement,fulfillMaxRequirement=_isDateInRange.fulfillMaxRequirement;return fulfillMinRequirement&&fulfillMaxRequirement}