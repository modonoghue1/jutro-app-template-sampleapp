import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _assertThisInitialized from"@babel/runtime-corejs3/helpers/assertThisInitialized";import _get from"@babel/runtime-corejs3/helpers/get";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React from"react";import PropTypes from"prop-types";import cx from"classnames";import constant from"lodash/constant";import assignWith from"lodash/assignWith";import memoize from"memoize-one";import{intlMessageShape,availableValuesIdDisplayNameObject,DATA_TYPE_OBJECT}from"@jutro/prop-types";import{messages}from"./LookupField.messages";import{FieldComponent}from"../FieldComponent/FieldComponent";import{GenericSelectControl}from"../GenericSelectControl/GenericSelectControl";import{LookupOption as Option}from"./components/LookupOption";import{LookupValue as Value}from"./components/LookupValue";import{LookupDropdownIndicator as DropdownIndicator}from"./components/LookupDropdownIndicator";import{LookupClearIndicator as ClearIndicator}from"./components/LookupClearIndicator";import{LookupControl as Control}from"./components/LookupControl";import{LookupMenu as Menu}from"./components/LookupMenu";import{LookupPlaceholder as Placeholder}from"./components/LookupPlaceholder";import styles from"./LookupField.module.css";const lookupComponents={Option:Option,Value:Value,DropdownIndicator:DropdownIndicator,ClearIndicator:ClearIndicator,Control:Control,Menu:Menu,Placeholder:Placeholder},shouldCreateNew=text=>!!text,FALSE=constant(!1),getOptionTypesMap=memoize(((optionTypes=[])=>optionTypes.reduce(((map,{type:type,icon:icon,className:className,displayName:displayName})=>Object.assign(map,{[type]:{icon:icon,className:className,displayName:displayName}})),{}))),getMergedStyles=memoize((internalClassNames=>internalClassNames?assignWith({...styles},internalClassNames,((lookupFieldStyle,additionalStyle)=>additionalStyle?cx(lookupFieldStyle,additionalStyle):lookupFieldStyle)):styles)),LookupOptionShape=PropTypes.shape({...availableValuesIdDisplayNameObject,type:PropTypes.string.isRequired});export let LookupField=function(_FieldComponent){_inherits(LookupField,FieldComponent);var _super=_createSuper(LookupField);function LookupField(..._args){var _this;return _classCallCheck(this,LookupField),_this=_super.call(this,..._args),_defineProperty(_assertThisInitialized(_this),"handleValueChange",(value=>{_this.beforeValue=_this.props.value,_this.notifyChange(value)})),_defineProperty(_assertThisInitialized(_this),"recent",_this.props.onLoadValues?[]:_this.props.availableValues),_defineProperty(_assertThisInitialized(_this),"state",{recent:_this.recent}),_defineProperty(_assertThisInitialized(_this),"loadValues",(onLoadValues=>async(...args)=>(_this.recent=await onLoadValues(...args),_this.recent))),_defineProperty(_assertThisInitialized(_this),"onMenuClose",(()=>{_this.setState({recent:_this.recent})})),_this}return _createClass(LookupField,[{key:"renderControlReadOnly",value:function(breakpointProps){const id=breakpointProps.id,value=breakpointProps.value,optionTypes=breakpointProps.optionTypes,className=breakpointProps.className,optionTypesMap=getOptionTypesMap(optionTypes),mergedStyles=getMergedStyles(this.props.internalClassNames);return value&&React.createElement("div",{id:id,"data-read-only":!0,className:cx(mergedStyles.lookupField,className)},React.createElement(lookupComponents.Value,{data:value,selectProps:{customStyles:mergedStyles,optionTypesMap:optionTypesMap}}))}},{key:"renderControl",value:function(breakpointProps,{isValid:isValid,labelId:labelId}){const availableValues=breakpointProps.availableValues,className=breakpointProps.className,createNewMessage=breakpointProps.createNewMessage,isClearable=breakpointProps.isClearable,onLoadValues=breakpointProps.onLoadValues,onAddNew=breakpointProps.onAddNew,optionTypes=breakpointProps.optionTypes,placeholder=breakpointProps.placeholder,value=breakpointProps.value,disabled=breakpointProps.disabled,isInitiallyOpen=breakpointProps.isInitiallyOpen,internalClassNames=breakpointProps.internalClassNames,id=breakpointProps.id,testId=breakpointProps.testId,showRecentlyViewed=breakpointProps.showRecentlyViewed,recentlyViewedMessage=breakpointProps.recentlyViewedMessage,mergedStyles=getMergedStyles(internalClassNames),fieldUniqueId=this.fieldUniqueId,classes=cx(mergedStyles.lookupField,className),allowNewValue=onAddNew?shouldCreateNew:FALSE;return React.createElement(GenericSelectControl,{id:id,fieldUniqueId:fieldUniqueId,testId:testId,availableValues:availableValues,className:classes,components:lookupComponents,createNewMessage:createNewMessage,defaultOptions:this.state.recent,disabled:disabled,filter:lookupFilter,getOptionValue:getOptionValue,getOptionLabel:getOptionLabel,isClearable:isClearable,allowNewValue:allowNewValue,labelId:labelId,loadValues:onLoadValues?this.loadValues(onLoadValues):void 0,onAddNew:onAddNew,onBlur:this.handleBlur,onFocus:this.handleFocus,onInputChange:this.onInputChange,onMenuClose:this.onMenuClose,onValueChange:this.handleValueChange,placeholder:placeholder,valid:isValid,value:value,optionTypesMap:getOptionTypesMap(optionTypes),customStyles:mergedStyles,showRecent:showRecentlyViewed,recentlyViewedMessage:recentlyViewedMessage,isInitiallyOpen:isInitiallyOpen})}},{key:"render",value:function(){return _get(_getPrototypeOf(LookupField.prototype),"render",this).call(this)}}]),LookupField}();function lookupFilter({displayName:displayName},text){return null==displayName?void 0:displayName.toLowerCase().includes(text.toLowerCase())}function getOptionValue({id:id}){return id}function getOptionLabel({displayName:displayName}){return displayName}_defineProperty(LookupField,"propTypes",{...FieldComponent.propTypes,availableValues:PropTypes.arrayOf(LookupOptionShape),optionTypes:PropTypes.arrayOf(PropTypes.shape({type:PropTypes.string.isRequired,icon:PropTypes.string.isRequired,className:PropTypes.string,displayName:intlMessageShape.isRequired})),createNewMessage:intlMessageShape,defaultValue:LookupOptionShape,isClearable:PropTypes.bool,onLoadValues:PropTypes.func,onAddNew:PropTypes.func,showRecentlyViewed:PropTypes.bool,recentlyViewedMessage:intlMessageShape,value:LookupOptionShape,isInitiallyOpen:PropTypes.bool,internalClassNames:PropTypes.object}),_defineProperty(LookupField,"defaultProps",{...FieldComponent.defaultProps,createNewMessage:messages.addItem,isClearable:!0,dataType:DATA_TYPE_OBJECT}),LookupField.__docgenInfo={description:"@typedef {typeof LookupField.propTypes} LookupFieldPropTypes\n@extends FieldComponent<PropTypes.InferProps<LookupFieldPropTypes>>\n\n@metadataType field",methods:[{name:"handleValueChange",docblock:"handle value change\n@param {object} value",modifiers:[],params:[{name:"value",description:null,type:{name:"object"},optional:!1}],returns:null,description:"handle value change"},{name:"renderControlReadOnly",docblock:null,modifiers:[],params:[{name:"breakpointProps",type:null}],returns:null},{name:"renderControl",docblock:null,modifiers:[],params:[{name:"breakpointProps",type:null},{name:"{ isValid, labelId }",type:null}],returns:null},{name:"loadValues",docblock:null,modifiers:[],params:[{name:"onLoadValues",type:null}],returns:null},{name:"onMenuClose",docblock:null,modifiers:[],params:[],returns:null}],displayName:"LookupField",props:{createNewMessage:{defaultValue:{value:"messages.addItem",computed:!0},type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"The message to display when a new options is being created by the user."},isClearable:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:"If true ClearIndicator will be shown"},dataType:{defaultValue:{value:"DATA_TYPE_OBJECT",computed:!0},required:!1},availableValues:{type:{name:"arrayOf",value:{name:"custom",raw:"LookupOptionShape"}},required:!1,description:"Array of choice objects to display"},optionTypes:{type:{name:"arrayOf",value:{name:"shape",value:{type:{name:"string",required:!0},icon:{name:"string",required:!0},className:{name:"string",required:!1},displayName:{name:"custom",raw:"intlMessageShape.isRequired",required:!0}}}},required:!1,description:"Description for available option types"},defaultValue:{type:{name:"custom",raw:"LookupOptionShape"},required:!1,description:"Set the default field value on render if there is a default value; needs onValueChange to work"},onLoadValues:{type:{name:"func"},required:!1,description:"Function for asynchronous data loading"},onAddNew:{type:{name:"func"},required:!1,description:"Callback when new items created"},showRecentlyViewed:{type:{name:"bool"},required:!1,description:"If true then recently viewed bar will be shown"},recentlyViewedMessage:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"The message to display for recently viewed bar."},value:{type:{name:"custom",raw:"LookupOptionShape"},required:!1,description:"Value to display in control"},isInitiallyOpen:{type:{name:"bool"},required:!1,description:"Should dropdown be initially opened"},internalClassNames:{type:{name:"object"},required:!1,description:"Map of CSS class names for overriding individual parts of component's styles"}},composes:["../FieldComponent/FieldComponent"]},LookupField.__docgenInfo={componentName:"LookupField",packageName:"@jutro/components",description:"",displayName:"LookupField",methods:[{name:"handleValueChange",docblock:"handle value change\n@param {object} value",modifiers:[],params:[{name:"value",description:null,type:{name:"object"},optional:!1}],returns:null,description:"handle value change"},{name:"renderControlReadOnly",docblock:null,modifiers:[],params:[{name:"breakpointProps",optional:void 0,type:null}],returns:null},{name:"renderControl",docblock:null,modifiers:[],params:[{name:"breakpointProps",optional:void 0,type:null},{name:"{ isValid, labelId }",optional:void 0,type:null}],returns:null},{name:"loadValues",docblock:null,modifiers:[],params:[{name:"onLoadValues",optional:void 0,type:null}],returns:null},{name:"onMenuClose",docblock:null,modifiers:[],params:[],returns:null}],actualName:"LookupField",metadataType:"field",props:{availableValues:{type:{name:"arrayOf",value:{name:"custom",raw:"LookupOptionShape"}},required:!1,description:"Array of choice objects to display"},optionTypes:{type:{name:"arrayOf",value:{name:"shape",value:{type:{name:"string",required:!0},icon:{name:"string",required:!0},className:{name:"string",required:!1},displayName:{name:"union",required:!0,value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]}}}},required:!1,description:"Description for available option types"},createNewMessage:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"The message to display when a new options is being created by the user.",defaultValue:{value:"messages.addItem",computed:!0}},defaultValue:{type:{name:"custom",raw:"LookupOptionShape"},required:!1,description:"Set the default field value on render if there is a default value; needs onValueChange to work"},isClearable:{type:{name:"bool"},required:!1,description:"If true ClearIndicator will be shown",defaultValue:{value:"true",computed:!1}},onLoadValues:{type:{name:"func"},required:!1,description:"Function for asynchronous data loading"},onAddNew:{type:{name:"func"},required:!1,description:"Callback when new items created"},showRecentlyViewed:{type:{name:"bool"},required:!1,description:"If true then recently viewed bar will be shown"},recentlyViewedMessage:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"The message to display for recently viewed bar."},value:{type:{name:"custom",raw:"LookupOptionShape"},required:!1,description:"Value to display in control"},isInitiallyOpen:{type:{name:"bool"},required:!1,description:"Should dropdown be initially opened"},internalClassNames:{type:{name:"object"},required:!1,description:"Map of CSS class names for overriding individual parts of component's styles"},dataType:{defaultValue:{value:"DATA_TYPE_OBJECT",computed:!0},required:!1}},composes:["../FieldComponent/FieldComponent"]};