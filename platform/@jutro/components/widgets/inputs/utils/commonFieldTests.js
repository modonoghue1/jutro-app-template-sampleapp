import _extends from"@babel/runtime-corejs3/helpers/extends";import React from"react";import{screen,fireEvent}from"@testing-library/react";import{renderWithTranslatorAndRouterContext}from"@jutro/test-rtl";import{renderingTests}from"./tests/renderingTests";import{dataBindingTests}from"./tests/dataBindingTests";import{classNamesTests}from"./tests/classNamesTests";import{validationTests}from"./tests/validationTests";import{otherTests}from"./tests/otherTests";export const commonFieldTests=options=>{const name=options.name,Component=options.component,defaultProps=options.defaultProps,_options$testsToSkip=options.testsToSkip,testsToSkip=void 0===_options$testsToSkip?[]:_options$testsToSkip,_options$incorrectFie=options.incorrectFieldValues,incorrectFieldValues=void 0===_options$incorrectFie?[]:_options$incorrectFie,getControl=options.getControl||(()=>screen.queryByLabelText(name)),changeValue=options.changeValue||((control,value)=>{fireEvent.change(control,{target:{value:value}})}),describeMeta={...options,testsToSkip:testsToSkip,incorrectFieldValues:incorrectFieldValues,renderField:(props={})=>renderWithTranslatorAndRouterContext(React.createElement(Component,_extends({},defaultProps,{id:name,label:name},props))),rerenderField:(props={},rerender)=>rerender(React.createElement(Component,_extends({},defaultProps,{id:name,label:name},props))),itWithSkip:(testName,testFn)=>{(testsToSkip.includes(testName)?it.skip:it)(testName,testFn)},getControl:getControl,changeValue:changeValue};describe(`FieldComponent interface common tests for ${name}`,(()=>{renderingTests(describeMeta),dataBindingTests(describeMeta),classNamesTests(describeMeta),validationTests(describeMeta),otherTests(describeMeta)}))};