import React,{useContext,useRef}from"react";import{useKeyActive}from"@jutro/platform";import{isEmptyValue,isNilValue}from"@jutro/data";import cx from"classnames";import{TranslatorContext}from"@jutro/locale";import PropTypes from"prop-types";import{defaultAvailableValuePropType}from"@jutro/prop-types";import{getOptionCode,getOptionName}from"../availableValues";const toggleButtonPropTypes={id:PropTypes.string,disabled:PropTypes.bool,theme:PropTypes.object,option:PropTypes.object,styleClasses:PropTypes.string,active:PropTypes.string,activeKeypress:PropTypes.string,uniqueId:PropTypes.string,value:defaultAvailableValuePropType,handleButtonClick:PropTypes.func,onFocus:PropTypes.func};export const ToggleButton=({id:id,disabled:disabled,option:option,styleClasses:styleClasses,active:active,activeKeypress:activeKeypress,value:value,handleButtonClick:handleButtonClick,onFocus:onFocus})=>{const translator=useContext(TranslatorContext);let code=getOptionCode(option);const name=getOptionName(option),selectedValue=value;let checked=!isEmptyValue(selectedValue)&&selectedValue.toString()===code.toString();isNilValue(code)&&(code="empty",checked=isEmptyValue(selectedValue));const ref=useRef(),isActiveKeyPressed=useKeyActive(ref),buttonClasses=cx({[activeKeypress]:isActiveKeyPressed},styleClasses,{[active]:checked}),valueId=`${id}_${code}`;return React.createElement("button",{type:"button",checked:checked,"aria-pressed":checked,key:valueId,className:buttonClasses,onClick:handleButtonClick,onFocus:onFocus,"data-value":code.toString()||"",disabled:disabled,ref:ref},translator(name))};ToggleButton.propTypes=toggleButtonPropTypes,ToggleButton.__docgenInfo={description:"",methods:[],displayName:"ToggleButton",props:{id:{type:{name:"string"},required:!1,description:"id"},disabled:{type:{name:"bool"},required:!1,description:"disabled flag"},theme:{type:{name:"object"},required:!1,description:"theme"},option:{type:{name:"object"},required:!1,description:"object that contains the value for the button"},styleClasses:{type:{name:"string"},required:!1,description:"class name of button styles"},active:{type:{name:"string"},required:!1,description:"active - class name object of button active styles"},activeKeypress:{type:{name:"string"},required:!1,description:"activeKeypress - class name object of button activeKeypress styles"},uniqueId:{type:{name:"string"},required:!1,description:"uniqueId - uniqueIdentifier"},value:{type:{name:"custom",raw:"defaultAvailableValuePropType"},required:!1,description:"value - selectedValue"},handleButtonClick:{type:{name:"func"},required:!1,description:"handleButtonClick function"},onFocus:{type:{name:"func"},required:!1,description:"callback to onFocus"}}},ToggleButton.__docgenInfo={componentName:"ToggleButton",packageName:"@jutro/components",description:"",displayName:"ToggleButton",methods:[],actualName:"ToggleButton",props:{id:{type:{name:"string"},required:!1,description:"id"},disabled:{type:{name:"bool"},required:!1,description:"disabled flag"},theme:{type:{name:"object"},required:!1,description:"theme"},option:{type:{name:"object"},required:!1,description:"object that contains the value for the button"},styleClasses:{type:{name:"string"},required:!1,description:"class name of button styles"},active:{type:{name:"string"},required:!1,description:"active - class name object of button active styles"},activeKeypress:{type:{name:"string"},required:!1,description:"activeKeypress - class name object of button activeKeypress styles"},uniqueId:{type:{name:"string"},required:!1,description:"uniqueId - uniqueIdentifier"},value:{type:{name:"union",value:[{name:"string"},{name:"bool"},{name:"number"},{name:"custom",raw:"availableValueObjectShape"}]},required:!1,description:"value - selectedValue"},handleButtonClick:{type:{name:"func"},required:!1,description:"handleButtonClick function"},onFocus:{type:{name:"func"},required:!1,description:"callback to onFocus"}}};