import _extends from"@babel/runtime-corejs3/helpers/extends";import React from"react";import cx from"classnames";import isEmpty from"lodash/isEmpty";import isObject from"lodash/isObject";import isUndefined from"lodash/isUndefined";export const GenericSelectControlControl=({children:children,isFocused:isFocused,innerRef:innerRef,innerProps:innerProps,className:className,selectProps:{genericSelectStyles:genericSelectStyles,invalid:invalid,errorMessage:errorMessage,registerValidation:registerValidation}})=>{const warningMessageCheck=errorMessage&&isObject(errorMessage)&&!isEmpty(errorMessage)&&"warning"===(null==errorMessage?void 0:errorMessage.type),messageStyle=warningMessageCheck?"warning":"invalid",focusedStyle=warningMessageCheck?"focusedWarning":"focusedInvalid",controlClasses=cx(genericSelectStyles.control,{[genericSelectStyles.controlFocused]:isFocused&&!invalid,[messageStyle]:invalid,[focusedStyle]:isFocused&&invalid},className,!isUndefined(registerValidation)&&invalid&&genericSelectStyles.labpreviewBorder);return React.createElement("div",_extends({ref:innerRef,className:controlClasses},innerProps),children)};GenericSelectControlControl.__docgenInfo={description:"",methods:[],displayName:"GenericSelectControlControl"},GenericSelectControlControl.__docgenInfo={componentName:"GenericSelectControlControl",packageName:"@jutro/components",description:"",displayName:"GenericSelectControlControl",methods:[],actualName:"GenericSelectControlControl"};