import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React,{PureComponent}from"react";import PropTypes from"prop-types";import cx from"classnames";import{intlMessageShape}from"@jutro/prop-types";import{defaultTheme}from"@jutro/theme";import head from"lodash/head";import{Card}from"../../card/Card";import{Icon}from"../../Icon/Icon";import styles from"./FieldMessage.module.css";import{messages}from"./FieldComponent.messages";const typeIconMap={error:"gw-error",warning:"warning"},getMessage=key=>messages[key];export let FieldMessage=function(_PureComponent){_inherits(FieldMessage,PureComponent);var _super=_createSuper(FieldMessage);function FieldMessage(){return _classCallCheck(this,FieldMessage),_super.apply(this,arguments)}return _createClass(FieldMessage,[{key:"render",value:function(){const _this$props=this.props,id=_this$props.id,translator=_this$props.translator,errorMessage=_this$props.errorMessage,isFocused=_this$props.isFocused,errorMessageArray=Array.isArray(errorMessage)?errorMessage:[errorMessage],messageTitle=errorMessageArray.some((message=>"error"===message.type))?getMessage("multipleErrors"):getMessage("multipleWarnings"),renderValidationIconAndMessage=message=>React.createElement("span",{className:cx(styles.iconWrapper)},React.createElement(Icon,{className:styles[head(errorMessageArray).type],icon:typeIconMap[head(errorMessageArray).type],size:"medium"}),React.createElement("span",null,message,!isFocused&&head(errorMessageArray).details?"...":null));return React.createElement("div",{id:id,key:id,role:"alert",className:styles.fieldMessage,"aria-hidden":!errorMessageArray},errorMessageArray.length>1&&isFocused?(()=>{const message=translator(messageTitle,{value:errorMessageArray.length});return React.createElement(Card,{id:"card",className:styles.card},React.createElement("div",{className:styles.fieldValidationMessage},renderValidationIconAndMessage(message),React.createElement("ul",{style:{marginBottom:0}},errorMessageArray.map(((messageObject,indx)=>React.createElement("li",{key:indx},messageObject.message))))))})():head(errorMessageArray).details&&isFocused?(()=>{const message=translator(`${head(errorMessageArray).message}. ${head(errorMessageArray).details}`);return React.createElement(Card,{id:"card",className:styles.card},React.createElement("div",{className:styles.fieldValidationMessage},renderValidationIconAndMessage(message)))})():head(errorMessageArray).message?(()=>{if(errorMessageArray.length>1){const multipleErrorsMessage=translator(messageTitle,{value:errorMessageArray.length});return React.createElement("div",{className:styles.fieldValidationMessage},renderValidationIconAndMessage(multipleErrorsMessage))}const message=translator(head(errorMessageArray).message);return React.createElement("div",{className:styles.fieldValidationMessage},renderValidationIconAndMessage(message))})():void 0)}}]),FieldMessage}();_defineProperty(FieldMessage,"propTypes",{id:PropTypes.string.isRequired,errorMessage:PropTypes.oneOfType([PropTypes.func,intlMessageShape]),theme:PropTypes.object,translator:PropTypes.func,isFocused:PropTypes.bool}),_defineProperty(FieldMessage,"defaultProps",{theme:defaultTheme}),FieldMessage.__docgenInfo={description:"Class renders messages for `FieldComponent`.\nValidation messages are expected to be translated before they are passed.",methods:[],displayName:"FieldMessage",props:{theme:{defaultValue:{value:"defaultTheme",computed:!0},type:{name:"object"},required:!1,description:"Theme to apply to component"},id:{type:{name:"string"},required:!0,description:"Component unique identifier"},errorMessage:{type:{name:"union",value:[{name:"func"},{name:"custom",raw:"intlMessageShape"}]},required:!1,description:"Error message to display"},translator:{type:{name:"func"},required:!1,description:"The function used to translate strings"},isFocused:{type:{name:"bool"},required:!1,description:"If true, the field is focused"}}},FieldMessage.__docgenInfo={componentName:"FieldMessage",packageName:"@jutro/components",description:"Class renders messages for `FieldComponent`.\nValidation messages are expected to be translated before they are passed.",displayName:"FieldMessage",methods:[],actualName:"FieldMessage",props:{id:{type:{name:"string"},required:!0,description:"Component unique identifier"},errorMessage:{type:{name:"union",value:[{name:"func"},{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]}]},required:!1,description:"Error message to display"},theme:{type:{name:"object"},required:!1,description:"Theme to apply to component",defaultValue:{value:"defaultTheme",computed:!0}},translator:{type:{name:"func"},required:!1,description:"The function used to translate strings"},isFocused:{type:{name:"bool"},required:!1,description:"If true, the field is focused"}}};