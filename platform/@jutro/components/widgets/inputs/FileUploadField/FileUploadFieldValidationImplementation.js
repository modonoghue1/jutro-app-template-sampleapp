import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _get from"@babel/runtime-corejs3/helpers/get";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import{FieldComponentValidationImplementation}from"../FieldComponent/FieldComponentValidationImplementation";export let FileUploadFieldValidationImplementation=function(_FieldComponentValida){_inherits(FileUploadFieldValidationImplementation,FieldComponentValidationImplementation);var _super=_createSuper(FileUploadFieldValidationImplementation);function FileUploadFieldValidationImplementation(){return _classCallCheck(this,FileUploadFieldValidationImplementation),_super.apply(this,arguments)}return _createClass(FileUploadFieldValidationImplementation,[{key:"bind",value:function(entityToBind){const superBoundMethods=_get(_getPrototypeOf(FileUploadFieldValidationImplementation.prototype),"bind",this).call(this,entityToBind);return["getFileName","getValidationMessages","handleChange","handleClearFile"].reduce(((acc,method)=>({...acc,[method]:this[method].bind(entityToBind)})),superBoundMethods)}},{key:"getValidationMessages",value:function(){return this.props.errorMessage}},{key:"handleChange",value:function(evt){var _fileName,_fileName$split;this.pristine=!1,this.focusPristine=!1;let fileName=evt.target.value||evt.dataTransfer.files[0].name;fileName=null===(_fileName=fileName)||void 0===_fileName||null===(_fileName$split=_fileName.split)||void 0===_fileName$split?void 0:_fileName$split.call(_fileName,/[/\\]/).pop();const file=evt.dataTransfer?evt.dataTransfer.files[0]:evt.target.files[0];this.notifyChange({fileName:fileName,file:file})}},{key:"handleClearFile",value:function(){this.notifyChange(void 0)}},{key:"getFileName",value:function(value){var _value$fileName,_value$fileName$split;return null==value||null===(_value$fileName=value.fileName)||void 0===_value$fileName||null===(_value$fileName$split=_value$fileName.split)||void 0===_value$fileName$split?void 0:_value$fileName$split.call(_value$fileName,/[/\\]/).pop()}}]),FileUploadFieldValidationImplementation}();