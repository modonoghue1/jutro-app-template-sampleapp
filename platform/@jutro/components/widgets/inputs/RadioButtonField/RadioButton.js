import _extends from"@babel/runtime-corejs3/helpers/extends";import _objectWithoutProperties from"@babel/runtime-corejs3/helpers/objectWithoutProperties";import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _assertThisInitialized from"@babel/runtime-corejs3/helpers/assertThisInitialized";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React,{Component}from"react";import PropTypes from"prop-types";import cx from"classnames";import{ContextConsumer,generateComponentId}from"@jutro/platform";import{TranslatorContext}from"@jutro/locale";import{isEmptyValue,isNilValue}from"@jutro/data";import styles from"./RadioButton.module.css";import{getOptionCode,getOptionName}from"../availableValues";const contexts=[TranslatorContext];export let RadioButton=function(_Component){_inherits(RadioButton,Component);var _super=_createSuper(RadioButton);function RadioButton(props,context){var _this;_classCallCheck(this,RadioButton),_this=_super.call(this,props,context),_defineProperty(_assertThisInitialized(_this),"inputRef",React.createRef()),_defineProperty(_assertThisInitialized(_this),"handleValueChange",(evt=>{const _this$props=_this.props,onValueChange=_this$props.onValueChange,model=_this$props.model,path=_this$props.path;_this$props.disabled||onValueChange&&onValueChange(evt.target.value,model||path)})),_defineProperty(_assertThisInitialized(_this),"handleKeyDown",(evt=>{const _this$props2=_this.props,onValueChange=_this$props2.onValueChange,model=_this$props2.model,path=_this$props2.path;_this$props2.disabled||" "!==evt.key&&"Enter"!==evt.key||(onValueChange&&onValueChange(_this.inputRef.current.value,model||path),evt.preventDefault())})),_defineProperty(_assertThisInitialized(_this),"renderComponent",(translator=>{var _code;const _this$props3=_this.props,id=_this$props3.id,option=_this$props3.option,value=_this$props3.value,disabled=_this$props3.disabled,required=_this$props3.required,className=(_this$props3.onValueChange,_this$props3.textAlign,_this$props3.className),labelClassName=_this$props3.labelClassName,testId=(_this$props3.dangerouslySetInnerHTML,_this$props3.tabIndex,_this$props3.testId),secondaryLabel=_this$props3.secondaryLabel,other=_objectWithoutProperties(_this$props3,["id","option","value","disabled","required","onValueChange","textAlign","className","labelClassName","dangerouslySetInnerHTML","tabIndex","testId","secondaryLabel"]),classes=cx(styles.radioButton,className),labelClasses=cx(styles.label,labelClassName);let code=getOptionCode(option),checked=(null==value?void 0:value.toString())===(null===(_code=code)||void 0===_code?void 0:_code.toString());isNilValue(code)&&(code="empty",checked=isEmptyValue(value));const valueId=`${_assertThisInitialized(_this).controlUniqueId}_${code}`;return React.createElement("div",{className:classes,"aria-checked":checked,"data-testid":"radio-button-control"},React.createElement("input",_extends({type:"radio",id:valueId,value:code||"",onChange:_this.handleValueChange,checked:checked,disabled:disabled,required:required,ref:_this.inputRef,onKeyDown:_this.handleKeyDown},other,{"data-testid":testId?`${testId}_${code}`:`${id}_${code}`})),React.createElement("label",{htmlFor:valueId,className:labelClasses,"data-testid":"radio-button-label"},_this.renderPrimaryText(translator),secondaryLabel&&_this.renderSecondaryText(translator)))}));const _id=props.id;return _this.controlUniqueId=generateComponentId(_id),_this}return _createClass(RadioButton,[{key:"renderPrimaryText",value:function(translator){const option=this.props.option,name=getOptionName(option);return name?React.createElement("span",{className:styles.primaryText},translator(name)):null}},{key:"renderSecondaryText",value:function(translator){return this.props.secondaryLabel?React.createElement("span",{className:styles.secondaryText,"data-testid":"radio-button-secondary-label"},translator(this.props.secondaryLabel)):null}},{key:"render",value:function(){return React.createElement(ContextConsumer,{contexts:contexts},this.renderComponent)}}]),RadioButton}();_defineProperty(RadioButton,"propTypes",{option:PropTypes.object,disabled:PropTypes.bool,value:PropTypes.string,required:PropTypes.bool,id:PropTypes.string,onValueChange:PropTypes.func,tabIndex:PropTypes.number,className:PropTypes.string,labelClassName:PropTypes.string}),RadioButton.__docgenInfo={description:"",methods:[{name:"handleValueChange",docblock:null,modifiers:[],params:[{name:"evt",type:null}],returns:null},{name:"handleKeyDown",docblock:null,modifiers:[],params:[{name:"evt",type:null}],returns:null},{name:"renderPrimaryText",docblock:null,modifiers:[],params:[{name:"translator",type:null}],returns:null},{name:"renderSecondaryText",docblock:null,modifiers:[],params:[{name:"translator",type:null}],returns:null},{name:"renderComponent",docblock:null,modifiers:[],params:[{name:"translator",type:null}],returns:null}],displayName:"RadioButton",props:{option:{type:{name:"object"},required:!1,description:"Radio Button Options"},disabled:{type:{name:"bool"},required:!1,description:"Is this field disabled?"},value:{type:{name:"string"},required:!1,description:"Value to determine is the button checked ot unchecked"},required:{type:{name:"bool"},required:!1,description:"Is this field required?"},id:{type:{name:"string"},required:!1,description:"Id of the radio button"},onValueChange:{type:{name:"func"},required:!1,description:"Callback when the value is changed"},tabIndex:{type:{name:"number"},required:!1,description:"TabIndex of the Radio Button"},className:{type:{name:"string"},required:!1,description:"className passed to the top element of RadioButton"},labelClassName:{type:{name:"string"},required:!1,description:"Additional className passed to the label"}}},RadioButton.__docgenInfo={componentName:"RadioButton",packageName:"@jutro/components",description:"",displayName:"RadioButton",methods:[{name:"handleValueChange",docblock:null,modifiers:[],params:[{name:"evt",optional:void 0,type:null}],returns:null},{name:"handleKeyDown",docblock:null,modifiers:[],params:[{name:"evt",optional:void 0,type:null}],returns:null},{name:"renderPrimaryText",docblock:null,modifiers:[],params:[{name:"translator",optional:void 0,type:null}],returns:null},{name:"renderSecondaryText",docblock:null,modifiers:[],params:[{name:"translator",optional:void 0,type:null}],returns:null},{name:"renderComponent",docblock:null,modifiers:[],params:[{name:"translator",optional:void 0,type:null}],returns:null}],actualName:"RadioButton",props:{option:{type:{name:"object"},required:!1,description:"Radio Button Options"},disabled:{type:{name:"bool"},required:!1,description:"Is this field disabled?"},value:{type:{name:"string"},required:!1,description:"Value to determine is the button checked ot unchecked"},required:{type:{name:"bool"},required:!1,description:"Is this field required?"},id:{type:{name:"string"},required:!1,description:"Id of the radio button"},onValueChange:{type:{name:"func"},required:!1,description:"Callback when the value is changed"},tabIndex:{type:{name:"number"},required:!1,description:"TabIndex of the Radio Button"},className:{type:{name:"string"},required:!1,description:"className passed to the top element of RadioButton"},labelClassName:{type:{name:"string"},required:!1,description:"Additional className passed to the label"}}};