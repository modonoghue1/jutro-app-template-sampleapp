import _extends from"@babel/runtime-corejs3/helpers/extends";import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _get from"@babel/runtime-corejs3/helpers/get";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React from"react";import PropTypes from"prop-types";import cx from"classnames";import{defaultAvailableValuePropType,dataTypeShape,DATA_TYPE_STRING,availableValueObjectShape}from"@jutro/prop-types";import{FieldComponent}from"../FieldComponent/FieldComponent";import{getOptionCode}from"../availableValues";import{RadioButton}from"./RadioButton";import{messages}from"./RadioButtonField.messages";import{makeHandleRadioButtonKeyDown,getTabIndex}from"../../../radiobuttonUtils";import styles from"./RadioButton.module.css";const defaultAvailableValues=[{code:"true",name:messages.yes},{code:"false",name:messages.no}];export let RadioButtonField=function(_FieldComponent){_inherits(RadioButtonField,FieldComponent);var _super=_createSuper(RadioButtonField);function RadioButtonField(){return _classCallCheck(this,RadioButtonField),_super.apply(this,arguments)}return _createClass(RadioButtonField,[{key:"render",value:function(){return _get(_getPrototypeOf(RadioButtonField.prototype),"render",this).call(this)}},{key:"renderLabel",value:function(props){return _get(_getPrototypeOf(RadioButtonField.prototype),"renderLabel",this).call(this,{...props,labelContainerClassName:styles.fieldLabelContainer})}},{key:"renderRadioOptions",value:function(options,props){const id=props.id,disabled=props.disabled,required=props.required,selectedValue=this.getDataTypeAwareSelectedValue();return options.map(((option,i)=>{const optionCode=getOptionCode(option),subtitle=option.subtitle,secondaryLabel=option.secondaryLabel;return React.createElement(RadioButton,_extends({secondaryLabel:subtitle||secondaryLabel,key:optionCode,option:option,id:id,tabIndex:getTabIndex(i),value:selectedValue,onValueChange:this.handleAvailableValuesValueChange,disabled:disabled,required:required},this.generateDataPathProperty()))}))}},{key:"generateAccessibilityProperties",value:function(){const translator=this.translator,label=this.props.label;return{..._get(_getPrototypeOf(RadioButtonField.prototype),"generateAccessibilityProperties",this).call(this),"aria-label":translator(label)}}},{key:"renderControl",value:function(breakpointProps){const id=breakpointProps.id,availableValues=breakpointProps.availableValues,controlClassName=breakpointProps.controlClassName,isHorizontal=breakpointProps.isHorizontal,handleRadioButtonKeyDown=makeHandleRadioButtonKeyDown(((el,value)=>{el.querySelector(`label[for^="${id}_"][for$="_${value}"]`).focus()})),options=this.renderRadioOptions(availableValues,breakpointProps),classes=cx({[styles.horizontal]:isHorizontal},controlClassName);return React.createElement("div",_extends({id:id,className:classes,role:"radiogroup",onKeyDown:event=>handleRadioButtonKeyDown(event,breakpointProps,this.handleAvailableValuesValueChange)},this.generateAccessibilityProperties()),options)}}]),RadioButtonField}();_defineProperty(RadioButtonField,"propTypes",{...FieldComponent.propTypes,value:defaultAvailableValuePropType,defaultValue:defaultAvailableValuePropType,dataType:dataTypeShape,availableValues:PropTypes.arrayOf(availableValueObjectShape),isHorizontal:PropTypes.bool}),_defineProperty(RadioButtonField,"defaultProps",{...FieldComponent.defaultProps,availableValues:defaultAvailableValues,dataType:DATA_TYPE_STRING,isHorizontal:!1}),_defineProperty(RadioButtonField,"contextType",FieldComponent.contextType),RadioButtonField.__docgenInfo={description:"Renders a list of radio buttons. You specify the items using component props.\n@typedef {typeof RadioButtonField.propTypes} RadioButtonFieldPropTypes\n@extends FieldComponent<PropTypes.InferProps<RadioButtonFieldPropTypes>>\n\n@metadataType field",methods:[{name:"renderLabel",docblock:"Render label for this component. Override FieldComponent renderLabel\n\n@returns {React.ReactElement} JSX for the label",modifiers:[],params:[{name:"props"}],returns:{description:"JSX for the label",type:{name:"React.ReactElement"}},description:"Render label for this component. Override FieldComponent renderLabel"},{name:"renderRadioOptions",docblock:"Render the radio buttons for the specified options\n\n@param {Array<any>} options - options to render\n@param {object} props\n@returns {React.ReactElement} JSX for the radio buttons",modifiers:[],params:[{name:"options",description:"options to render",type:{name:"Array",elements:[{name:"any"}]},optional:!1},{name:"props",description:null,type:{name:"object"},optional:!1}],returns:{description:"JSX for the radio buttons",type:{name:"React.ReactElement"}},description:"Render the radio buttons for the specified options"},{name:"generateAccessibilityProperties",docblock:"generates accessibility properties for the field component\n@returns {object} set of applicable wai-aria tags",modifiers:[],params:[],returns:{description:"set of applicable wai-aria tags",type:{name:"object"}},description:"generates accessibility properties for the field component"},{name:"renderControl",docblock:"Render control for this component.\n\n@param {object} breakpointProps - breakpoint-specific props\n@returns {React.ReactElement} JSX for the control",modifiers:[],params:[{name:"breakpointProps",description:"breakpoint-specific props",type:{name:"object"},optional:!1}],returns:{description:"JSX for the control",type:{name:"React.ReactElement"}},description:"Render control for this component."}],displayName:"RadioButtonField",props:{availableValues:{defaultValue:{value:"[\n    {\n        code: 'true',\n        name: messages.yes,\n    },\n    {\n        code: 'false',\n        name: messages.no,\n    },\n]",computed:!1},type:{name:"arrayOf",value:{name:"custom",raw:"availableValueObjectShape"}},required:!1,description:"Array of choice objects to display; choice objects contains 'code' and 'name'; if not provided, default 'Yes'/'No' will be used"},dataType:{defaultValue:{value:"DATA_TYPE_STRING",computed:!0},type:{name:"custom",raw:"dataTypeShape"},required:!1,description:"The format of the value"},isHorizontal:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"If true component will be horizontally oriented"},value:{type:{name:"custom",raw:"defaultAvailableValuePropType"},required:!1,description:"Boolean or string value"},defaultValue:{type:{name:"custom",raw:"defaultAvailableValuePropType"},required:!1,description:"Default value"}},composes:["../FieldComponent/FieldComponent"]},RadioButtonField.__docgenInfo={componentName:"RadioButtonField",packageName:"@jutro/components",description:"Renders a list of radio buttons. You specify the items using component props.",displayName:"RadioButtonField",methods:[{name:"renderLabel",docblock:"Render label for this component. Override FieldComponent renderLabel\n\n@returns {React.ReactElement} JSX for the label",modifiers:[],params:[{name:"props"}],returns:{description:"JSX for the label",type:{name:"React.ReactElement"}},description:"Render label for this component. Override FieldComponent renderLabel"},{name:"renderRadioOptions",docblock:"Render the radio buttons for the specified options\n\n@param {Array<any>} options - options to render\n@param {object} props\n@returns {React.ReactElement} JSX for the radio buttons",modifiers:[],params:[{name:"options",description:"options to render",type:{name:"Array",elements:[{name:"any"}]},optional:!1},{name:"props",description:null,type:{name:"object"},optional:!1}],returns:{description:"JSX for the radio buttons",type:{name:"React.ReactElement"}},description:"Render the radio buttons for the specified options"},{name:"generateAccessibilityProperties",docblock:"generates accessibility properties for the field component\n@returns {object} set of applicable wai-aria tags",modifiers:[],params:[],returns:{description:"set of applicable wai-aria tags",type:{name:"object"}},description:"generates accessibility properties for the field component"},{name:"renderControl",docblock:"Render control for this component.\n\n@param {object} breakpointProps - breakpoint-specific props\n@returns {React.ReactElement} JSX for the control",modifiers:[],params:[{name:"breakpointProps",description:"breakpoint-specific props",type:{name:"object"},optional:!1}],returns:{description:"JSX for the control",type:{name:"React.ReactElement"}},description:"Render control for this component."}],actualName:"RadioButtonField",metadataType:"field",props:{value:{type:{name:"union",value:[{name:"string"},{name:"bool"},{name:"number"},{name:"custom",raw:"availableValueObjectShape"}]},required:!1,description:"Boolean or string value"},defaultValue:{type:{name:"union",value:[{name:"string"},{name:"bool"},{name:"number"},{name:"custom",raw:"availableValueObjectShape"}]},required:!1,description:"Default value"},dataType:{type:{name:"enum",value:[{value:"'object'",computed:!1},{value:"'string'",computed:!1}]},required:!1,description:"The format of the value",defaultValue:{value:"'string'",computed:!1}},availableValues:{type:{name:"arrayOf",value:{name:"union",value:[{name:"shape",value:{code:{name:"union",value:[{name:"string"},{name:"number"}],required:!1},name:{name:"custom",raw:"intlMessageShape",required:!1},subtitle:{name:"custom",raw:"intlMessageShape",required:!1},secondaryLabel:{name:"custom",raw:"intlMessageShape",required:!1}}},{name:"shape",value:{id:{name:"union",value:[{name:"string"},{name:"number"}],required:!1},displayName:{name:"custom",raw:"intlMessageShape",required:!1},subtitle:{name:"custom",raw:"intlMessageShape",required:!1},secondaryLabel:{name:"custom",raw:"intlMessageShape",required:!1}}}]}},required:!1,description:"Array of choice objects to display; choice objects contains 'code' and 'name'; if not provided, default 'Yes'/'No' will be used",defaultValue:{value:"[\n    {\n        code: 'true',\n        name: messages.yes,\n    },\n    {\n        code: 'false',\n        name: messages.no,\n    },\n]",computed:!1}},isHorizontal:{type:{name:"bool"},required:!1,description:"If true component will be horizontally oriented",defaultValue:{value:"false",computed:!1}}},composes:["../FieldComponent/FieldComponent"]};