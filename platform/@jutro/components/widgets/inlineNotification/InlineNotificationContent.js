import React,{useContext}from"react";import{getMessageProp}from"@jutro/platform";import{TranslatorContext}from"@jutro/locale";import styles from"./InlineNotification.module.css";import{Icon}from"../Icon/Icon";import{IconButton}from"../IconButton/IconButton";import{messages}from"./InlineNotification.messages";import{getKeyPressHandler}from"../../accessibility/getKeyPressHandler";const typeIconMap={warning:"gw-error-outline",error:"gw-error-outline",info:"gw-info",success:"gw-check-circle"};export const InlineNotificationContent=({type:type,messageProps:messageProps,message:message,isEmbeddedNotification:isEmbeddedNotification,isDismissable:isDismissable,handleDismiss:handleDismiss})=>{const translator=useContext(TranslatorContext);return React.createElement(React.Fragment,null,React.createElement("span",{className:styles.iconWrapper,"aria-hidden":"true"},React.createElement(Icon,{icon:typeIconMap[type],size:"large"})),React.createElement("span",{className:styles.message},React.createElement("span",{className:styles.messageDefault},translator(((type,messageProps)=>{switch(type){case"success":return getMessageProp("success",messageProps,messages);case"info":return getMessageProp("info",messageProps,messages);case"warning":return getMessageProp("warning",messageProps,messages);case"error":return getMessageProp("error",messageProps,messages);default:throw new Error(`Unhandled notification type message: ${type}`)}})(type,messageProps))),React.createElement("span",null,translator(message))),!isEmbeddedNotification&&isDismissable&&handleDismiss&&React.createElement(IconButton,{icon:"gw-close",className:styles.dismissButton,iconClassName:styles.dismissButtonIcon,onClick:handleDismiss,ariaLabel:getMessageProp("dismiss",messageProps,messages),iconColor:"warning"===type?"dark":"light",onKeyPress:getKeyPressHandler(handleDismiss)}))};InlineNotificationContent.__docgenInfo={description:"",methods:[],displayName:"InlineNotificationContent",props:{type:{required:!0,tsType:{name:"union",raw:"'warning' | 'error' | 'info' | 'success'",elements:[{name:"literal",value:"'warning'"},{name:"literal",value:"'error'"},{name:"literal",value:"'info'"},{name:"literal",value:"'success'"}]},description:""},messageProps:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    success?: IntlMessageShape;\n    warning?: IntlMessageShape;\n    info?: IntlMessageShape;\n    error?: IntlMessageShape;\n    dismissLabel?: IntlMessageShape;\n}",signature:{properties:[{key:"success",value:{name:"IntlMessageShape",required:!1}},{key:"warning",value:{name:"IntlMessageShape",required:!1}},{key:"info",value:{name:"IntlMessageShape",required:!1}},{key:"error",value:{name:"IntlMessageShape",required:!1}},{key:"dismissLabel",value:{name:"IntlMessageShape",required:!1}}]}},description:""},message:{required:!0,tsType:{name:"IntlMessageShape"},description:""},isEmbeddedNotification:{required:!1,tsType:{name:"boolean"},description:""},isDismissable:{required:!1,tsType:{name:"boolean"},description:""},handleDismiss:{required:!1,tsType:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}},description:""}}},InlineNotificationContent.__docgenInfo={componentName:"InlineNotificationContent",packageName:"@jutro/components",description:"",displayName:"InlineNotificationContent",methods:[],actualName:"InlineNotificationContent"};