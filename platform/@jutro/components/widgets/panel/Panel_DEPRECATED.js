import React from"react";import PropTypes from"prop-types";import cx from"classnames";import{intlMessageShape}from"@jutro/prop-types";import{logDeprecationMessage,uniqueInnerId}from"@jutro/platform";import styles from"./Panel_DEPRECATED.module.css";import{PanelHeader,alignments}from"./PanelHeader_DEPRECATED";import{PanelLayout}from"../../layouts/PanelLayout";const panelPropTypes={id:PropTypes.string.isRequired,className:PropTypes.string,alignment:PropTypes.oneOf(alignments),children:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node),PropTypes.node]),title:intlMessageShape,subTitle:intlMessageShape,renderHeader:PropTypes.func,headerClass:PropTypes.string,fluid:PropTypes.bool};export const Panel=({id:id,className:className,alignment:alignment,title:title,subTitle:subTitle,renderHeader:renderHeader,headerClass:headerClass,fluid:fluid,children:children,noDeprecationWarning:noDeprecationWarning})=>{noDeprecationWarning||logDeprecationMessage("Panel","Card","Use Card with isPanel=true to get the same styling","7.0.0");const panelClass=cx(styles.panel,{[styles.fluid]:fluid},className),headerProps={id:uniqueInnerId(id,"panelHeaderId").panelHeaderId,alignment:alignment,title:title,subTitle:subTitle,className:headerClass},Layout=fluid?"div":PanelLayout;return React.createElement(Layout,{id:id,className:panelClass},renderHeader?renderHeader(headerProps):React.createElement(PanelHeader,headerProps),children)};Panel.propTypes=panelPropTypes,Panel.__docgenInfo={description:"A container for child components. You can set a title and subtitle through the props.\n\nThis component is a typical wrapper for a form, but can have any content.\n\n@type {React.FC<PropTypes.InferProps<typeof panelPropTypes>>}\n\n@metadataType container\n@deprecated",methods:[],displayName:"Panel",props:{id:{type:{name:"string"},required:!0,description:"Used to identify panel component."},className:{type:{name:"string"},required:!1,description:"Additional styles to be applied to Panel"},alignment:{type:{name:"enum",computed:!0,value:"alignments"},required:!1,description:"Alignment of the panel header"},children:{type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]},required:!1,description:"Body of Panel"},title:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Title of Panel"},subTitle:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Subtitle of Panel"},renderHeader:{type:{name:"func"},required:!1,description:"Function rendering panel header element instead of the default one"},headerClass:{type:{name:"string"},required:!1,description:"Additional styles to be applied to Panel header"},fluid:{type:{name:"bool"},required:!1,description:"Content spans the entire width."}}},Panel.__docgenInfo={componentName:"Panel",packageName:"@jutro/components",description:"A container for child components. You can set a title and subtitle through the props.\n\nThis component is a typical wrapper for a form, but can have any content.",displayName:"Panel",methods:[],actualName:"Panel",metadataType:"container",props:{id:{type:{name:"string"},required:!0,description:"Used to identify panel component."},className:{type:{name:"string"},required:!1,description:"Additional styles to be applied to Panel"},alignment:{type:{name:"enum",computed:!1,value:[{value:"'center'",computed:!1},{value:"'left'",computed:!1},{value:"'right'",computed:!1}]},required:!1,description:"Alignment of the panel header"},children:{type:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}]},required:!1,description:"Body of Panel"},title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Title of Panel"},subTitle:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Subtitle of Panel"},renderHeader:{type:{name:"func"},required:!1,description:"Function rendering panel header element instead of the default one"},headerClass:{type:{name:"string"},required:!1,description:"Additional styles to be applied to Panel header"},fluid:{type:{name:"bool"},required:!1,description:"Content spans the entire width."}}};