import _extends from"@babel/runtime-corejs3/helpers/extends";import React from"react";import PropTypes from"prop-types";import cx from"classnames";import omit from"lodash/omit";import{uniqueInnerId}from"@jutro/platform";import{nestedTooltipShape,intlMessageShape}from"@jutro/prop-types";import styles from"./Card.module.css";import{CardHeader}from"./CardHeader";import{Panel}from"../panel/Panel_DEPRECATED";const cardPropTypes={id:PropTypes.string.isRequired,title:intlMessageShape,subTitle:intlMessageShape,renderHeader:PropTypes.func,headerClass:PropTypes.string,className:PropTypes.string,children:PropTypes.node,tooltip:nestedTooltipShape,isPanel:PropTypes.bool};export const Card=props=>{const id=props.id,className=props.className,headerClass=props.headerClass,children=props.children,renderHeader=props.renderHeader,title=props.title,subTitle=props.subTitle,tooltip=props.tooltip;if(props.isPanel){const panelProps=omit(props,["isPanel","tooltip"]);return React.createElement(Panel,_extends({},panelProps,{noDeprecationWarning:!0}))}const cardClass=cx(styles.card,className),tooltipId=uniqueInnerId(id,"tooltipId").tooltipId,ariaDescribedByProp={};renderHeader&&tooltip&&(ariaDescribedByProp["aria-describedby"]=tooltipId);const headerProps={title:title,subTitle:subTitle,tooltip:tooltip?{id:tooltipId,...tooltip}:null,renderHeader:renderHeader,className:headerClass};return React.createElement("div",_extends({id:id,className:cardClass},ariaDescribedByProp),(title||renderHeader)&&React.createElement(CardHeader,headerProps),children)};Card.propTypes=cardPropTypes,Card.defaultProps={isPanel:!1},Card.__docgenInfo={description:"Renders a card with a header and a body.\n\n@type {React.FC<PropTypes.InferProps<typeof cardPropTypes>>}\n\n@metadataType container",methods:[],displayName:"Card",props:{isPanel:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"Support for legacy styling, to look like Panel"},id:{type:{name:"string"},required:!0,description:"A unique ID of this card"},title:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"The header title to be displayed in the Card"},subTitle:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Subtitle of Card"},renderHeader:{type:{name:"func"},required:!1,description:"Callback to render header to be displayed in the Card"},headerClass:{type:{name:"string"},required:!1,description:"Additional CSS class name for header"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},children:{type:{name:"node"},required:!1,description:"The children elements to render inside of the Card body"},tooltip:{type:{name:"custom",raw:"nestedTooltipShape"},required:!1,description:"Card header tooltip"}}},Card.__docgenInfo={componentName:"Card",packageName:"@jutro/components",description:"Renders a card with a header and a body.",displayName:"Card",methods:[],actualName:"Card",metadataType:"container",props:{id:{type:{name:"string"},required:!0,description:"A unique ID of this card"},title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"The header title to be displayed in the Card"},subTitle:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Subtitle of Card"},renderHeader:{type:{name:"func"},required:!1,description:"Callback to render header to be displayed in the Card"},headerClass:{type:{name:"string"},required:!1,description:"Additional CSS class name for header"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},children:{type:{name:"node"},required:!1,description:"The children elements to render inside of the Card body"},tooltip:{type:{name:"custom",raw:"nestedTooltipShape"},required:!1,description:"Card header tooltip"},isPanel:{type:{name:"bool"},required:!1,description:"Support for legacy styling, to look like Panel",defaultValue:{value:"false",computed:!1}}}};