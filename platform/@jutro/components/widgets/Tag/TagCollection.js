import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useMemo,useRef,useEffect,useState,useLayoutEffect}from"react";import isNumber from"lodash/isNumber";import isArray from"lodash/isArray";import isPlainObject from"lodash/isPlainObject";import isNull from"lodash/isNull";import cx from"classnames";import PropTypes from"prop-types";import{Tag}from"./Tag";import styles from"./TagCollection.module.css";const getTypeOfChild=child=>isArray(child)?"array":isPlainObject(child)?"object":isNull(child)?"null":"other";const getStyleProps=child=>({className:cx(child.className,styles.collectionTag),iconWrapperClassName:cx(child.iconWrapperClassName,styles.tagButton),labelClassName:cx(child.labelClassName,styles.tagLabel)});export const TagCollection=({id:id,groupThreshold:defaultGroupThreshold,expanded:defaultExpanded,className:className,children:children})=>{const _getChildrenTags=(children=>{const childrenArray=React.Children.toArray(children),optionsMenu=childrenArray[childrenArray.length-1];return[childrenArray.slice(0,childrenArray.length-1),optionsMenu]})(children),_getChildrenTags2=_slicedToArray(_getChildrenTags,2),initialTags=_getChildrenTags2[0],optionsMenu=_getChildrenTags2[1],initialTagsLength="array"===getTypeOfChild(children)?initialTags.length:0,ref=useRef(),minimumTagWidth=useRef(0),_useState=useState(defaultExpanded),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1],_useState3=useState(null),_useState4=_slicedToArray(_useState3,2),maxWidth=_useState4[0],setMaxWidth=_useState4[1],_useState5=useState(0),_useState6=_slicedToArray(_useState5,2),tagsLength=_useState6[0],setTagsLength=_useState6[1],_useState7=useState(0),_useState8=_slicedToArray(_useState7,2),groupThreshold=_useState8[0],setGroupThreshold=_useState8[1],_useState9=useState(getTypeOfChild(children[0])),_useState10=_slicedToArray(_useState9,2),typeOfFirstChild=_useState10[0],setTypeOfFirstChild=_useState10[1],isMaxWidthNull=useMemo((()=>null===maxWidth),[maxWidth]);useEffect((()=>{var _ref$current;if(!isMaxWidthNull)return initialTagsLength!==tagsLength&&(setTagsLength(initialTagsLength),setGroupThreshold(0)),getTypeOfChild(children[0])!==typeOfFirstChild&&setTypeOfFirstChild(getTypeOfChild(children[0])),void(null!==(_ref$current=ref.current)&&void 0!==_ref$current&&_ref$current.clientWidth&&ref.current.clientWidth<maxWidth&&setMaxWidth(ref.current.clientWidth));isMaxWidthNull&&(setTagsLength(initialTagsLength),setMaxWidth(ref.current.clientWidth))}),[isMaxWidthNull,children,typeOfFirstChild]),useLayoutEffect((()=>{var _ref$current2,_ref$current2$childre;if(null!==(_ref$current2=ref.current)&&void 0!==_ref$current2&&null!==(_ref$current2$childre=_ref$current2.children)&&void 0!==_ref$current2$childre&&_ref$current2$childre.length&&!isMaxWidthNull&&tagsLength===initialTagsLength){minimumTagWidth.current=minimumTagWidth.current||((children,max)=>{const minimum=Object.values(children).slice(0,children.length-1).reduce(((min,{clientWidth:clientWidth})=>clientWidth<min?clientWidth:min),max);return minimum===max?0:minimum})(ref.current.children,maxWidth);let divider=initialTagsLength;expanded||(divider=function(tags,currentRef,maxWidth,minimumTagWidth,maxBoundary){let remainingWidth=maxWidth;const divider=tags.findIndex(((tag,elementIndex)=>{var _currentRef$children;const indexOfTag=tags.indexOf(tag),childWidth=null===(_currentRef$children=currentRef.children[tags.length-indexOfTag-1])||void 0===_currentRef$children?void 0:_currentRef$children.clientWidth;return!!(remainingWidth-childWidth-minimumTagWidth.current<0||isNumber(maxBoundary)&&elementIndex>=maxBoundary)||(remainingWidth-=childWidth,!1)}));return-1===divider?tags.length:divider}(initialTags,ref.current,maxWidth,minimumTagWidth,defaultGroupThreshold)),setTagsLength(divider),setGroupThreshold(initialTagsLength-divider)}}),[children,expanded,maxWidth,tagsLength,typeOfFirstChild,initialTagsLength]);const _useMemo=useMemo((()=>{var _initialTags$,_initialTags$$props;if(isMaxWidthNull)return[[],!1];const tagsToClone=initialTags.slice(groupThreshold,initialTagsLength),childrenToClone=initialTagsLength>0?tagsToClone:initialTags,disabledCheck=null===(_initialTags$=initialTags[0])||void 0===_initialTags$||null===(_initialTags$$props=_initialTags$.props)||void 0===_initialTags$$props?void 0:_initialTags$$props.isDisabled;return[[...React.Children.map(childrenToClone,((child,childIndex)=>{const flippedIndex=childrenToClone.length-childIndex-1,newProps={...child.props,id:`${id}_${flippedIndex}`,...getStyleProps(child)};return React.cloneElement(child,newProps)})),React.cloneElement(optionsMenu,{...optionsMenu.props,...getStyleProps(optionsMenu)})],disabledCheck]}),[styles.collectionTag,tagsLength,isMaxWidthNull,typeOfFirstChild,children,groupThreshold,id]),_useMemo2=_slicedToArray(_useMemo,2),tagsList=_useMemo2[0],isDisabled=_useMemo2[1];return React.createElement("span",{ref:ref,className:cx(styles.collection,{[styles.expanded]:expanded},className)},groupThreshold>0?React.createElement(Tag,{id:`${id}_expandButton`,disabled:isDisabled,label:`+${groupThreshold}`,className:cx(styles.collectionTag),icon:"gw-chevron-right",onClick:()=>setExpanded(!0),iconWrapperClassName:styles.tagButton,labelClassName:styles.tagLabel}):null,tagsList)};TagCollection.propTypes={id:PropTypes.string,expanded:PropTypes.bool,groupThreshold:PropTypes.number,className:PropTypes.string,children:PropTypes.node},TagCollection.__docgenInfo={description:"TagCollection\n@type {React.FC<TagCollectionProps>}",methods:[],displayName:"TagCollection",props:{id:{type:{name:"string"},required:!1,description:"id of the wrapping component."},expanded:{type:{name:"bool"},required:!1,description:"Render expanded collection on initial component load"},groupThreshold:{type:{name:"number"},required:!1,description:"Default state for number of visible tags, additional items will be represented as single tag (like `+12`) at the begining"},className:{type:{name:"string"},required:!1,description:"Custom class name for tag collection"},children:{type:{name:"node"},required:!1,description:"Tag components"}}},TagCollection.__docgenInfo={componentName:"TagCollection",packageName:"@jutro/components",description:"TagCollection",displayName:"TagCollection",methods:[],actualName:"TagCollection",props:{id:{type:{name:"string"},required:!1,description:"id of the wrapping component."},expanded:{type:{name:"bool"},required:!1,description:"Render expanded collection on initial component load"},groupThreshold:{type:{name:"number"},required:!1,description:"Default state for number of visible tags, additional items will be represented as single tag (like `+12`) at the begining"},className:{type:{name:"string"},required:!1,description:"Custom class name for tag collection"},children:{type:{name:"node"},required:!1,description:"Tag components"}}};