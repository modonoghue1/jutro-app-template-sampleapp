import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _createClass from"@babel/runtime-corejs3/helpers/createClass";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React,{PureComponent}from"react";import PropTypes from"prop-types";import cx from"classnames";import styles from"./AddressDisplay.module.css";export let AddressDisplay=function(_PureComponent){_inherits(AddressDisplay,PureComponent);var _super=_createSuper(AddressDisplay);function AddressDisplay(){return _classCallCheck(this,AddressDisplay),_super.apply(this,arguments)}return _createClass(AddressDisplay,[{key:"renderFields",value:function(){const _this$props=this.props,address=_this$props.address;return _this$props.fields.filter((field=>!!address[field])).map((existingField=>React.createElement("div",null,address[existingField])))}},{key:"render",value:function(){const className=this.props.className,classes=cx(styles.addressDisplay,className);return React.createElement("div",{className:classes},this.renderFields())}}]),AddressDisplay}();_defineProperty(AddressDisplay,"propTypes",{address:PropTypes.object.isRequired,fields:PropTypes.arrayOf(PropTypes.string),className:PropTypes.string}),_defineProperty(AddressDisplay,"defaultProps",{fields:["addressLine1","addressLine2","addressLine3","city","state","postalCode"]}),AddressDisplay.__docgenInfo={description:"Displays an address from a data object in read-only mode.\n\n@typedef {typeof AddressDisplay.propTypes} AddressDisplayPropTypes\n@extends PureComponent<PropTypes.InferProps<AddressDisplayPropTypes>>\n\n@metadataType element",methods:[{name:"renderFields",docblock:"Renders the list of fields.\n\n@returns {Array<React.ReactElement>} - The list of fields",modifiers:[],params:[],returns:{description:"The list of fields",type:{name:"Array",elements:[{name:"React.ReactElement"}]}},description:"Renders the list of fields."}],displayName:"AddressDisplay",props:{fields:{defaultValue:{value:"[\n    'addressLine1',\n    'addressLine2',\n    'addressLine3',\n    'city',\n    'state',\n    'postalCode',\n]",computed:!1},type:{name:"arrayOf",value:{name:"string"}},required:!1,description:"The array of address fields to display, for example ['addressLine1', 'addressLine2',\n'addressLine3', 'city', 'state', 'postalCode']"},address:{type:{name:"object"},required:!0,description:"The address to display"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"}}},AddressDisplay.__docgenInfo={componentName:"AddressDisplay",packageName:"@jutro/components",description:"Displays an address from a data object in read-only mode.",displayName:"AddressDisplay",methods:[{name:"renderFields",docblock:"Renders the list of fields.\n\n@returns {Array<React.ReactElement>} - The list of fields",modifiers:[],params:[],returns:{description:"The list of fields",type:{name:"Array",elements:[{name:"React.ReactElement"}]}},description:"Renders the list of fields."}],actualName:"AddressDisplay",metadataType:"element",props:{address:{type:{name:"object"},required:!0,description:"The address to display"},fields:{type:{name:"arrayOf",value:{name:"string"}},required:!1,description:"The array of address fields to display, for example ['addressLine1', 'addressLine2',\n'addressLine3', 'city', 'state', 'postalCode']",defaultValue:{value:"[\n    'addressLine1',\n    'addressLine2',\n    'addressLine3',\n    'city',\n    'state',\n    'postalCode',\n]",computed:!1}},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"}}};