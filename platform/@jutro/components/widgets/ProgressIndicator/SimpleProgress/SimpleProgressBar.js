import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext}from"react";import PropTypes from"prop-types";import cx from"classnames";import{TranslatorContext}from"@jutro/locale";import{intlMessageShape}from"@jutro/prop-types";import{FormattedNumber}from"../../values/FormattedNumber";import styles from"./SimpleProgressBar.module.css";const simpleProgressBarPropTypes={id:PropTypes.string.isRequired,completed:PropTypes.number.isRequired,total:PropTypes.number.isRequired,className:PropTypes.string,progressBarClassName:PropTypes.string,stepClassName:PropTypes.string,label:intlMessageShape,labelPosition:PropTypes.oneOf(["top","bottom"]),showProgressLabel:PropTypes.bool,showPercentageProgress:PropTypes.bool};export const SimpleProgressBar=({id:id,path:path,completed:completed,value:value,total:total,className:className,progressBarClassName:progressBarClassName,stepClassName:stepClassName,label:label,labelPosition:labelPosition,showProgressLabel:showProgressLabel,showPercentageProgress:showPercentageProgress,...rest})=>{const translator=useContext(TranslatorContext),componentClassNames=cx(styles.simpleProgressBar,className),progressBarClassNames=cx(styles.progressBar,progressBarClassName),progressBarStepClassNames=cx(styles.progressBarSteps,stepClassName),effectiveCompleted=path?value:completed;let progress=(effectiveCompleted/total*100).toFixed();progress=progress<100?progress:100;const labelPositioningStyles=label&&showProgressLabel&&"top"===labelPosition?styles.labelContainer:styles.labelContainerCenter,progressLabel=showPercentageProgress?React.createElement(FormattedNumber,{format:"percent",value:progress/100}):`${effectiveCompleted}/${total}`,renderLabel=()=>React.createElement("div",{className:styles.label},translator(label)),labelId=`progressbar-label-${id}`,accessibleName=showProgressLabel||label?{"aria-labelledby":labelId}:{"aria-label":"progressbar"};return React.createElement("div",_extends({id:id,className:componentClassNames},rest),React.createElement("div",{className:labelPositioningStyles,id:labelId},label&&"top"===labelPosition?renderLabel():null,showProgressLabel&&React.createElement("div",{className:styles.progressLabel},progressLabel)),React.createElement("div",_extends({className:progressBarClassNames,role:"progressbar","aria-valuetext":label,"aria-valuenow":progress,"aria-valuemin":"0","aria-valuemax":"100"},accessibleName),React.createElement("div",{className:progressBarStepClassNames,style:{transform:`translateX(${progress-100}%)`}})),React.createElement("div",{className:labelPositioningStyles},label&&"bottom"===labelPosition?renderLabel():null))};SimpleProgressBar.defaultProps={labelPosition:"bottom",showProgressLabel:!0,showPercentageProgress:!1},SimpleProgressBar.propTypes=simpleProgressBarPropTypes,SimpleProgressBar.__docgenInfo={description:"SimpleProgressBar\n@type {React.FC<PropTypes.InferProps<typeof simpleProgressBarPropTypes>>}",methods:[],displayName:"SimpleProgressBar",props:{labelPosition:{defaultValue:{value:"'bottom'",computed:!1},type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]},required:!1,description:"Allows you to select position of the progress bar label"},showProgressLabel:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:"Shows progress label"},showPercentageProgress:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"If true shows percentage progress instead of fractions"},id:{type:{name:"string"},required:!0,description:"A unique ID of this element"},completed:{type:{name:"number"},required:!0,description:"Number of steps that were completed"},total:{type:{name:"number"},required:!0,description:"Total number of steps"},className:{type:{name:"string"},required:!1,description:"Class to override whole component styles"},progressBarClassName:{type:{name:"string"},required:!1,description:"Class to override progress bar styles"},stepClassName:{type:{name:"string"},required:!1,description:"Class to override progress bar step styles"},label:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Label of the progress bar"}}},SimpleProgressBar.__docgenInfo={componentName:"SimpleProgressBar",packageName:"@jutro/components",description:"SimpleProgressBar",displayName:"SimpleProgressBar",methods:[],actualName:"SimpleProgressBar",props:{id:{type:{name:"string"},required:!0,description:"A unique ID of this element"},completed:{type:{name:"number"},required:!0,description:"Number of steps that were completed"},total:{type:{name:"number"},required:!0,description:"Total number of steps"},className:{type:{name:"string"},required:!1,description:"Class to override whole component styles"},progressBarClassName:{type:{name:"string"},required:!1,description:"Class to override progress bar styles"},stepClassName:{type:{name:"string"},required:!1,description:"Class to override progress bar step styles"},label:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Label of the progress bar"},labelPosition:{type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'bottom'",computed:!1}]},required:!1,description:"Allows you to select position of the progress bar label",defaultValue:{value:"'bottom'",computed:!1}},showProgressLabel:{type:{name:"bool"},required:!1,description:"Shows progress label",defaultValue:{value:"true",computed:!1}},showPercentageProgress:{type:{name:"bool"},required:!1,description:"If true shows percentage progress instead of fractions",defaultValue:{value:"false",computed:!1}}}};