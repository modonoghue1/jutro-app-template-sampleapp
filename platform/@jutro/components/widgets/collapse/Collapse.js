import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useEffect,useRef}from"react";import PropTypes from"prop-types";import{Transition}from"react-transition-group";import{deprecated}from"@jutro/prop-types";import cx from"classnames";import styles from"./Collapse.module.css";const timeoutShape={enter:PropTypes.number,exit:PropTypes.number,appear:PropTypes.number},collapsePropTypes={isOpen:PropTypes.bool,delay:deprecated(PropTypes.oneOfType([PropTypes.shape({show:PropTypes.number.isRequired,hide:PropTypes.number.isRequired}),PropTypes.number]),"7.0.0",'Use "timeout" instead'),timeout:PropTypes.oneOfType([PropTypes.shape(timeoutShape),PropTypes.number]),collapsedSize:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),isHorizontal:PropTypes.bool,expandOverContent:PropTypes.bool,isReversed:PropTypes.bool,onEnter:PropTypes.func,onEntering:PropTypes.func,onEntered:PropTypes.func,onOpened:deprecated(PropTypes.func,"7.0.0",'Use "onEntered" instead'),onExit:PropTypes.func,onExiting:PropTypes.func,onExited:PropTypes.func,onClosed:deprecated(PropTypes.func,"7.0.0",'Use "onExited" instead'),children:PropTypes.node,className:PropTypes.string,outerContentWrapperClassName:PropTypes.string,contentWrapperClassName:PropTypes.string};export const Collapse=({isOpen:isOpen,delay:delay=350,timeout:timeoutProp,collapsedSize:collapsedSizeProp="0px",isHorizontal:isHorizontal,expandOverContent:expandOverContent,isReversed:isReversed,onEnter:onEnter,onEntering:onEntering,onEntered:onEnteredProp,onOpened:onOpened,onExit:onExit,onExiting:onExiting,onExited:onExitedProp,onClosed:onClosed,children:children,className:className,outerContentWrapperClassName:outerContentWrapperClassName,contentWrapperClassName:contentWrapperClassName,...other})=>{const wrapperRef=useRef(null),phantomBoxRef=useRef(null),outerContentRef=useRef(null),contentRef=useRef(null),onEntered=onEnteredProp||onOpened,onExited=onExitedProp||onClosed,timeout=timeoutProp||("object"==typeof delay?{enter:delay.show,exit:delay.hide,appear:0}:{enter:delay,exit:delay,appear:0})||0,collapsedSize="string"==typeof collapsedSizeProp?collapsedSizeProp:`${collapsedSizeProp}px`,isHidden=!isOpen&&"0px"===collapsedSize,isUsingPhantomBox=isHorizontal&&expandOverContent&&isReversed,transitionedProperty=isHorizontal?"width":"height",getContentSize=()=>{const property=isHorizontal?"clientWidth":"clientHeight";return contentRef.current?`${contentRef.current[property]}px`:"0"};useEffect((()=>{isOpen&&isUsingPhantomBox&&phantomBoxRef.current&&(phantomBoxRef.current.style.width=getContentSize())}),[]),useEffect((()=>{isOpen||isUsingPhantomBox||!outerContentRef.current||(outerContentRef.current.style[transitionedProperty]=collapsedSize)}),[isUsingPhantomBox,transitionedProperty,collapsedSize]);const wrapperInlineStyle={...expandOverContent&&{[isHorizontal?"marginRight":"marginBottom"]:collapsedSize}},wrapperClasses=cx(className,styles.wrapper,{[styles.fullHeight]:isHorizontal}),outerContentWrapperClasses=cx(outerContentWrapperClassName,styles.outerContentWrapper,{[styles.fullHeight]:isHorizontal,[styles.overContent]:expandOverContent&&!isUsingPhantomBox,[styles.hidden]:isHidden}),contentWrapperClasses=cx(contentWrapperClassName,styles.contentWrapper,{[styles.fullHeight]:isHorizontal}),transition=React.createElement(Transition,{in:isOpen,timeout:timeout,onEnter:(node,isAppearing)=>{contentRef.current&&(contentRef.current.style.position="absolute"),isUsingPhantomBox?(phantomBoxRef.current&&(phantomBoxRef.current.style.width=getContentSize()),node.style.transform=`translateX(${getContentSize()})`):node.style[transitionedProperty]=collapsedSize,onEnter&&onEnter(node,isAppearing)},onEntering:(node,isAppearing)=>{var _timeout;const expandedSize=getContentSize();contentRef.current&&(contentRef.current.style.position=""),node.style.transitionTimingFunction="ease-in",isUsingPhantomBox?node.style.transform="translateX(0)":node.style[transitionedProperty]=expandedSize;const duration="object"==typeof timeout?null!==(_timeout=timeout[isAppearing?"appear":"enter"])&&void 0!==_timeout?_timeout:timeout.enter:timeout;node.style.transitionDuration=`${duration}ms`,onEntering&&onEntering(node,isAppearing)},onEntered:(node,isAppearing)=>{isHorizontal||(node.style[transitionedProperty]="auto"),onEntered&&onEntered(node,isAppearing)},onExit:node=>{isUsingPhantomBox?node.style.transform="translateX(0)":node.style[transitionedProperty]=getContentSize(),onExit&&onExit(node)},onExiting:node=>{isUsingPhantomBox?node.style.transform=`translateX(${getContentSize()})`:setTimeout((()=>{node.style[transitionedProperty]=collapsedSize}),0),node.style.transitionTimingFunction="ease-in";const duration="object"==typeof timeout?timeout.exit:timeout;node.style.transitionDuration=`${duration}ms`,onExiting&&onExiting(node)},onExited:node=>{isUsingPhantomBox&&phantomBoxRef.current&&(phantomBoxRef.current.style.width="0"),onExited&&onExited(node)},appear:!0},React.createElement("div",{className:outerContentWrapperClasses,ref:outerContentRef,"data-testid":"collapse-outer-content-wrapper"},React.createElement("div",{className:contentWrapperClasses,ref:contentRef},children)));return React.createElement("div",_extends({className:wrapperClasses,style:wrapperInlineStyle,ref:wrapperRef},other),isUsingPhantomBox?React.createElement("div",{className:styles.phantomBox,ref:phantomBoxRef},transition):transition)};Collapse.propTypes=collapsePropTypes,Collapse.__docgenInfo={description:"",methods:[],displayName:"Collapse",props:{delay:{defaultValue:{value:"350",computed:!1},type:{name:"custom",raw:"deprecated(\n    PropTypes.oneOfType([\n        PropTypes.shape({\n            show: PropTypes.number.isRequired,\n            hide: PropTypes.number.isRequired,\n        }),\n        PropTypes.number,\n    ]),\n    '7.0.0',\n    'Use \"timeout\" instead'\n)"},required:!1,description:"Duration of the transition, in milliseconds\nUsed if 'timeout' prop is not passed"},collapsedSize:{defaultValue:{value:"'0px'",computed:!1},type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1,description:"Width/height of the component in collapsed state"},isOpen:{type:{name:"bool"},required:!1,description:"If true, component will expand, if false component will collapse"},timeout:{type:{name:"union",value:[{name:"shape",value:{enter:{name:"number",required:!1},exit:{name:"number",required:!1},appear:{name:"number",required:!1}}},{name:"number"}]},required:!1,description:"Duration of the transition, in milliseconds."},isHorizontal:{type:{name:"bool"},required:!1,description:"If true, transition orientation will be horizontal (width will be transitioned)\nIf false, it will be vertical (height will be transitioned)"},expandOverContent:{type:{name:"bool"},required:!1,description:"If true, absolute positioning will be used and element will expand over page content\nIf false, content will be squeezed"},isReversed:{type:{name:"bool"},required:!1,description:"When collapse expands within document flow (that is, expandOverContent is set to false) direction of expansion is determined by container.\nHowever, when we use absolute positioning it always expands right/bottom.\nIf this prop is true, collapse will expand reverse direction (for example in right side bar with expandOverContent set to true).\nNOTE: it only takes effect when expandOverContent and isHorizontal are true."},onEnter:{type:{name:"func"},required:!1,description:"Callback fired before the “entering” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onEntering:{type:{name:"func"},required:!1,description:"Callback fired after the “entering” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onEntered:{type:{name:"func"},required:!1,description:"Callback fired after the “entered” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onOpened:{type:{name:"custom",raw:"deprecated(PropTypes.func, '7.0.0', 'Use \"onEntered\" instead')"},required:!1,description:"Callback fired after the “entered” status is applied\nUsed when 'onEntered' prop is not passed\n@deprecated"},onExit:{type:{name:"func"},required:!1,description:"Callback fired before the “exiting” status is applied."},onExiting:{type:{name:"func"},required:!1,description:"Callback fired after the “exiting” status is applied."},onExited:{type:{name:"func"},required:!1,description:"Callback fired after the “exited” status is applied."},onClosed:{type:{name:"custom",raw:"deprecated(PropTypes.func, '7.0.0', 'Use \"onExited\" instead')"},required:!1,description:"Callback fired after the “exited” status is applied\nUsed when 'onExited' prop is not passed\n@deprecated"},children:{type:{name:"node"},required:!1,description:"Expanding/collapsing element"},className:{type:{name:"string"},required:!1,description:"CSS classname applied to root element"},outerContentWrapperClassName:{type:{name:"string"},required:!1,description:"CSS classname applied to direct Transition child element"},contentWrapperClassName:{type:{name:"string"},required:!1,description:"CSS class applied to element that wraps the content"}}},Collapse.__docgenInfo={componentName:"Collapse",packageName:"@jutro/components",description:"",displayName:"Collapse",methods:[],actualName:"Collapse",props:{isOpen:{type:{name:"bool"},required:!1,description:"If true, component will expand, if false component will collapse"},delay:{type:{name:"union",value:[{name:"shape",value:{show:{name:"number",required:!0},hide:{name:"number",required:!0}}},{name:"number"}]},required:!1,description:"@deprecated Duration of the transition, in milliseconds\nUsed if 'timeout' prop is not passed",defaultValue:{value:"350",computed:!1},deprecationInfo:{version:"7.0.0",mapTo:"timeout"}},timeout:{type:{name:"union",value:[{name:"shape",value:{enter:{name:"number",required:!1},exit:{name:"number",required:!1},appear:{name:"number",required:!1}}},{name:"number"}]},required:!1,description:"Duration of the transition, in milliseconds."},collapsedSize:{type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1,description:"Width/height of the component in collapsed state",defaultValue:{value:"'0px'",computed:!1}},isHorizontal:{type:{name:"bool"},required:!1,description:"If true, transition orientation will be horizontal (width will be transitioned)\nIf false, it will be vertical (height will be transitioned)"},expandOverContent:{type:{name:"bool"},required:!1,description:"If true, absolute positioning will be used and element will expand over page content\nIf false, content will be squeezed"},isReversed:{type:{name:"bool"},required:!1,description:"When collapse expands within document flow (that is, expandOverContent is set to false) direction of expansion is determined by container.\nHowever, when we use absolute positioning it always expands right/bottom.\nIf this prop is true, collapse will expand reverse direction (for example in right side bar with expandOverContent set to true).\nNOTE: it only takes effect when expandOverContent and isHorizontal are true."},onEnter:{type:{name:"func"},required:!1,description:"Callback fired before the “entering” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onEntering:{type:{name:"func"},required:!1,description:"Callback fired after the “entering” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onEntered:{type:{name:"func"},required:!1,description:"Callback fired after the “entered” status is applied.\nAn extra parameter isAppearing is supplied to indicate if the enter stage is occurring on the initial mount"},onOpened:{type:{name:"func"},required:!1,description:"Callback fired after the “entered” status is applied\nUsed when 'onEntered' prop is not passed\n@deprecated",deprecationInfo:{version:"7.0.0",mapTo:"onEntered"}},onExit:{type:{name:"func"},required:!1,description:"Callback fired before the “exiting” status is applied."},onExiting:{type:{name:"func"},required:!1,description:"Callback fired after the “exiting” status is applied."},onExited:{type:{name:"func"},required:!1,description:"Callback fired after the “exited” status is applied."},onClosed:{type:{name:"func"},required:!1,description:"Callback fired after the “exited” status is applied\nUsed when 'onExited' prop is not passed\n@deprecated",deprecationInfo:{version:"7.0.0",mapTo:"onExited"}},children:{type:{name:"node"},required:!1,description:"Expanding/collapsing element"},className:{type:{name:"string"},required:!1,description:"CSS classname applied to root element"},outerContentWrapperClassName:{type:{name:"string"},required:!1,description:"CSS classname applied to direct Transition child element"},contentWrapperClassName:{type:{name:"string"},required:!1,description:"CSS class applied to element that wraps the content"}}};