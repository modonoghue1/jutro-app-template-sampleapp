import _extends from"@babel/runtime-corejs3/helpers/extends";import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _inherits from"@babel/runtime-corejs3/helpers/inherits";import _possibleConstructorReturn from"@babel/runtime-corejs3/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime-corejs3/helpers/getPrototypeOf";function _createSuper(Derived){var hasNativeReflectConstruct=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}import React,{useState,useCallback,useEffect,useMemo,createContext}from"react";import PropTypes from"prop-types";import ReactModal from"react-modal";import noop from"lodash/noop";import{createContextConsumerHOC,logDeprecationMessage}from"@jutro/platform";import{log}from"@jutro/logger";import{EventEmitter}from"eventemitter3";import{useModalPromise}from"./useModalPromise";import{ModalNext}from"./ModalNext";import{AlertModal}from"./AlertModal/AlertModal";import{ConfirmationModal}from"./ConfirmationModal/ConfirmationModal";const methods=["showAlert","showConfirm","showModal"];export let ModalNextEmitter=function(_EventEmitter){_inherits(ModalNextEmitter,EventEmitter);var _super=_createSuper(ModalNextEmitter);function ModalNextEmitter(){var _this;return _classCallCheck(this,ModalNextEmitter),_this=_super.call(this),methods.forEach((method=>{_this[method]=(...args)=>new Promise(((resolve,reject)=>{_this.emit(method,{method:method,args:args,resolve:resolve,reject:reject})}))})),_this}return ModalNextEmitter}();const createNoProviderWarning=methodName=>()=>{const message=`You should not use "${methodName}()" outside a <ModalNextProvider>`;return log.error(message),Promise.reject(new Error(message))};function getModalRoot(){const modalRoot=document.getElementById("modalRoot");if(modalRoot)return modalRoot;const deprecatedModalRoot=document.getElementById("confirmation");return deprecatedModalRoot?(log.warning('ModalNextProvider: Found deprecated <div id="confirmation">. Please use <div id="modalRoot"> instead.'),deprecatedModalRoot):(log.warning('ModalNextProvider: Unable to find <div id="modalRoot">. Please add at the bottom of the <body> in your index.html.'),document.body)}export const ModalNextContext=createContext({showAlert:props=>ModalNextProvider.showAlert(props),showConfirm:props=>ModalNextProvider.showConfirm(props),showModal:component=>ModalNextProvider.showModal(component)});export const withModalContext=Component=>createContextConsumerHOC({component:Component,context:ModalNextContext,displayName:`withModalContext(${Component.displayName||Component.name})`,mapContextToProps:(props,modalContext)=>({modalContext:modalContext})});export const ModalNextProvider=({emitter:emitter,children:children,appElementId:appElementId})=>{const _useModalPromise=useModalPromise(),_useModalPromise2=_slicedToArray(_useModalPromise,4),isOpenAlert=_useModalPromise2[0],showAlertPromise=_useModalPromise2[1],resolveAlert=_useModalPromise2[2],rejectAlert=_useModalPromise2[3],_useState=useState({}),_useState2=_slicedToArray(_useState,2),alertRender=_useState2[0].alertRender,setAlertState=_useState2[1],_useModalPromise3=useModalPromise(),_useModalPromise4=_slicedToArray(_useModalPromise3,4),isOpenModal=_useModalPromise4[0],showModalPromise=_useModalPromise4[1],resolveModal=_useModalPromise4[2],rejectModal=_useModalPromise4[3],_useState3=useState({}),_useState4=_slicedToArray(_useState3,2),modalRender=_useState4[0].modalRender,setModalState=_useState4[1];ModalNext.handleAfterClose=useCallback((()=>{isOpenAlert||setAlertState({}),isOpenModal||setModalState({})}),[isOpenAlert,isOpenModal,setAlertState,setModalState]);const context=useMemo((()=>({showAlert:({status:status,icon:icon,title:title,message:message,confirmButtonText:confirmButtonText})=>(setAlertState({alertRender:alertProps=>React.createElement(AlertModal,_extends({},alertProps,{parentSelector:getModalRoot,title:title,message:message,status:status,icon:icon,confirmButtonText:confirmButtonText}))}),showAlertPromise()),showConfirm:({status:status,icon:icon,title:title,message:message,confirmButtonText:confirmButtonText,cancelButtonText:cancelButtonText})=>(setAlertState({alertRender:alertProps=>React.createElement(ConfirmationModal,_extends({},alertProps,{parentSelector:getModalRoot,title:title,message:message,status:status,icon:icon,confirmButtonText:confirmButtonText,cancelButtonText:cancelButtonText}))}),showAlertPromise()),showModal:component=>(setModalState({modalRender:modalProps=>React.cloneElement(component,modalProps)}),showModalPromise())})),[showAlertPromise,setAlertState,showModalPromise,setModalState]);return useEffect((()=>{document.getElementById(appElementId)&&ReactModal.setAppElement(`#${appElementId}`)}),[]),ModalNextProvider.modalNextContext=context,useEffect((()=>{if(!emitter)return noop;const methodListener=({method:method,args:args,resolve:resolve,reject:reject})=>{context[method](...args).then(resolve).catch(reject)};return methods.forEach((method=>emitter.on(method,methodListener,context))),()=>{methods.forEach((method=>emitter.removeListener(method,methodListener,context)))}}),[emitter,context]),React.createElement(ModalNextContext.Provider,{value:context},children,alertRender&&alertRender({isOpen:isOpenAlert,onResolve:resolveAlert,onReject:rejectAlert}),modalRender&&modalRender({isOpen:isOpenModal,onResolve:resolveModal,onReject:rejectModal}))};ModalNextProvider.propTypes={appElementId:PropTypes.string,children:PropTypes.node,emitter:PropTypes.instanceOf(ModalNextEmitter)},ModalNextProvider.defaultProps={appElementId:"root"},ModalNextProvider.modalNextContext={showAlert:createNoProviderWarning("showAlert"),showConfirm:createNoProviderWarning("showConfirm"),showModal:createNoProviderWarning("showModal")},ModalNextProvider.showAlert=props=>{var _ModalNextProvider$mo;return logDeprecationMessage("ModalNextProvider.showAlert(props)","const {showAlert} = useContext(ModalNextContext); showAlert(props)","Accessing ModalNextProvider via its static methods has been deprecated and will be removed in 7.0.0. Please use ModalNextContext instead to get references to the modal functions in a React context and pass those functions forward","7.0.0"),null===(_ModalNextProvider$mo=ModalNextProvider.modalNextContext)||void 0===_ModalNextProvider$mo?void 0:_ModalNextProvider$mo.showAlert(props)},ModalNextProvider.showConfirm=props=>{var _ModalNextProvider$mo2;return logDeprecationMessage("ModalNextProvider.showConfirm(props)","const {showConfirm} = useContext(ModalNextContext); showConfirm(props)","Accessing ModalNextProvider via its static methods has been deprecated and will be removed in 7.0.0. Please use ModalNextContext instead to get references to the modal functions in a React context and pass those functions forward","7.0.0"),null===(_ModalNextProvider$mo2=ModalNextProvider.modalNextContext)||void 0===_ModalNextProvider$mo2?void 0:_ModalNextProvider$mo2.showConfirm(props)},ModalNextProvider.showModal=component=>{var _ModalNextProvider$mo3;return logDeprecationMessage("ModalNextProvider.showModal(component)","const {showModal} = useContext(ModalNextContext); showModal(component)","Accessing ModalNextProvider via its static methods has been deprecated and will be removed in 7.0.0. Please use ModalNextContext instead to get references to the modal functions in a React context and pass those functions forward","7.0.0"),null===(_ModalNextProvider$mo3=ModalNextProvider.modalNextContext)||void 0===_ModalNextProvider$mo3?void 0:_ModalNextProvider$mo3.showModal(component)},ModalNextProvider.__docgenInfo={description:"@type {React.FC<ModalNextProviderProps> & ModalFunctions}",methods:[{name:"showAlert",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"showConfirm",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"showModal",docblock:null,modifiers:["static"],params:[{name:"component",optional:!1,type:null}],returns:null}],displayName:"ModalNextProvider",props:{appElementId:{defaultValue:{value:"'root'",computed:!1},type:{name:"string"},required:!1,description:'ID of the root element of your app, used to hide the app from accessibility tools on modal popup.\nThe root element must not be a parent of the modal root (from getModalRoot()), or else the content of the modal will be hidden as well.\nDefaults to `"root"`'},children:{type:{name:"node"},required:!1,description:""},emitter:{type:{name:"instanceOf",value:"ModalNextEmitter"},required:!1,description:"Instance of ModalNextEmitter passed down to ModalNextProvider for accessing modal functions from outside the scope of the ModalNextProvider"}}},ModalNextProvider.__docgenInfo={componentName:"ModalNextProvider",packageName:"@jutro/components",description:"",displayName:"ModalNextProvider",methods:[{name:"showAlert",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"showConfirm",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"showModal",docblock:null,modifiers:["static"],params:[{name:"component",optional:!1,type:null}],returns:null}],actualName:"ModalNextProvider",props:{appElementId:{type:{name:"string"},required:!1,description:'ID of the root element of your app, used to hide the app from accessibility tools on modal popup.\nThe root element must not be a parent of the modal root (from getModalRoot()), or else the content of the modal will be hidden as well.\nDefaults to `"root"`',defaultValue:{value:"'root'",computed:!1}},children:{type:{name:"node"},required:!1,description:""},emitter:{type:{name:"instanceOf",value:"ModalNextEmitter"},required:!1,description:"Instance of ModalNextEmitter passed down to ModalNextProvider for accessing modal functions from outside the scope of the ModalNextProvider"}}};