import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import{useState,useCallback,useRef}from"react";export const useModalPromise=()=>{const _useState=useState(!1),_useState2=_slicedToArray(_useState,2),isOpened=_useState2[0],setOpened=_useState2[1],promise=useRef({}),show=useCallback((async()=>{setOpened(!0);try{return await new Promise(((resolve,reject)=>{Object.assign(promise.current,{resolve:resolve,reject:reject})}))}finally{setOpened(!1)}}),[]);return[isOpened,show,useCallback((result=>promise.current.resolve(result)),[promise]),useCallback((error=>promise.current.reject(error)),[promise])]};