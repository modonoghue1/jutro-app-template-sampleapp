import _extends from"@babel/runtime-corejs3/helpers/extends";import React from"react";import PropTypes from"prop-types";import{intlMessageShape,linkShape}from"@jutro/prop-types";import{PopoverContainer}from"../PopoverContainer/PopoverContainer";import styles from"./NotificationAction.module.css";import{Popover,availableAlignments}from"../Popover/Popover";const notificationActionPropTypes={id:PropTypes.string.isRequired,title:intlMessageShape,headerLink:linkShape,footerLink:linkShape,className:PropTypes.string,children:PropTypes.node,renderTrigger:PropTypes.func.isRequired,align:PropTypes.oneOf(availableAlignments),isFlipEnabled:PropTypes.bool,onClosed:PropTypes.func};export const NotificationAction=({id:id,renderTrigger:renderTrigger,align:align,isFlipEnabled:isFlipEnabled,onClosed:onClosed,...popoverProps})=>React.createElement(Popover,{id:id,renderTrigger:renderTrigger,align:align,className:styles.popper,isFlipEnabled:isFlipEnabled,onClosed:onClosed},React.createElement(PopoverContainer,_extends({className:styles.popoverContainer,internalClassNames:{title:styles.popoverTitle,headerLink:styles.popoverHeaderLink,body:styles.popoverBody,footerLink:styles.popoverFooterLink}},popoverProps)));NotificationAction.propTypes=notificationActionPropTypes,NotificationAction.defaultProps={...Popover.defaultProps},NotificationAction.__docgenInfo={description:"NotificationAction\n@type {React.FC<PropTypes.InferProps<typeof notificationActionPropTypes>>}\n\n@metadataType action",methods:[],displayName:"NotificationAction",props:{id:{type:{name:"string"},required:!0,description:"Used to identify this component."},title:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"Notification popover title"},headerLink:{type:{name:"custom",raw:"linkShape"},required:!1,description:"Description for header link"},footerLink:{type:{name:"custom",raw:"linkShape"},required:!1,description:"Description for footer link"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},children:{type:{name:"node"},required:!1,description:"Notification popover content"},renderTrigger:{type:{name:"func"},required:!0,description:"Function to render trigger element"},align:{type:{name:"enum",computed:!0,value:"availableAlignments"},required:!1,description:"Popover alignment (relative to trigger element)"},isFlipEnabled:{type:{name:"bool"},required:!1,description:"Should popover flip when it is about to overflow the visible area"},onClosed:{type:{name:"func"},required:!1,description:"Function called when the notification disappear"}}},NotificationAction.__docgenInfo={componentName:"NotificationAction",packageName:"@jutro/components",description:"NotificationAction",displayName:"NotificationAction",methods:[],actualName:"NotificationAction",metadataType:"action",props:{id:{type:{name:"string"},required:!0,description:"Used to identify this component."},title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"Notification popover title"},headerLink:{type:{name:"shape",value:{label:{name:"custom",raw:"intlMessageShape.isRequired",required:!0},onClick:{name:"func",required:!1},href:{name:"custom",raw:"intlMessageShape",required:!1}}},required:!1,description:"Description for header link"},footerLink:{type:{name:"shape",value:{label:{name:"custom",raw:"intlMessageShape.isRequired",required:!0},onClick:{name:"func",required:!1},href:{name:"custom",raw:"intlMessageShape",required:!1}}},required:!1,description:"Description for footer link"},className:{type:{name:"string"},required:!1,description:"CSS class name for this component"},children:{type:{name:"node"},required:!1,description:"Notification popover content"},renderTrigger:{type:{name:"func"},required:!0,description:"Function to render trigger element"},align:{type:{name:"enum",computed:!0,value:"availableAlignments"},required:!1,description:"Popover alignment (relative to trigger element)"},isFlipEnabled:{type:{name:"bool"},required:!1,description:"Should popover flip when it is about to overflow the visible area"},onClosed:{type:{name:"func"},required:!1,description:"Function called when the notification disappear"}}};