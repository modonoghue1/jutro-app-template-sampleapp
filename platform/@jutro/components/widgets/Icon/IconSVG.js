import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{memo,useRef,useImperativeHandle}from"react";import cx from"classnames";import{gwIconsIconPrefix,gwCustomIconsIconPrefix}from"../../iconUtils";import styles from"./Icon.module.css";const IconInternal=React.forwardRef((({id:id,icon:icon,className:className,color:color,svgProps:svgProps},ref)=>{const iconRef=useRef(null);if(useImperativeHandle(ref,(()=>iconRef.current)),!icon)return null;const iconName=icon.replace(gwIconsIconPrefix,"").replace(gwCustomIconsIconPrefix,"");return React.createElement("svg",_extends({id:id===icon?`${id}-id`:id,ref:iconRef,className:cx(styles.svgIcon,className),viewBox:"0 0 1024 1024",role:"img","aria-label":`${iconName} icon`},svgProps),React.createElement("use",{fill:color||void 0,href:`#${icon}`}))}));IconInternal.displayName="IconSVG";export const IconSVG=memo(IconInternal);IconSVG.displayName="IconSVG",IconInternal.__docgenInfo={description:"",methods:[],displayName:"IconSVG",props:{id:{required:!1,tsType:{name:"string"},description:"Id of the icon"},className:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"CSS class name for this component"},icon:{required:!0,tsType:{name:"string"},description:"Icon name (gw-*) to be used"},color:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Icon color to be used"},svgProps:{required:!1,tsType:{name:"ReactSVGProps",raw:"React.SVGProps<SVGSVGElement>",elements:[{name:"SVGSVGElement"}]},description:"Set of custom props for the svg"}}},IconSVG.__docgenInfo={componentName:"IconSVG",packageName:"@jutro/components",description:"",displayName:"IconSVG",methods:[],actualName:"IconSVG"};