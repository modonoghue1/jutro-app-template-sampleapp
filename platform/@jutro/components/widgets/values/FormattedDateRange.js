import _extends from"@babel/runtime-corejs3/helpers/extends";import _objectWithoutProperties from"@babel/runtime-corejs3/helpers/objectWithoutProperties";import React from"react";import PropTypes from"prop-types";import isNil from"lodash/isNil";import{dateFormatShape,dateValueShape,intlMessageShape}from"@jutro/prop-types";import{FormattedDate,formatDate}from"./FormattedDate";import{FieldComponent}from"../inputs/FieldComponent/FieldComponent";const formattedDateRangePropTypes={startDate:PropTypes.instanceOf(Date),endDate:PropTypes.instanceOf(Date),startValue:dateValueShape,endValue:dateValueShape,placeholder:intlMessageShape,format:dateFormatShape,separator:PropTypes.string,showTime:PropTypes.bool};export const FormattedDateRange=props=>{const startDate=props.startDate,startValue=props.startValue,separator=props.separator,endDate=props.endDate,endValue=props.endValue,other=_objectWithoutProperties(props,["startDate","startValue","separator","endDate","endValue"]);return React.createElement(React.Fragment,null,React.createElement(FormattedDate,_extends({date:startDate,value:startValue},other)),separator,React.createElement(FormattedDate,_extends({date:endDate,value:endValue},other)))};FormattedDateRange.propTypes=formattedDateRangePropTypes,FormattedDateRange.defaultProps={format:"long",placeholder:FieldComponent.defaultROEmptyValue,separator:" - ",showTime:!1};export function formatDateRange(intl,props,dateRangeObject){const _ref=isNil(dateRangeObject)?{}:dateRangeObject,startDate=_ref.startDate,endDate=_ref.endDate,_ref$separator=_ref.separator,separator=void 0===_ref$separator?FormattedDateRange.defaultProps.separator:_ref$separator,startDateProp=props.startDate,endDateProp=props.endDate,startValue=props.startValue,endValue=props.endValue,separatorProp=props.separator,otherProps=_objectWithoutProperties(props,["startDate","endDate","startValue","endValue","separator"]);return`${formatDate(intl,{...otherProps,date:startDateProp,value:startValue},startDate)}${separator||separatorProp}${formatDate(intl,{...otherProps,date:endDateProp,value:endValue},endDate)}`}FormattedDateRange.__docgenInfo={description:"The `FormattedDateRange` component is used to render `Date` values\nlocalized and in specific preset formats\n\n@type {React.FC<PropTypes.InferProps<typeof formattedDateRangePropTypes>>}\n\n@metadataType element",methods:[],displayName:"FormattedDateRange",props:{format:{defaultValue:{value:"'long'",computed:!1},type:{name:"custom",raw:"dateFormatShape"},required:!1,description:"The date format: 'short' or 'long'"},placeholder:{defaultValue:{value:"FieldComponent.defaultROEmptyValue",computed:!0},type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"The string to display if start or end 'date' is undefined/null"},separator:{defaultValue:{value:"' - '",computed:!1},type:{name:"string"},required:!1,description:"The range separator (between start and end date)"},showTime:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"If true, displays the time with the date"},startDate:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The start date to display"},endDate:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The end date to display"},startValue:{type:{name:"custom",raw:"dateValueShape"},required:!1,description:"Start value to display in the format of string|number|object"},endValue:{type:{name:"custom",raw:"dateValueShape"},required:!1,description:"End value to display in the format of string|number|object"}}},FormattedDateRange.__docgenInfo={componentName:"FormattedDateRange",packageName:"@jutro/components",description:"The `FormattedDateRange` component is used to render `Date` values\nlocalized and in specific preset formats",displayName:"FormattedDateRange",methods:[],actualName:"FormattedDateRange",metadataType:"element",props:{startDate:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The start date to display"},endDate:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The end date to display"},startValue:{type:{name:"union",value:[{name:"number"},{name:"string"},{name:"instanceOf",value:"Date"},{name:"shape",value:{year:{name:"number",required:!0},month:{name:"number",required:!0},day:{name:"number",required:!0},hour:{name:"number",required:!1},minute:{name:"number",required:!1}}}]},required:!1,description:"Start value to display in the format of string|number|object"},endValue:{type:{name:"union",value:[{name:"number"},{name:"string"},{name:"instanceOf",value:"Date"},{name:"shape",value:{year:{name:"number",required:!0},month:{name:"number",required:!0},day:{name:"number",required:!0},hour:{name:"number",required:!1},minute:{name:"number",required:!1}}}]},required:!1,description:"End value to display in the format of string|number|object"},placeholder:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"The string to display if start or end 'date' is undefined/null",defaultValue:{value:"FieldComponent.defaultROEmptyValue",computed:!0}},format:{type:{name:"custom",raw:"dateFormatShape"},required:!1,description:"The date format: 'short' or 'long'",defaultValue:{value:"'long'",computed:!1}},separator:{type:{name:"string"},required:!1,description:"The range separator (between start and end date)",defaultValue:{value:"' - '",computed:!1}},showTime:{type:{name:"bool"},required:!1,description:"If true, displays the time with the date",defaultValue:{value:"false",computed:!1}}}};