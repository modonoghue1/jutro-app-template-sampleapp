import _extends from"@babel/runtime-corejs3/helpers/extends";import React,{useContext}from"react";import PropTypes from"prop-types";import isString from"lodash/isString";import isNumber from"lodash/isNumber";import isPlainObject from"lodash/isPlainObject";import{FormattedDate as IntlFormattedDate,FormattedTime as IntlFormattedTime}from"react-intl";import{isDate}from"util";import{getConfigValue}from"@jutro/config";import{TranslatorContext,LocaleContext}from"@jutro/locale";import{dateValueShape,intlMessageShape,dateFormatMap,timeFormat,dateFormatShape,shortDateFormat}from"@jutro/prop-types";import{FieldComponent}from"../inputs/FieldComponent/FieldComponent";function getFormattedDateProps(props,date){const _FormattedDate$defaul={...FormattedDate.defaultProps,...props},propDate=_FormattedDate$defaul.date,value=_FormattedDate$defaul.value,placeholder=_FormattedDate$defaul.placeholder,format=_FormattedDate$defaul.format,showTime=_FormattedDate$defaul.showTime,onlyTime=_FormattedDate$defaul.onlyTime,dateObj=function(date,value,showTime,onlyTime){let dateValue=date||value;if(dateValue){if(isString(dateValue))dateValue=new Date(dateValue);else if(isNumber(dateValue))dateValue=new Date(dateValue);else if(isPlainObject(dateValue)&&!isDate(dateValue)){const _dateValue=dateValue,year=_dateValue.year,month=_dateValue.month,day=_dateValue.day,_dateValue$hour=_dateValue.hour,hour=void 0===_dateValue$hour?0:_dateValue$hour,_dateValue$minute=_dateValue.minute,minute=void 0===_dateValue$minute?0:_dateValue$minute;(year||month||day)&&(dateValue=new Date(Date.UTC(year,month,day,hour,minute)))}else if(!isDate(dateValue))return;if(!showTime&&!onlyTime){const timestamp=dateValue.getTime()+6e4*dateValue.getTimezoneOffset();dateValue=new Date(timestamp)}return dateValue}}(date||propDate,value,showTime,onlyTime);if(!dateObj)return{placeholder:null!=placeholder?placeholder:FieldComponent.defaultROEmptyValue};return{dateObj:dateObj,dateProps:function(format){return dateFormatMap[format]||shortDateFormat}(format),timeProps:showTime&&timeFormat,showTime:showTime,onlyTime:onlyTime}}export const formattedDatePropTypes={date:PropTypes.instanceOf(Date),value:dateValueShape,placeholder:intlMessageShape,format:dateFormatShape,showTime:PropTypes.bool,onlyTime:PropTypes.bool};export const FormattedDate=props=>{const _getFormattedDateProp=getFormattedDateProps(props),placeholder=_getFormattedDateProp.placeholder,dateObj=_getFormattedDateProp.dateObj,dateProps=_getFormattedDateProp.dateProps,timeProps=_getFormattedDateProp.timeProps,showTime=_getFormattedDateProp.showTime,onlyTime=_getFormattedDateProp.onlyTime,translator=useContext(TranslatorContext),defaultTimeZone=useContext(LocaleContext).defaultTimeZone;if(placeholder)return translator(placeholder);if(onlyTime)return React.createElement(IntlFormattedTime,_extends({value:dateObj},timeProps));const timeZoneProps=defaultTimeZone&&showTime?{timeZone:defaultTimeZone}:{};return React.createElement(IntlFormattedDate,_extends({value:dateObj},dateProps,timeProps,timeZoneProps))};FormattedDate.propTypes=formattedDatePropTypes,FormattedDate.defaultProps={format:"long",placeholder:FieldComponent.defaultROEmptyValue,showTime:!1,onlyTime:!1};export function formatDate(intl,props,date){const _getFormattedDateProp2=getFormattedDateProps(props,date),placeholder=_getFormattedDateProp2.placeholder,dateObj=_getFormattedDateProp2.dateObj,dateProps=_getFormattedDateProp2.dateProps,timeProps=_getFormattedDateProp2.timeProps,showTime=_getFormattedDateProp2.showTime;if(placeholder)return placeholder;const defaultTimeZone=getConfigValue("localeSettings.defaultTimeZone"),timeZoneProps=defaultTimeZone&&showTime?{timeZone:defaultTimeZone}:{};return intl.formatDate(dateObj,{...dateProps,...timeProps,...timeZoneProps})}FormattedDate.__docgenInfo={description:"The `FormattedDate` component is used to render `Date` values\nlocalized and in specific preset formats, e.g. short or long.\n\n@type {React.FC<PropTypes.InferProps<typeof formattedDatePropTypes>>}\n\n@metadataType element",methods:[],displayName:"FormattedDate",props:{format:{defaultValue:{value:"'long'",computed:!1},type:{name:"custom",raw:"dateFormatShape"},required:!1,description:"The date format: 'vshort', 'short', 'long', 'abbreviated', 'full'"},placeholder:{defaultValue:{value:"FieldComponent.defaultROEmptyValue",computed:!0},type:{name:"custom",raw:"intlMessageShape"},required:!1,description:"The string to display if 'date' is undefined/null"},showTime:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"If true, displays the time with the date"},onlyTime:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:"If true, displays only time"},date:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The date to display"},value:{type:{name:"custom",raw:"dateValueShape"},required:!1,description:"Value to display in the format of string|number|object"}}},FormattedDate.__docgenInfo={componentName:"FormattedDate",packageName:"@jutro/components",description:"The `FormattedDate` component is used to render `Date` values\nlocalized and in specific preset formats, e.g. short or long.",displayName:"FormattedDate",methods:[],actualName:"FormattedDate",metadataType:"element",props:{date:{type:{name:"instanceOf",value:"Date"},required:!1,description:"The date to display"},value:{type:{name:"union",value:[{name:"number"},{name:"string"},{name:"instanceOf",value:"Date"},{name:"shape",value:{year:{name:"number",required:!0},month:{name:"number",required:!0},day:{name:"number",required:!0},hour:{name:"number",required:!1},minute:{name:"number",required:!1}}}]},required:!1,description:"Value to display in the format of string|number|object"},placeholder:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:"The string to display if 'date' is undefined/null",defaultValue:{value:"FieldComponent.defaultROEmptyValue",computed:!0}},format:{type:{name:"custom",raw:"dateFormatShape"},required:!1,description:"The date format: 'vshort', 'short', 'long', 'abbreviated', 'full'",defaultValue:{value:"'long'",computed:!1}},showTime:{type:{name:"bool"},required:!1,description:"If true, displays the time with the date",defaultValue:{value:"false",computed:!1}},onlyTime:{type:{name:"bool"},required:!1,description:"If true, displays only time",defaultValue:{value:"false",computed:!1}}}};