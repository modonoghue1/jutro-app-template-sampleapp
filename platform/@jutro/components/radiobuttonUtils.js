import{isEmptyValue}from"@jutro/data";import{getOptionCode}from"./widgets/inputs/availableValues";export const SPACE_BAR=" ";export const makeHandleRadioButtonKeyDown=focusTrigger=>(evt,props,handleAvailableValuesValueChange)=>{const model=props.model,path=props.path,value=props.value,availableValues=props.availableValues,selectedElementIndex=availableValues.findIndex((el=>{const selectedValue=value?getOptionCode(value)||value.toString():void 0;return!isEmptyValue(value)&&getOptionCode(el)===selectedValue})),handleMove=eventMap[evt.key];handleMove&&evt.preventDefault();const targetIndex=handleMove?handleMove(selectedElementIndex,availableValues):-1;if(targetIndex>=0){const optionCode=getOptionCode(availableValues[targetIndex]);handleAvailableValuesValueChange(optionCode,model||path),null==focusTrigger||focusTrigger(evt.currentTarget,optionCode)}};const handleMoveDown=(selectedElementIndex,availableValues)=>(selectedElementIndex+1)%availableValues.length,handleMoveUp=(selectedElementIndex,availableValues)=>0===selectedElementIndex?availableValues.length-1:(selectedElementIndex-1)%availableValues.length,eventMap={SPACE_BAR:()=>-1,ArrowDown:handleMoveDown,ArrowRight:handleMoveDown,ArrowUp:handleMoveUp,ArrowLeft:handleMoveUp};export const getTabIndex=index=>0===index?0:-1;