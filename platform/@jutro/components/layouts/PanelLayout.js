import React from"react";import PropTypes from"prop-types";import{Layout,layoutShape}from"./Layout";export const PanelLayout=({id:id,children:children,className:className,layout:layout})=>{const _ref=layout||{},desktop=_ref.desktop,tablet=_ref.tablet,phoneWide=_ref.phoneWide,phone=_ref.phone;return React.createElement(Layout,{id:id,layout:{desktop:{columns:["1fr"],repeat:"8",gap:"large",colStart:"2",colSpan:"6",...desktop},tablet:{repeat:"6",gap:"medium",colStart:"2",colSpan:"4",...tablet},phoneWide:{repeat:"6",gap:"medium",colStart:"2",colSpan:"4",...phoneWide},phone:{repeat:"4",gap:"medium",colStart:"1",colSpan:"4",...phone}},className:className},children)};PanelLayout.propTypes={id:PropTypes.string,children:PropTypes.node,className:PropTypes.string,layout:PropTypes.shape({desktop:layoutShape,tablet:layoutShape,phoneWide:layoutShape,phone:layoutShape})},PanelLayout.__docgenInfo={description:"",methods:[],displayName:"PanelLayout",props:{id:{type:{name:"string"},required:!1,description:"Used to identify the component"},children:{type:{name:"node"},required:!1,description:"children; preferably 'GridItem'; works with any child"},className:{type:{name:"string"},required:!1,description:"Optional css class(es) to add to the grid tag"},layout:{type:{name:"shape",value:{desktop:{name:"custom",raw:"layoutShape",description:"Optional props to override default layout",required:!1},tablet:{name:"custom",raw:"layoutShape",description:"Optional props to override layout on tablet",required:!1},phoneWide:{name:"custom",raw:"layoutShape",description:"Optional props to override layout on phoneWide",required:!1},phone:{name:"custom",raw:"layoutShape",description:"Optional props to override layout on phone",required:!1}}},required:!1,description:""}}},PanelLayout.__docgenInfo={componentName:"PanelLayout",packageName:"@jutro/components",description:"",displayName:"PanelLayout",methods:[],actualName:"PanelLayout",props:{id:{type:{name:"string"},required:!1,description:"Used to identify the component"},children:{type:{name:"node"},required:!1,description:"children; preferably 'GridItem'; works with any child"},className:{type:{name:"string"},required:!1,description:"Optional css class(es) to add to the grid tag"},layout:{type:{name:"shape",value:{desktop:{name:"shape",description:"Optional props to override default layout",required:!1,value:{id:{name:"string",description:"Used to identify the component",required:!1},repeat:{name:"union",value:[{name:"enum",value:[{value:"'auto-fit'",computed:!1},{value:"'auto-fill'",computed:!1}]},{name:"number"},{name:"string"}],description:"repeat columns: 'auto-fit' or 'auto-fill' or number",required:!1},gap:{name:"enum",computed:!0,value:"Object.keys(gaps)",description:"gap between rows and columns: 'none', 'small', 'medium', 'large'",required:!1},columns:{name:"array",description:"define explicit columns",required:!1},colSpan:{name:"union",value:[{name:"number"},{name:"string"}],required:!1},colStart:{name:"union",value:[{name:"number"},{name:"string"}],required:!1}}},tablet:{name:"shape",description:"Optional props to override layout on tablet",required:!1,value:{id:{name:"string",description:"Used to identify the component",required:!1},repeat:{name:"union",value:[{name:"enum",value:[{value:"'auto-fit'",computed:!1},{value:"'auto-fill'",computed:!1}]},{name:"number"},{name:"string"}],description:"repeat columns: 'auto-fit' or 'auto-fill' or number",required:!1},gap:{name:"enum",computed:!0,value:"Object.keys(gaps)",description:"gap between rows and columns: 'none', 'small', 'medium', 'large'",required:!1},columns:{name:"array",description:"define explicit columns",required:!1},colSpan:{name:"union",value:[{name:"number"},{name:"string"}],required:!1},colStart:{name:"union",value:[{name:"number"},{name:"string"}],required:!1}}},phoneWide:{name:"shape",description:"Optional props to override layout on phoneWide",required:!1,value:{id:{name:"string",description:"Used to identify the component",required:!1},repeat:{name:"union",value:[{name:"enum",value:[{value:"'auto-fit'",computed:!1},{value:"'auto-fill'",computed:!1}]},{name:"number"},{name:"string"}],description:"repeat columns: 'auto-fit' or 'auto-fill' or number",required:!1},gap:{name:"enum",computed:!0,value:"Object.keys(gaps)",description:"gap between rows and columns: 'none', 'small', 'medium', 'large'",required:!1},columns:{name:"array",description:"define explicit columns",required:!1},colSpan:{name:"union",value:[{name:"number"},{name:"string"}],required:!1},colStart:{name:"union",value:[{name:"number"},{name:"string"}],required:!1}}},phone:{name:"shape",description:"Optional props to override layout on phone",required:!1,value:{id:{name:"string",description:"Used to identify the component",required:!1},repeat:{name:"union",value:[{name:"enum",value:[{value:"'auto-fit'",computed:!1},{value:"'auto-fill'",computed:!1}]},{name:"number"},{name:"string"}],description:"repeat columns: 'auto-fit' or 'auto-fill' or number",required:!1},gap:{name:"enum",computed:!0,value:"Object.keys(gaps)",description:"gap between rows and columns: 'none', 'small', 'medium', 'large'",required:!1},columns:{name:"array",description:"define explicit columns",required:!1},colSpan:{name:"union",value:[{name:"number"},{name:"string"}],required:!1},colStart:{name:"union",value:[{name:"number"},{name:"string"}],required:!1}}}}},required:!1,description:""}}};