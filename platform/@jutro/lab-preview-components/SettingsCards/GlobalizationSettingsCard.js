import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useCallback,useRef,useState,useContext}from"react";import set from"lodash/fp/set";import omit from"lodash/fp/omit";import pick from"lodash/fp/pick";import PropTypes from"prop-types";import{GlobalizationChooser}from"@jutro/components";import{intlMessageShape}from"@jutro/prop-types";import{LanguageContext,LocaleContext,LocaleService}from"@jutro/locale";import{messages}from"./GlobalizationSettingsCard.messages";import uiMetadata from"./GlobalizationSettingsCard.metadata.json";import{SettingsCard}from"./SettingsCard";const pickedValuesProps=["languageValue","localeValue"];export const GlobalizationSettingsCard=({id:id,title:title,onLanguageChange:onLanguageChange,onLocaleChange:onLocaleChange,onSave:onSave,skipLocalStoragePersistence:skipLocalStoragePersistence=!1,languageValue:languageValue=LocaleService.getCurrentLanguage(),localeValue:localeValue=LocaleService.getCurrentLocale(),...gcProps})=>{const _useState=useState({languageValue:languageValue,localeValue:localeValue}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1],localeContext=useContext(LocaleContext),languageContext=useContext(LanguageContext),ref=useRef({...data}),formProps={uiProps:uiMetadata.GCSettingCard,callbackMap:{onLanguageValueChange:lang=>{setData(set("languageValue",lang,data)),null==onLanguageChange||onLanguageChange(lang)},onLocaleValueChange:locale=>{setData(set("localeValue",locale,data)),null==onLocaleChange||onLocaleChange(locale)}},overrideProps:{MetadataGlobalizationChooser:{...gcProps,languageValue:data.languageValue,localeValue:data.localeValue}}},updateLocale=useCallback((newLocale=>{LocaleService.setCurrentLocale(newLocale,skipLocalStoragePersistence),null!=localeContext&&localeContext.localeOnChangeCallback&&localeContext.localeOnChangeCallback(newLocale)}),[localeContext,skipLocalStoragePersistence]),updateLanguage=useCallback((newLanguage=>{LocaleService.setCurrentLanguage(newLanguage,skipLocalStoragePersistence),null!=languageContext&&languageContext.languageOnChangeCallback&&languageContext.languageOnChangeCallback(newLanguage)}),[languageContext,skipLocalStoragePersistence]),onSaveCallback=useCallback((()=>{LocaleService.getCurrentLocale()!==data.localeValue&&updateLocale(data.localeValue),LocaleService.getCurrentLanguage()!==data.languageValue&&updateLanguage(data.languageValue),null==onSave||onSave(data),ref.current={...data}}),[updateLocale,updateLanguage,data,onSave]),onCancelCallback=useCallback((()=>{setData({...data,...ref.current})}),[data]);return React.createElement(SettingsCard,{id:id,title:title||messages.globSettingsTitle,formProps:formProps,onSaveClick:onSaveCallback,onCancelClick:onCancelCallback})};export const globalizationSettingsProps={...omit(["onLocaleValueChange","onLanguageValueChange","storybookMode","style","innerStyle"],GlobalizationChooser.propTypes),...pick(pickedValuesProps,GlobalizationChooser.propTypes),id:PropTypes.string.isRequired,title:intlMessageShape,onLocaleChange:PropTypes.func,onLanguageChange:PropTypes.func,onSave:PropTypes.func,skipLocalStoragePersistence:PropTypes.bool};GlobalizationSettingsCard.propTypes=globalizationSettingsProps,GlobalizationSettingsCard.displayName="GlobalizationSettingsCard",GlobalizationSettingsCard.__docgenInfo={description:"@metadataType container",methods:[],displayName:"GlobalizationSettingsCard",props:{skipLocalStoragePersistence:{defaultValue:{value:"false",computed:!1},type:{name:"bool"},required:!1,description:""},languageValue:{defaultValue:{value:"LocaleService.getCurrentLanguage()",computed:!0},required:!1},localeValue:{defaultValue:{value:"LocaleService.getCurrentLocale()",computed:!0},required:!1},id:{type:{name:"string"},required:!0,description:""},title:{type:{name:"custom",raw:"intlMessageShape"},required:!1,description:""},onLocaleChange:{type:{name:"func"},required:!1,description:""},onLanguageChange:{type:{name:"func"},required:!1,description:""},onSave:{type:{name:"func"},required:!1,description:""}},composes:["lodash/fp"]},GlobalizationSettingsCard.__docgenInfo={componentName:"GlobalizationSettingsCard",packageName:"@jutro/lab-preview-components",description:"",displayName:"GlobalizationSettingsCard",methods:[],actualName:"GlobalizationSettingsCard",metadataType:"container",props:{id:{type:{name:"string"},required:!0,description:""},title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!1,description:""},onLocaleChange:{type:{name:"func"},required:!1,description:""},onLanguageChange:{type:{name:"func"},required:!1,description:""},onSave:{type:{name:"func"},required:!1,description:""},skipLocalStoragePersistence:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1}},languageValue:{defaultValue:{value:"LocaleService.getCurrentLanguage()",computed:!0},required:!1},localeValue:{defaultValue:{value:"LocaleService.getCurrentLocale()",computed:!0},required:!1}},composes:["lodash/fp"]};