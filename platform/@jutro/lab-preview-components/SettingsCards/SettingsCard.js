import _extends from"@babel/runtime-corejs3/helpers/extends";import _slicedToArray from"@babel/runtime-corejs3/helpers/slicedToArray";import React,{useState,useContext,useCallback}from"react";import PropTypes from"prop-types";import cx from"classnames";import merge from"lodash/merge";import set from"lodash/set";import{intlMessageShape}from"@jutro/prop-types";import{MetadataForm}from"@jutro/uiconfig";import{Card}from"@jutro/components";import{TranslatorContext}from"@jutro/locale";import{EditCancelSaveTitleBar}from"../TitleBars/EditCancelSaveTitleBar";import{messages as translationMessages}from"./SettingsCard.messages";import styles from"./SettingsCard.module.css";export const SettingsCard=({id:id,className:className,title:title,onSaveClick:onSaveClick,onCancelClick:onCancelClick,readOnly:readOnly,formProps:formProps,isValid:isValid=!0})=>{const overrideProps=formProps.overrideProps,data=formProps.data,translator=useContext(TranslatorContext),_useState=useState(!1),_useState2=_slicedToArray(_useState,2),isEditMode=_useState2[0],setEditMode=_useState2[1],labels={edit:translator(translationMessages.editButtonLabel),save:translator(translationMessages.saveButtonLabel),cancel:translator(translationMessages.cancelButtonLabel)},clickEditCb=useCallback((()=>setEditMode(!0)),[setEditMode]),overrides=merge({},isEditMode?{}:{"@field":{readOnly:!0},"@element":{readOnly:!0}},overrideProps),_useState3=useState(data),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],updateFormData=_useState4[1],clickSaveCb=useCallback((()=>{null==onSaveClick||onSaveClick(formData),setEditMode(!1)}),[setEditMode,onSaveClick,formData]),clickCancelCb=useCallback((()=>{updateFormData(data),setEditMode(!1),null==onCancelClick||onCancelClick(data)}),[setEditMode,data]);return React.createElement(Card,{id:id,className:cx(styles.settingsCard,styles.settingsCardContainer,className)},React.createElement(EditCancelSaveTitleBar,{isSaveEnabled:isValid,isEditMode:isEditMode,labels:labels,onEditClick:clickEditCb,onCancelClick:clickCancelCb,onSaveClick:clickSaveCb,readOnly:readOnly,title:translator(title)}),React.createElement("div",{className:styles.settingsCardContent},React.createElement(MetadataForm,_extends({},formProps,{overrideProps:overrides,data:readOnly?data:formData,onDataChange:(newValue,newPath)=>{updateFormData((prevState=>{const newState={...prevState};return set(newState,newPath,newValue),newState}))}}))))};export const settingsCardPropTypes={id:PropTypes.string.isRequired,className:PropTypes.string,title:intlMessageShape.isRequired,isValid:PropTypes.bool,onSaveClick:PropTypes.func,onCancelClick:PropTypes.func,readOnly:PropTypes.bool,formProps:PropTypes.shape(MetadataForm.propTypes).isRequired};SettingsCard.propTypes=settingsCardPropTypes,SettingsCard.displayName="SettingsCard",SettingsCard.__docgenInfo={description:"@metadataType container",methods:[],displayName:"SettingsCard",props:{isValid:{defaultValue:{value:"true",computed:!1},type:{name:"bool"},required:!1,description:""},id:{type:{name:"string"},required:!0,description:""},className:{type:{name:"string"},required:!1,description:""},title:{type:{name:"custom",raw:"intlMessageShape.isRequired"},required:!1,description:""},onSaveClick:{type:{name:"func"},required:!1,description:""},onCancelClick:{type:{name:"func"},required:!1,description:""},readOnly:{type:{name:"bool"},required:!1,description:""},formProps:{type:{name:"shape",value:"MetadataForm.propTypes",computed:!0},required:!0,description:""}}},SettingsCard.__docgenInfo={componentName:"SettingsCard",packageName:"@jutro/lab-preview-components",description:"",displayName:"SettingsCard",methods:[],actualName:"SettingsCard",metadataType:"container",props:{id:{type:{name:"string"},required:!0,description:""},className:{type:{name:"string"},required:!1,description:""},title:{type:{name:"union",value:[{name:"string"},{name:"shape",value:{id:{name:"string",required:!1},defaultMessage:{name:"string",required:!1},args:{name:"shape",value:{},required:!1}}}]},required:!0,description:""},isValid:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"true",computed:!1}},onSaveClick:{type:{name:"func"},required:!1,description:""},onCancelClick:{type:{name:"func"},required:!1,description:""},readOnly:{type:{name:"bool"},required:!1,description:""},formProps:{type:{name:"shape",value:"MetadataForm.propTypes",computed:!0},required:!0,description:""}}};