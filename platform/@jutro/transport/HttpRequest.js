import _classCallCheck from"@babel/runtime-corejs3/helpers/classCallCheck";import _defineProperty from"@babel/runtime-corejs3/helpers/defineProperty";import _URL from"@babel/runtime-corejs3/core-js-stable/url";import{HttpTransport}from"./HttpTransport";import{defaultEncoder}from"./defaults/defaultEncoder";import{defaultResponseHandler}from"./defaults/defaultResponseHandler";import{defaultErrorResponseHandler}from"./defaults/defaultErrorResponseHandler";import{defaultExceptionHandler}from"./defaults/defaultExceptionHandler";import{fastOptionsMerge}from"./helper";function buildUrl(url,baseUrl){return baseUrl?new _URL(url,baseUrl).toString():url}export let HttpRequest=function HttpRequest(baseUrl,defaultOptions,handlerOverrides){_classCallCheck(this,HttpRequest),_defineProperty(this,"baseUrl",void 0),_defineProperty(this,"defaultOptions",void 0),_defineProperty(this,"transport",void 0),_defineProperty(this,"handlers",void 0),_defineProperty(this,"onEncode",void 0),_defineProperty(this,"get",((url,params,optionOverrides)=>{const requestOptions=fastOptionsMerge(this.defaultOptions,optionOverrides),requestUrl=`${buildUrl(url,this.baseUrl)}${function(params){if(!params)return"";const fakeUrl=new _URL("http://www.gw.com");return Object.keys(params).forEach((key=>{const param=params[key];(Array.isArray(param)?param:[param]).forEach((arrayValue=>fakeUrl.searchParams.append(key,arrayValue)))})),fakeUrl.search}(params)}`;return this.transport.fetch(requestUrl,"GET",requestOptions)})),_defineProperty(this,"post",((url,data,optionOverrides)=>this.request(url,"POST",data,optionOverrides))),_defineProperty(this,"put",((url,data,optionOverrides)=>this.request(url,"PUT",data,optionOverrides))),_defineProperty(this,"patch",((url,data,optionOverrides)=>this.request(url,"PATCH",data,optionOverrides))),_defineProperty(this,"delete",((url,data,optionOverrides)=>this.request(url,"DELETE",data,optionOverrides))),_defineProperty(this,"request",((url,method,data,optionOverrides)=>{const requestOptions=fastOptionsMerge(this.defaultOptions,optionOverrides);return data&&(requestOptions.body=this.onEncode(data,requestOptions)),this.transport.fetch(buildUrl(url,this.baseUrl),method,requestOptions)})),this.baseUrl=baseUrl,this.defaultOptions=defaultOptions,this.onEncode=(null==handlerOverrides?void 0:handlerOverrides.onEncode)||defaultEncoder,this.handlers={onErrorResponse:defaultErrorResponseHandler,onException:defaultExceptionHandler,onResponse:defaultResponseHandler,...handlerOverrides},this.transport=new HttpTransport(this.handlers)};