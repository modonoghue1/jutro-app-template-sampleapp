{
  "swagger": "2.0",
  "info": {
    "title": "Claim API",
    "description": "APIs for claims and related objects",
    "version": "1.2.0"
  },
  "host": "claimcenter-claimcenter-v50-3-0-snapshot-app-http-8080.deployment.fleet.guidewire.com:443",
  "basePath": "/rest/claim/v1",
  "schemes": ["https"],
  "paths": {
    "/batch": {
      "post": {
        "summary": "Issue multiple requests at once as a non-transactional batch",
        "description": "Post a list of sub-requests to make against this endpoint.  Sub-requests will be executed serially, in the order they are specified in the \"requests\" property of the input.  Responses to each sub-request will then be batched up and returned all together.  Sub-requests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the sub-request and will override any headers from the main request.",
        "operationId": "batchRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "includeResponseHeaders",
            "in": "query",
            "description": "Controls what response headers, if any, are included for sub-responses.  If unspecified, or set to the value \"*all\", all headers for sub-responses will be returned.  If set to the value \"*none\", no headers for sub-responses will be returned.  Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on sub-responses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The body of the batch request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The batch request itself was well-formed; individual sub-requests may have succeeded or failed",
            "schema": {
              "$ref": "#/definitions/BatchResponse"
            }
          }
        }
      }
    },
    "/claims": {
      "get": {
        "summary": "Retrieves a list of claims",
        "description": "Retrieves a list of assigned claims",
        "operationId": "getClaims",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Claim",
          "operationType": "get-collection",
          "resourceType": "Claims"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of claims",
            "schema": {
              "$ref": "#/definitions/ClaimsList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new draft claim",
        "description": "Create a new draft claim",
        "operationId": "createClaim",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Claim",
          "operationType": "post-collection",
          "resourceType": "Claims"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Retrieve a claim",
        "description": "Retrieve a claim",
        "operationId": "getClaim",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "Claim"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a claim",
        "description": "Update a claim",
        "operationId": "patchClaim",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "Claim"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activities": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Returns a list of activities associated with this claim",
        "description": "Returns a list of activities associated with this claim",
        "operationId": "getClaimActivities",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Activity",
          "operationType": "get-collection",
          "resourceType": "ClaimActivities"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of activities",
            "schema": {
              "$ref": "#/definitions/ActivityList"
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new activity associated with this claim",
        "description": "Creates a new activity associated with this claim",
        "operationId": "createClaimActivity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Activity",
          "operationType": "post-collection",
          "resourceType": "ClaimActivities"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the details for the newly-created activity",
            "schema": {
              "$ref": "#/definitions/ActivityResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activity-assignees": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to",
        "description": "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to\n",
        "operationId": "getClaimActivityAssignees",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Assignee",
          "operationType": "get-collection",
          "resourceType": "ClaimActivityAssignees"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "The suggested assignees",
            "schema": {
              "$ref": "#/definitions/AssigneeList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/activity-patterns": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Returns a list of activity patterns that can be used to create activities on this claim",
        "description": "Returns a list of activity patterns that can be used to create activities on this claim",
        "operationId": "getClaimActivityPatterns",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ActivityPattern",
          "operationType": "get-collection",
          "resourceType": "ClaimActivityPatterns"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of activities",
            "schema": {
              "$ref": "#/definitions/ActivityPatternList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "post": {
        "summary": "Cancels and removes the given claim; only allowed on draft claims.",
        "description": "Cancels and removes the given claim; only allowed on draft claims.",
        "operationId": "cancel",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Claim"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/close": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "post": {
        "summary": "Close this claim and transition it to the 'closed' state",
        "description": "Close this claim and transition it to the 'closed' state",
        "operationId": "closeClaim",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Claim"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClaimCloseRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully closed the claim",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contact-role-owners": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The contact role owners associated with a given claim, including incidents, exposures, policy, and more.",
        "description": "The contact role owners associated with a given claim. This includes the claim, policy, incidents, exposures, matters, negotiations, and evaluations. Worker's comp injury incidents are not included.\n",
        "operationId": "getClaimContactRoleOwners",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "GenericRelation",
          "operationType": "get-collection",
          "resourceType": "ClaimContactRoleOwners"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenericRelationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contacts": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The contacts associated with a given claim",
        "description": "The contacts associated with a given claim",
        "operationId": "getClaimContacts",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ClaimContact",
          "operationType": "get-collection",
          "resourceType": "ClaimContacts"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClaimContactList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new contact on the given claim",
        "description": "Create a new contact on the given claim",
        "operationId": "createClaimContact",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ClaimContact",
          "operationType": "post-collection",
          "resourceType": "ClaimContacts"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/contacts/{contactId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/contactId"
        }
      ],
      "get": {
        "summary": "The details of a specific contact",
        "description": "The details of a specific contact",
        "operationId": "getClaimContact",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ClaimContact"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update the details of the specific contact on the given claim",
        "description": "Update the details of the specific contact on the given claim",
        "operationId": "patchClaimContact",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "ClaimContact"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a contact on the given claim",
        "description": "Delete a contact on the given claim",
        "operationId": "deleteClaimContact",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "ClaimContact"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/documents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The documents associated with a given claim",
        "description": "The documents associated with a given claim",
        "operationId": "getClaimDocuments",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ClaimDocument",
          "operationType": "get-collection",
          "resourceType": "ClaimDocuments"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new document on the given claim",
        "description": "Create a new document on the given claim",
        "operationId": "createClaimDocument",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ClaimDocument",
          "operationType": "post-collection",
          "resourceType": "ClaimDocuments"
        },
        "parameters": [
          {
            "name": "metadata",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-gw-schema-ref": "#/definitions/ClaimDocumentRequest"
          },
          {
            "name": "content",
            "in": "formData",
            "type": "file"
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/documents/{documentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/documentId"
        }
      ],
      "get": {
        "summary": "The details of a specific document",
        "description": "The details of a specific document",
        "operationId": "getClaimDocument",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ClaimDocument"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a document on the given claim",
        "description": "Update a document on the given claim",
        "operationId": "patchClaimDocument",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "ClaimDocument"
        },
        "parameters": [
          {
            "name": "metadata",
            "in": "formData",
            "type": "string",
            "x-gw-schema-ref": "#/definitions/ClaimDocumentRequest"
          },
          {
            "name": "content",
            "in": "formData",
            "type": "file"
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/ClaimDocumentResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a document on the given claim",
        "description": "Delete a document on the given claim",
        "operationId": "deleteClaimDocument",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "ClaimDocument"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/documents/{documentId}/content": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/documentId"
        }
      ],
      "get": {
        "summary": "The contents of a document",
        "description": "The contents of a document",
        "operationId": "getDocumentContent",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ClaimDocumentContent"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentContentsResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/dwelling-incidents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Retrieve dwelling incidents on a claim",
        "description": "Retrieve dwelling incidents on a claim",
        "operationId": "getDwellingIncidents",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "DwellingIncident",
          "operationType": "get-collection",
          "resourceType": "ClaimDwellingIncidents"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DwellingIncidentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new dwelling incident",
        "description": "Create a new dwelling incident",
        "operationId": "createClaimDwellingIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "DwellingIncident",
          "operationType": "post-collection",
          "resourceType": "ClaimDwellingIncidents"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DwellingIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/dwelling-incidents/{incidentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/incidentId"
        }
      ],
      "get": {
        "summary": "Retrieve a dwelling incident",
        "description": "Retrieve a dwelling incident",
        "operationId": "getDwellingIncident",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "DwellingIncident"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a dwelling incident",
        "description": "Update a dwelling incident",
        "operationId": "patchDwellingIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "DwellingIncident"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DwellingIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/DwellingIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The exposures associated with a given claim",
        "description": "The exposures associated with a given claim",
        "operationId": "getClaimExposures",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Exposure",
          "operationType": "get-collection",
          "resourceType": "ClaimExposures"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExposuresList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new exposure on the given claim",
        "description": "Create a new exposure on the given claim",
        "operationId": "createClaimExposure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Exposure",
          "operationType": "post-collection",
          "resourceType": "ClaimExposures"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExposureRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/ExposureResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/exposureId"
        }
      ],
      "get": {
        "summary": "The details of a specific exposure",
        "description": "The details of a specific exposure",
        "operationId": "getExposure",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "Exposure"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExposureResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update the details of the specific exposure on the given claim",
        "description": "Update the details of the specific exposure on the given claim",
        "operationId": "patchExposure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "Exposure"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExposureRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/ExposureResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the draft exposure",
        "description": "Delete the draft exposure",
        "operationId": "deleteExposure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "Exposure"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/close": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/exposureId"
        }
      ],
      "post": {
        "summary": "Close the exposure",
        "description": "Close the exposure",
        "operationId": "closeExposure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Exposure"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExposureCloseRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully closed the exposure",
            "schema": {
              "$ref": "#/definitions/ExposureResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/validate": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/exposureId"
        }
      ],
      "post": {
        "summary": "Validate the exposure",
        "description": "Validate the exposure",
        "operationId": "validateExposure",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Exposure"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExposureValidationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ExposureValidationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/fixed-property-incidents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The fixed property incidents associated with a given claim",
        "description": "The fixed property incidents associated with a given claim",
        "operationId": "getClaimFixedPropertyIncidents",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "FixedPropertyIncident",
          "operationType": "get-collection",
          "resourceType": "ClaimFixedPropertyIncidents"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new fixed property incident on the given claim",
        "description": "Create a new fixed property incident on the given claim",
        "operationId": "createClaimFixedPropertyIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "FixedPropertyIncident",
          "operationType": "post-collection",
          "resourceType": "ClaimFixedPropertyIncidents"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/fixed-property-incidents/{incidentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/incidentId"
        }
      ],
      "get": {
        "summary": "The details of a specific fixed property incident",
        "description": "The details of a specific fixed property incident",
        "operationId": "getFixedPropertyIncident",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "FixedPropertyIncident"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update the details of a specific fixed property incident",
        "description": "Update the details of a specific fixed property incident",
        "operationId": "patchFixedPropertyIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "FixedPropertyIncident"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/FixedPropertyIncidentResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a fixed property incident on the given claim",
        "description": "Delete a fixed property incident on the given claim",
        "operationId": "deleteFixedPropertyIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "FixedPropertyIncident"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/injury-incidents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The injury incidents associated with a given claim",
        "description": "The injury incidents associated with a given claim",
        "operationId": "getClaimInjuryIncidents",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "InjuryIncident",
          "operationType": "get-collection",
          "resourceType": "ClaimInjuryIncidents"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InjuryIncidentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new injury incident on the given claim",
        "description": "Create a new injury incident on the given claim",
        "operationId": "createClaimInjuryIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "InjuryIncident",
          "operationType": "post-collection",
          "resourceType": "ClaimInjuryIncidents"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InjuryIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/injury-incidents/{incidentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/incidentId"
        }
      ],
      "get": {
        "summary": "The details of a specific injury incident",
        "description": "The details of a specific injury incident",
        "operationId": "getInjuryIncident",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "InjuryIncident"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update the details of a specific injury incident",
        "description": "Update the details of a specific injury incident",
        "operationId": "patchInjuryIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "InjuryIncident"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InjuryIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/InjuryIncidentResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an injury incident on the given claim",
        "description": "Delete an injury incident on the given claim",
        "operationId": "deleteInjuryIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "InjuryIncident"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/claims/{claimId}/living-expenses-incidents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Retrieve living expense incidents on a claim",
        "description": "Retrieve living expense incidents on a claim",
        "operationId": "getLivingExpensesIncidents",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "LivingExpensesIncident",
          "operationType": "get-collection",
          "resourceType": "ClaimLivingExpensesIncidents"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new living expense incident",
        "description": "Create a new living expense incident",
        "operationId": "createClaimLivingExpensesIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "LivingExpensesIncident",
          "operationType": "post-collection",
          "resourceType": "ClaimLivingExpensesIncidents"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/living-expenses-incidents/{incidentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/incidentId"
        }
      ],
      "get": {
        "summary": "Retrieve a living expense incident",
        "description": "Retrieve a living expense incident",
        "operationId": "getLivingExpensesIncident",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "LivingExpensesIncident"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a living expense incident",
        "description": "Update a living expense incident",
        "operationId": "patchLivingExpensesIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "LivingExpensesIncident"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/LivingExpensesIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/notes": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The notes associated with a given claim",
        "description": "The notes associated with a given claim",
        "operationId": "getClaimNotes",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Note",
          "operationType": "get-collection",
          "resourceType": "ClaimNotes"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoteList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new note on this claim",
        "description": "Create a new note on this claim",
        "operationId": "createClaimNote",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Note",
          "operationType": "post-collection",
          "resourceType": "ClaimNotes"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "The details of the newly-created note",
            "schema": {
              "$ref": "#/definitions/NoteResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The policy associated with a given claim",
        "description": "The policy associated with a given claim",
        "operationId": "getPolicy",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "Policy"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/coverages": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The policy level coverages associated with a given claim",
        "description": "The policy level coverages associated with a given claim",
        "operationId": "getPolicyCoverages",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "PolicyCoverage",
          "operationType": "get-collection",
          "resourceType": "PolicyCoverages"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyCoverageList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/coverages/{coverageId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/coverageId"
        }
      ],
      "get": {
        "summary": "The policy level coverage associated with a given claim",
        "description": "The policy level coverage associated with a given claim",
        "operationId": "getPolicyCoverage",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "PolicyCoverage"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyCoverageResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/endorsements": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The policy endorsements of a given claim",
        "description": "The policy endorsements of a given claim",
        "operationId": "getPolicyEndorsements",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "Endorsement",
          "operationType": "get-collection",
          "resourceType": "PolicyEndorsements"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEndorsementList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/endorsements/{endorsementId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/endorsementId"
        }
      ],
      "get": {
        "summary": "The policy endorsement of a given claim",
        "description": "The policy endorsement of a given claim",
        "operationId": "getPolicyEndorsement",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "Endorsement"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyEndorsementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The location based risk units of a policy associated with a given claim",
        "description": "The location based risk units of a policy associated with a given claim",
        "operationId": "getLocationBasedRiskUnits",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "LocationBasedRiskUnit",
          "operationType": "get-collection",
          "resourceType": "LocationBasedRiskUnits"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LocationBasedRiskUnitList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/locationBasedRiskUnitId"
        }
      ],
      "get": {
        "summary": "Retrieve a location based risk unit",
        "description": "Retrieve a location based risk unit",
        "operationId": "getLocationBasedRiskUnit",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "LocationBasedRiskUnit"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/locations": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The locations associated with a given claim's policy",
        "description": "The locations associated with a given claim's policy",
        "operationId": "getPolicyLocations",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "PolicyLocation",
          "operationType": "get-collection",
          "resourceType": "PolicyLocations"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyLocationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/locations/{locationId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/locationId"
        }
      ],
      "get": {
        "summary": "Details of a location on the given claim's policy",
        "description": "Details of a location on the given claim's policy",
        "operationId": "getPolicyLocation",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "PolicyLocation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyLocationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The vehicle risk units of a policy associated with a given claim",
        "description": "The vehicle risk units of a policy associated with a given claim",
        "operationId": "getVehicleRiskUnits",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "VehicleRiskUnit",
          "operationType": "get-collection",
          "resourceType": "VehicleRiskUnits"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/vehicleRiskUnitId"
        }
      ],
      "get": {
        "summary": "Retrieve a vehicle risk unit",
        "description": "Retrieve a vehicle risk unit",
        "operationId": "getVehicleRiskUnit",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "VehicleRiskUnit"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/related-objects": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "The list of objects related to this claim",
        "description": "The list of objects related to this claim which can be used as the values for the \"relatedTo\" field on a note or activity. This includes the claim, contacts, unpromoted service requests, service request specialists, exposures, and matters.\n",
        "operationId": "getClaimRelatedObjects",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "GenericRelation",
          "operationType": "get-collection",
          "resourceType": "ClaimRelatedObjects"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/GenericRelationList"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Returns a list of service requests associated with the claim",
        "description": "Returns a list of service requests associated with the claim",
        "operationId": "getServiceRequestsForClaim",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ServiceRequest",
          "operationType": "get-collection",
          "resourceType": "ClaimServiceRequests"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of service requests for a claim",
            "schema": {
              "$ref": "#/definitions/ServiceRequestList"
            }
          }
        }
      },
      "post": {
        "summary": "Adds a service request to the claim",
        "description": "Adds a service request to the claim",
        "operationId": "addServiceRequestToClaim",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ServiceRequest",
          "operationType": "post-collection",
          "resourceType": "ClaimServiceRequests"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the details of the newly created service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "get": {
        "summary": "Retrieves a service request by its id",
        "description": "Retrieves a service request by its id",
        "operationId": "getServiceRequest",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies an existing service request",
        "description": "Modifies an existing service request",
        "operationId": "changeServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the modified service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/accept": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Accepts a service request",
        "description": "Records that the specialist has accepted this service request",
        "operationId": "acceptServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the accepted service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/assign": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Assigns a service request",
        "description": "Assigns a service request",
        "operationId": "assignServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignmentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the assigned service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Cancels a service request",
        "description": "Records that the specialist does not intend to perform any further work on this service request",
        "operationId": "cancelServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the canceled service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/complete-work": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Indicates that the specialist has completed work",
        "description": "Indicates that the specialist has completed work",
        "operationId": "completeRequestedWork",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/decline": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Declines a service request",
        "description": "Records that the specialist has declined to perform this service request",
        "operationId": "declineServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the declined service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/internal-cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Cancels a service request without specialist response",
        "description": "Internally cancels this service request without further input from the specialist",
        "operationId": "internalCancelServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the canceled service request",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "get": {
        "summary": "Retrieves the invoices on a service request",
        "description": "Retrieves the invoices on a service request",
        "operationId": "getServiceRequestInvoices",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ServiceRequestInvoice",
          "operationType": "get-collection",
          "resourceType": "ServiceRequestInvoices"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of the service request's invoices",
            "schema": {
              "$ref": "#/definitions/ServiceRequestStatementList"
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new service request invoice",
        "description": "Creates a new service request invoice",
        "operationId": "addInvoice",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ServiceRequestInvoice",
          "operationType": "post-collection",
          "resourceType": "ServiceRequestInvoices"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestStatementRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the details of the newly created invoice",
            "schema": {
              "$ref": "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        },
        {
          "$ref": "#/parameters/invoiceId"
        }
      ],
      "get": {
        "summary": "Retrieves a service request invoice by its id",
        "description": "Retrieves a service request invoice by its id",
        "operationId": "getInvoice",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ServiceRequestInvoice"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the the service request invoice",
            "schema": {
              "$ref": "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/withdraw": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        },
        {
          "$ref": "#/parameters/invoiceId"
        }
      ],
      "post": {
        "summary": "Withdraws an invoice that has been submitted",
        "description": "Withdraws an invoice that has been submitted",
        "operationId": "withdrawInvoice",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequestInvoice"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRequestInvoiceOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the withdrawn invoice",
            "schema": {
              "$ref": "#/definitions/ServiceRequestStatementResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/submit": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/serviceRequestId"
        }
      ],
      "post": {
        "summary": "Requests service from specialist",
        "description": "Submits the service request to the specialist for acceptance (with optional instruction)",
        "operationId": "submitServiceRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "ServiceRequest"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceRequestOperationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the resulting service request (state)",
            "schema": {
              "$ref": "#/definitions/ServiceRequestResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/submit": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "post": {
        "summary": "Submit this claim and transition it to the 'open' state",
        "description": "Submit this claim and transition it to the 'open' state",
        "operationId": "submitClaim",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Claim"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClaimSubmitRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully submitted the claim",
            "schema": {
              "$ref": "#/definitions/ClaimResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/validate": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "post": {
        "summary": "Validate a claim",
        "description": "Validate a claim",
        "operationId": "validate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "custom-action",
          "resourceType": "Claim"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ClaimValidationRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClaimValidationResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/vehicle-incidents": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        }
      ],
      "get": {
        "summary": "Retrieve vehicle incidents on a claim",
        "description": "Retrieve vehicle incidents on a claim",
        "operationId": "getClaimVehicleIncidents",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "VehicleIncident",
          "operationType": "get-collection",
          "resourceType": "ClaimVehicleIncidents"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleIncidentList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new vehicle incident",
        "description": "Create a new vehicle incident",
        "operationId": "createClaimVehicleIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "VehicleIncident",
          "operationType": "post-collection",
          "resourceType": "ClaimVehicleIncidents"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      }
    },
    "/claims/{claimId}/vehicle-incidents/{incidentId}": {
      "parameters": [
        {
          "$ref": "#/parameters/claimId"
        },
        {
          "$ref": "#/parameters/incidentId"
        }
      ],
      "get": {
        "summary": "Retrieve a vehicle incident",
        "description": "Retrieve a vehicle incident",
        "operationId": "getVehicleIncident",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "VehicleIncident"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a vehicle incident",
        "description": "Update a vehicle incident",
        "operationId": "patchVehicleIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "VehicleIncident"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleIncidentRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated",
            "schema": {
              "$ref": "#/definitions/VehicleIncidentResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a vehicle incident on the given claim",
        "description": "Delete a vehicle incident on the given claim",
        "operationId": "deleteVehicleIncident",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "delete-element",
          "resourceType": "VehicleIncident"
        },
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/graph-schema": {
      "get": {
        "summary": "Return the JSON Schema Draft-7 representation of the claim graph schema",
        "description": "Return the JSON Schema Draft-7 representation of the claim graph schema",
        "operationId": "getClaimGraphSchema",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ClaimGraphSchema"
        },
        "parameters": [
          {
            "name": "prettyPrint",
            "in": "query",
            "description": "Whether to pretty-print the returned schema, making it larger but more human readable. Defaults to false.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "inlineTypelists",
            "in": "query",
            "description": "Whether to include all referenced typelist values inline on properties. Defaults to false.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Return the Open API 3.0 representation of the schema",
        "description": "Return the Open API 3.0 representation of the schema",
        "operationId": "getOpenApiSchema",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ClaimApiOpenApiSchema"
        },
        "parameters": [
          {
            "$ref": "#/parameters/prettyPrintSchema"
          },
          {
            "$ref": "#/parameters/filterByUser"
          },
          {
            "$ref": "#/parameters/enablePolymorphism"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/role-constraints": {
      "get": {
        "summary": "All contact role constraints list",
        "description": "All contact role constraints list",
        "operationId": "getContactRolesConstraints",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ContactRoleConstraint",
          "operationType": "get-collection",
          "resourceType": "ContactRoleConstraints"
        },
        "parameters": [
          {
            "name": "schema",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRoleConstraintList"
            }
          }
        }
      }
    },
    "/role-constraints/{contactRoleId}": {
      "parameters": [
        {
          "$ref": "#/parameters/contactRoleId"
        }
      ],
      "get": {
        "summary": "The constraints of the given contact role",
        "description": "The constraints of the given contact role",
        "operationId": "getContactRoleConstraint",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "ContactRoleConstraint"
        },
        "parameters": [
          {
            "name": "schema",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactRoleConstraintResponse"
            }
          }
        }
      }
    },
    "/search/claims": {
      "post": {
        "summary": "Searches for claims that match the specified criteria",
        "description": "Searches for claims that match the specified criteria",
        "operationId": "searchClaims",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ClaimSearchResult",
          "operationType": "search-collection",
          "resourceType": "ClaimSearch"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimSearchRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of claims that match the search criteria",
            "schema": {
              "$ref": "#/definitions/ClaimSearchResultList"
            }
          }
        }
      }
    },
    "/service-requests": {
      "get": {
        "summary": "Retrieves service requests",
        "description": "Retrieves a list of assigned service requests",
        "operationId": "getServiceRequests",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "ServiceRequest",
          "operationType": "get-collection",
          "resourceType": "ServiceRequests"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of service requests",
            "schema": {
              "$ref": "#/definitions/ServiceRequestList"
            }
          }
        }
      }
    },
    "/swagger.json": {
      "get": {
        "summary": "Returns the Swagger schema for this API",
        "description": "Returns a Swagger 2.0 schema for this API as json",
        "operationId": "generateDocs",
        "produces": ["application/json"],
        "x-gw-authenticated": false,
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/unverified-policies": {
      "get": {
        "summary": "Get all unverified policies",
        "description": "Get all unverified policies",
        "operationId": "getUnverifiedPolicies",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedPolicy",
          "operationType": "get-collection",
          "resourceType": "UnverifiedPolicies"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PoliciesList"
            }
          }
        }
      },
      "post": {
        "summary": "Create an unverified policy",
        "description": "Create an unverified policy for a new claim; this endpoint cannot be used in isolation, and can only be used as part of a composite request followed by a /claims POST",
        "operationId": "postUnverifiedPolicy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedPolicy",
          "operationType": "post-collection",
          "resourceType": "UnverifiedPolicies"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}": {
      "parameters": [
        {
          "$ref": "#/parameters/policyId"
        }
      ],
      "get": {
        "summary": "Get details of an unverified policy",
        "description": "Get details of an unverified policy",
        "operationId": "getUnverifiedPolicy",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "UnverifiedPolicy"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update an unverified policy",
        "description": "Update an unverified policy",
        "operationId": "patchUnverifiedPolicy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "UnverifiedPolicy"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/contacts": {
      "parameters": [
        {
          "$ref": "#/parameters/policyId"
        }
      ],
      "post": {
        "summary": "Create a policy contact",
        "description": "Create a contact on an unverified policy that has not yet been attached to a claim; if this policy has already been attached to a claim, use /claims/{claimId}/contacts POST instead",
        "operationId": "postUnverifiedPolicyContact",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedPolicyContact",
          "operationType": "post-collection",
          "resourceType": "UnverifiedPolicyContacts"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContactRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units": {
      "parameters": [
        {
          "$ref": "#/parameters/policyId"
        }
      ],
      "post": {
        "summary": "Create a location-based risk unit",
        "description": "Create a location-based risk unit",
        "operationId": "postUnverifiedLocationBasedRiskUnit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedLocationBasedRiskUnit",
          "operationType": "post-collection",
          "resourceType": "UnverifiedLocationBasedRiskUnits"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationBasedRiskUnitRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/LocationBasedRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units": {
      "parameters": [
        {
          "$ref": "#/parameters/policyId"
        }
      ],
      "get": {
        "summary": "Retrieves a list of vehicle risk units",
        "description": "Retreives a list of vehicle risk units",
        "operationId": "getUnverifiedVehicleRiskUnits",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedVehicleRiskUnit",
          "operationType": "get-collection",
          "resourceType": "UnverifiedVehicleRiskUnits"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/pageOffset"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitList"
            }
          }
        }
      },
      "post": {
        "summary": "Create a vehicle risk unit",
        "description": "Create a vehicle risk unit",
        "operationId": "postUnverifiedVehicleRiskUnit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "childResourceType": "UnverifiedVehicleRiskUnit",
          "operationType": "post-collection",
          "resourceType": "UnverifiedVehicleRiskUnits"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful creation",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}": {
      "parameters": [
        {
          "$ref": "#/parameters/policyId"
        },
        {
          "$ref": "#/parameters/vehicleRiskUnitId"
        }
      ],
      "get": {
        "summary": "Get a vehicle risk unit",
        "description": "Get a vehicle risk unit",
        "operationId": "getUnverifiedVehicleRiskUnit",
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "get-element",
          "resourceType": "UnverifiedVehicleRiskUnit"
        },
        "parameters": [
          {
            "$ref": "#/parameters/fields"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/include"
          },
          {
            "$ref": "#/parameters/includeTotal"
          },
          {
            "$ref": "#/parameters/pageSize"
          },
          {
            "$ref": "#/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a vehicle risk unit",
        "description": "Update a vehicle risk unit",
        "operationId": "patchUnverifiedVehicleRiskUnit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "x-gw-extensions": {
          "operationType": "patch-element",
          "resourceType": "UnverifiedVehicleRiskUnit"
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitRequest"
            }
          },
          {
            "$ref": "#/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "Scucess",
            "schema": {
              "$ref": "#/definitions/VehicleRiskUnitResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "claimId": {
      "name": "claimId",
      "in": "path",
      "description": "The identifier for the claim",
      "required": true,
      "type": "string"
    },
    "contactId": {
      "name": "contactId",
      "in": "path",
      "description": "The identifier for the contact",
      "required": true,
      "type": "string"
    },
    "contactRoleId": {
      "name": "contactRoleId",
      "in": "path",
      "description": "The identifier for the contact role",
      "required": true,
      "type": "string"
    },
    "coverageId": {
      "name": "coverageId",
      "in": "path",
      "description": "The identifier for the coverage",
      "required": true,
      "type": "string"
    },
    "documentId": {
      "name": "documentId",
      "in": "path",
      "description": "The identifier for the document",
      "required": true,
      "type": "string"
    },
    "enablePolymorphism": {
      "name": "enablePolymorphism",
      "in": "query",
      "description": "Whether or not to use the discriminator/oneOf pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to true.  When set to false, the schema in these cases will contain the superset of all valid fields, e.g. address schemas will contain all fields for all countries, rather than have separate schemas for different countries.  Setting this to false may make the schema output more consumable by tools that don't support that part of the OpenAPI schema.",
      "type": "boolean",
      "default": true
    },
    "endorsementId": {
      "name": "endorsementId",
      "in": "path",
      "description": "The identifier for policy endorsement",
      "required": true,
      "type": "string"
    },
    "exposureId": {
      "name": "exposureId",
      "in": "path",
      "description": "The identifier for the exposure",
      "required": true,
      "type": "string"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "The fields parameter allows the caller to specify the set of fields that should be included for a given resource, and allows the client to avoid fetching fields they don't want as well as to request optional fields that aren't included by default.  The parameter is of the form fields=<field list> or fields=<include>:<field list>.  The <field list> is a comma-separated list of fields desired on the response, and <include> indicates that the field selection applies to an included resource.  If not specified, the default fields for a resource will be returned. The \"checksum\" and \"links\" properties are special and can be included by specifying \"$checksum\" and \"$links\" respectively. If you wish to select fields on the root resource and the included resources, each of those must be in a separate fields parameter. For example, ?fields=<field list>&fields=<include1>:<field list>&fields=<include2>:<field list>. Special values beginning with the '*' character are used to indicate a set of fields to return, which will then be combined with additional fields that are explicitly listed. The '*default' set will include whatever set of the fields the endpoint would normally return if the \"fields\" query parameter wasn't specified. For example, specifying fields=firstName,lastName will return only the firstName and lastName fields on the response, while specifying fields=default,firstName,lastName will return all the default fields as well as the firstName and lastName. Other '' options are '*detail', '*summary', and '*all'. Properties on sub-objects can be selected via dot-separated paths, for example fields=assignedUser,assignedUser.id will fetch only the id of the assignedUser object but not the displayName. <include> can also represent a nested included resource, such as fields=activities.notes:subject,body.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "filter": {
      "name": "filter",
      "in": "query",
      "description": "Filters the list of results based on the specified field, operator, and value.  The query parameter's value should be of the form <field>:<operator>:<value> or <include>:<field>:<operator>:<value>.  If the <include>: piece is specified, the filter will be applied to the included resource. The set of supported fields is dependent upon the resource being filtered.  Valid operators include \"eq\", \"ne\", \"lt\", \"gt\", \"le\", \"ge\", \"in\", \"ni\", \"sw\", and \"cn\". Values should be formatted according to the same JSON type and format as the filtered field, i.e. if the filtered field is a boolean field, the value should either be \"true\" or \"false\" and if the filtered field is a date-time field, the value should be an ISO-8601 date-time value.  One exception is that filtering on date-time fields can accept either date-times or dates. On occasions where the value needs to contain a \":\" character, this character can be escaped with an additional \":\". For example, to compare against \"some:value\", the query parameter would take the form <field>:<operator>:some::value. The filter query parameter can be specified multiple times for the same resource or field, and all the specified filters will effectively be ANDed together. <include> can also represent a nested included resource, such as filter=activities.notes:subject:cn:NoteSubject.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "filterByUser": {
      "name": "filterByUser",
      "in": "query",
      "description": "Whether or not to filter endpoints and schema properties by the authorization of this user. Defaults to false.",
      "type": "boolean",
      "default": false
    },
    "gwLanguageHeader": {
      "name": "GW-Language",
      "in": "header",
      "description": "If specified, this header will set the language used when processing the request",
      "type": "string"
    },
    "gwLocaleHeader": {
      "name": "GW-Locale",
      "in": "header",
      "description": "If specified, this header will set the locale used when processing the request",
      "type": "string"
    },
    "gwSchemaProperty": {
      "name": "GW-IncludeSchemaProperty",
      "in": "header",
      "description": "If specified and the operation returns json with a defined schema, this will add a property, '$GW-Schema',  with the fully qualified name of the object's schema.",
      "type": "boolean"
    },
    "gwTraceability": {
      "name": "X-Correlation-ID",
      "in": "header",
      "description": "This header permits a customer to trace a request from its initial reception through all of the subsequent applications that were invoked to handle that request. The actual traceability id present in the MDC and logs (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin. The default implementation uses this value, if specified, or a generated UID.  However, another implementation may always generate a unique id and just log  the relationship between these incoming values and the generated UID. Note: that this header can be repeated, but the resulting string will just be the comma separated values.",
      "type": "string"
    },
    "gwTransactionID": {
      "name": "GW-DBTransaction-ID",
      "in": "header",
      "description": "If specified and this operation results in a database commit, this header's value must not have been submitted before.  This value must be globally unique across all clients, apis and webservices. It is used for those transaction that are not idempotent. Unless this is explicitly referenced for an operation it is not required.",
      "required": true,
      "type": "string"
    },
    "gwUnknownPropertyHeader": {
      "name": "GW-UnknownPropertyHandling",
      "in": "header",
      "description": "If specified, this header will drive the behavior for unknown property handling",
      "type": "string",
      "enum": ["log", "reject", "ignore"]
    },
    "gwUnknownQueryParameterHeader": {
      "name": "GW-UnknownQueryParamHandling",
      "in": "header",
      "description": "If specified, this header will drive the behavior for unknown query parameter handling.  Default is to reject them.",
      "type": "string",
      "enum": ["log", "reject", "ignore"]
    },
    "gwValidateResponseHandling": {
      "name": "GW-ValidateResponseHandling",
      "in": "header",
      "description": "If specified, this header permits the client to override the behavior around validating response",
      "type": "boolean"
    },
    "incidentId": {
      "name": "incidentId",
      "in": "path",
      "description": "The identifier for the incident",
      "required": true,
      "type": "string"
    },
    "include": {
      "name": "include",
      "in": "query",
      "description": "Indicates that the caller would like additional resources returned along with this call in the \"included\" section of the response.  The include parameter can appear multiple times, and is a comma-separated list of additional resources to include.  Nested inclusions can be specified by prefixing the inclusion list with the name of the included property and :.  For example, to include the vehicleincidents and mainContact for a Claim, as well as the driver of the vehicle, you could specify ?include=vehicleincidents,mainContact&include=vehicleincidents:driver. The exact set of options for the include parameter depends upon the particular endpoint.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "includeTotal": {
      "name": "includeTotal",
      "in": "query",
      "description": "The includeTotal parameter is used to indicate that the results should include a count of the total number of results available, in cases where the list of results is paginated and not all results are included.  This parameter is of the form includeTotal=<true|false> or includeTotal=<include>:<true|false>.  Specifying the <include>: prefix on the query parameter will apply the includeTotal option to the included list. <include> can also represent a nested included resource, such as includeTotal=activities.notes:true. Calculating the total size of a list can require additional database load, and the option is turned off by default. The returned total is capped at 1000, and will not be accurate if the resource contains more than 1000 elements.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "instructionId": {
      "name": "instructionId",
      "in": "path",
      "description": "The service request instruction identifier",
      "required": true,
      "type": "string"
    },
    "invoiceId": {
      "name": "invoiceId",
      "in": "path",
      "description": "The identifier for the invoice",
      "required": true,
      "type": "string"
    },
    "locationBasedRiskUnitId": {
      "name": "locationBasedRiskUnitId",
      "in": "path",
      "description": "The identifier for the location based risk unit",
      "required": true,
      "type": "string"
    },
    "locationId": {
      "name": "locationId",
      "in": "path",
      "description": "The identifier for the location",
      "required": true,
      "type": "string"
    },
    "messageId": {
      "name": "messageId",
      "in": "path",
      "description": "The service request message identifier",
      "required": true,
      "type": "string"
    },
    "pageOffset": {
      "name": "pageOffset",
      "in": "query",
      "description": "The pageOffset parameter is used to indicate the first result to fetch, in order to page through a list of results. The token may represent a zero-indexed offset, but it may also represent something else such as the id of the last or previous result, depending upon how the server implements pagination for a particular operation. As a general rule, pagination of an API should use the \"next\" and \"prev\" links on the query results to navigate back and forth, rather than attempting to manually construct the pageOffset value.",
      "type": "string",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "pageSize": {
      "name": "pageSize",
      "in": "query",
      "description": "The maximum number of results to return in the result.  If not specified, the default settings for that endpoint will be used; each endpoint also defines a maximum pageSize.  The pageSize parameter can be specified as either pageSize=<size> or pageSize=<include>:<size>, where <include> represents the name of an included resource.  For example, ?pageSize=100 will indicate that 100 resources should be returned, while ?include=activities&pageSize=activities:5 will indicate that 5 activities should be returned along with the response. <include> can also represent a nested included resource, such as pageSize=activities.notes:5.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "policyId": {
      "name": "policyId",
      "in": "path",
      "description": "The identifier for the policy",
      "required": true,
      "type": "string"
    },
    "prettyPrintSchema": {
      "name": "prettyPrint",
      "in": "query",
      "description": "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to false.",
      "type": "boolean",
      "default": false
    },
    "quoteId": {
      "name": "quoteId",
      "in": "path",
      "description": "The identifier for the quote",
      "required": true,
      "type": "string"
    },
    "serviceRequestChangeId": {
      "name": "serviceRequestChangeId",
      "in": "path",
      "description": "The identifier for the service request change",
      "required": true,
      "type": "string"
    },
    "serviceRequestId": {
      "name": "serviceRequestId",
      "in": "path",
      "description": "The service request identifier",
      "required": true,
      "type": "string"
    },
    "sort": {
      "name": "sort",
      "in": "query",
      "description": "The sort parameter is used to control the sorting of the returned results.  The sort parameter can appear multiple times in the query string, and is either of the form sort=<include>:<properties> or sort=<properties>, where <properties> is a comma-separated list of properties to sort on and <include> represents the name of an included resource.  Property names can be prefixed with '-' to specify a descending sort on that property, otherwise the default is an ascending sort.  The set of valid sort property names depends on the specific endpoint being requested. For example, ?sort=priority,-dueDate will specify a primary sort on priority (ascending) and a secondary sort on dueDate (descending).  ?include=activities&sort=activities:priority,-dueDate specifies the same sort values, but applies them to the included \"activities\" list rather than to the primary resource. <include> can also represent a nested included resource, such as sort=activities.notes:dueDate.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-gw-extensions": {
        "allowForCompositeApi": true
      }
    },
    "transactionId": {
      "name": "transactionId",
      "in": "path",
      "description": "The identifier for the transaction",
      "required": true,
      "type": "string"
    },
    "vehicleRiskUnitId": {
      "name": "vehicleRiskUnitId",
      "in": "path",
      "description": "The identifier for the vehicle risk unit",
      "required": true,
      "type": "string"
    }
  },
  "responses": {
    "AuthenticationError": {
      "description": "401 error that is returned if the request's user cannot be authenticated",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "BadInput": {
      "description": "400 error that is returned if the input to this endpoint is not valid; this can happen because of missing required parameters, malformed json, json that does not validate against the declared schema, etc.",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "InternalServerError": {
      "description": "500 error that is returned if a server-side error prevented this request from being processed",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "NotAcceptable": {
      "description": "406 error that is returned if the Accept header provided by the client does not match any types produced by this endpoint",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "NotAuthorized": {
      "description": "403 error that is returned if the authenticated user is not authorized to access a given resource",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "NotFound": {
      "description": "404 error that is returned if the specified resource does not exist",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "OperationNotSupported": {
      "description": "405 error that is returned if the specified HTTP verb is not allowed on a given resource",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "ServiceUnavailable": {
      "description": "503 error that is returned if the server's runlevel is not adequate to service this request",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    },
    "UnsupportedContentType": {
      "description": "415 error that is returned if the Content-Type of the request is not consumable by this endpoint",
      "schema": {
        "$ref": "#/definitions/ErrorInfo"
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "definitions": {
    "ActionWithReasonRequestAttributes": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "ActionWithReasonRequestBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ActionWithReasonRequestData"
        }
      }
    },
    "ActionWithReasonRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ActionWithReasonRequestAttributes"
        }
      }
    },
    "ActivityData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Activity"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ActivityList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ActivityData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityPatternData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ActivityPattern"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ActivityPatternList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ActivityPatternData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ActivityData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ActivityResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ActivityData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ActivityResponseInclusions": {
      "type": "object",
      "properties": {
        "Note": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NoteData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ApproveQuoteRequestAttributes": {
      "type": "object",
      "required": ["requestedCompletionDate"],
      "properties": {
        "requestedCompletionDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "now"
          }
        }
      }
    },
    "ApproveQuoteRequestBody": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ApproveQuoteRequestData"
        }
      }
    },
    "ApproveQuoteRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ApproveQuoteRequestAttributes"
        }
      }
    },
    "AssigneeData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Assignee"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "AssigneeList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AssigneeData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "AssignmentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/AssigneeData"
        }
      }
    },
    "ChangeExpectedDateAttributes": {
      "type": "object",
      "required": ["newdate"],
      "properties": {
        "newdate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "yesterday"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "ChangeExpectedDateBody": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ChangeExpectedDateData"
        }
      }
    },
    "ChangeExpectedDateData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ChangeExpectedDateAttributes"
        }
      }
    },
    "CheckSetData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/CheckSet"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "CheckSetRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/CheckSetData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "CheckSetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/CheckSetData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ClaimCloseRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimCloseRequestData"
        }
      }
    },
    "ClaimCloseRequestAttributes": {
      "type": "object",
      "properties": {
        "closedOutcome": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ClaimClosedOutcomeType"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "ClaimCloseRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimCloseRequestAttributes"
        }
      }
    },
    "ClaimContactData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimContact"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ClaimContactList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimContactData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "ClaimData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ClaimDocumentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DocumentData"
        }
      }
    },
    "ClaimDocumentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DocumentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/DocumentResponseInclusions"
        }
      }
    },
    "ClaimRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ClaimRequestInclusions": {
      "type": "object",
      "properties": {
        "ClaimContact": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimContactData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "DwellingIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DwellingIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Exposure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ExposureData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "FixedPropertyIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FixedPropertyIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "InjuryIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InjuryIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "LivingExpensesIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LivingExpensesIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Note": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NoteData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequest": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "VehicleIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VehicleIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ClaimResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ClaimResponseInclusions": {
      "type": "object",
      "properties": {
        "Activity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ActivityData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ActivityPattern": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ActivityPatternData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ClaimContact": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimContactData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "DwellingIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DwellingIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Endorsement": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EndorsementData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Exposure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ExposureData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "FixedPropertyIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FixedPropertyIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "GenericRelation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GenericRelationData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "InjuryIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InjuryIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "LivingExpensesIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LivingExpensesIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "LocationBasedRiskUnit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LocationBasedRiskUnitData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Note": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NoteData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Policy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PolicyData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "PolicyCoverage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CoverageData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "PolicyLocation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PolicyLocationData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "Reserve": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TransactionData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequest": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "VehicleIncident": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VehicleIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "VehicleRiskUnit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VehicleRiskUnitData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ClaimSearchRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimSearchRequestData"
        }
      }
    },
    "ClaimSearchRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimSearchRequestAttributes"
        }
      }
    },
    "ClaimSearchResultData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimSearchResult"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ClaimSearchResultList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimSearchResultData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ClaimSubmitRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimSubmitRequestData"
        }
      }
    },
    "ClaimSubmitRequestAttributes": {
      "type": "object",
      "properties": {
        "initialAssignment": {
          "type": "object",
          "$ref": "#/definitions/Assignee"
        }
      }
    },
    "ClaimSubmitRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimSubmitRequestAttributes"
        }
      }
    },
    "ClaimValidationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ValidationResult"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ClaimValidationRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimValidationRequestData"
        }
      }
    },
    "ClaimValidationRequestAttributes": {
      "type": "object",
      "required": ["validateExposures", "validationLevel"],
      "properties": {
        "validateExposures": {
          "type": "boolean"
        },
        "validationLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        }
      }
    },
    "ClaimValidationRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ClaimValidationRequestAttributes"
        }
      }
    },
    "ClaimValidationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimValidationData"
        }
      }
    },
    "ClaimsList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ContactRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimContactData"
        }
      }
    },
    "ContactResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ClaimContactData"
        }
      }
    },
    "ContactRoleConstraintData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ContactRoleConstraint"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ContactRoleConstraintList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContactRoleConstraintData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ContactRoleConstraintResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ContactRoleConstraintData"
        }
      }
    },
    "CoverageData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Coverage"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DataEnvelope": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "refid": {
          "type": "string"
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DataListEnvelope": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DocumentContentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/DocumentContent"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DocumentContentsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DocumentContentData"
        }
      }
    },
    "DocumentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Document"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DocumentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DocumentData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "DocumentResponseInclusions": {
      "type": "object",
      "properties": {
        "ClaimDocumentContent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DocumentContentData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "DwellingIncidentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/DwellingIncident"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DwellingIncidentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DwellingIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "DwellingIncidentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DwellingIncidentData"
        }
      }
    },
    "DwellingIncidentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DwellingIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "EndorsementData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Endorsement"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ExposureCloseRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ExposureCloseRequestData"
        }
      }
    },
    "ExposureCloseRequestAttributes": {
      "type": "object",
      "properties": {
        "closedOutcome": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ExposureClosedOutcomeType"
          }
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "ExposureCloseRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ExposureCloseRequestAttributes"
        }
      }
    },
    "ExposureData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Exposure"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ExposureRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ExposureData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ExposureResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ExposureData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ExposureValidationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ValidationResult"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ExposureValidationRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ExposureValidationRequestData"
        }
      }
    },
    "ExposureValidationRequestAttributes": {
      "type": "object",
      "required": ["validateClaim", "validationLevel"],
      "properties": {
        "validateClaim": {
          "type": "boolean"
        },
        "validationLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        }
      }
    },
    "ExposureValidationRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ExposureValidationRequestAttributes"
        }
      }
    },
    "ExposureValidationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ExposureValidationData"
        }
      }
    },
    "ExposuresList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ExposureData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "FixedPropertyIncidentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/FixedPropertyIncident"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "FixedPropertyIncidentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FixedPropertyIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "FixedPropertyIncidentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/FixedPropertyIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "FixedPropertyIncidentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/FixedPropertyIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "GenericRelationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/GenericRelation"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "GenericRelationList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GenericRelationData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "InjuryIncidentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/InjuryIncident"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "InjuryIncidentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InjuryIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "InjuryIncidentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/InjuryIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "InjuryIncidentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/InjuryIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "LivingExpensesIncidentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/LivingExpensesIncident"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "LivingExpensesIncidentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LivingExpensesIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "LivingExpensesIncidentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/LivingExpensesIncidentData"
        }
      }
    },
    "LivingExpensesIncidentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/LivingExpensesIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "LocationBasedRiskUnitData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/LocationBasedRiskUnit"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "LocationBasedRiskUnitList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/LocationBasedRiskUnitData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "LocationBasedRiskUnitRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/LocationBasedRiskUnitData"
        }
      }
    },
    "LocationBasedRiskUnitResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/LocationBasedRiskUnitData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "NoteData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Note"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "NoteList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/NoteData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "NoteRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/NoteData"
        }
      }
    },
    "NoteResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/NoteData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ActivityResponseInclusions"
        }
      }
    },
    "PoliciesList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PolicyData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "PolicyCoverageList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CoverageData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyCoverageResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/CoverageData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Policy"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "PolicyEndorsementList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EndorsementData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyEndorsementResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/EndorsementData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyLocationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocation"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "PolicyLocationList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PolicyLocationData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyLocationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocationData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "PolicyRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PolicyData"
        }
      }
    },
    "PolicyResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/PolicyData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ReserveSetData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ReserveSet"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ReserveSetRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ReserveSetData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ReserveSetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ReserveSetData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "ServiceRequestChangeData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestChange"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestChangeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestChangeData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequest"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestHistoryList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestChangeData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestInstructionData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstruction"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestInstructionHistoryList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestInstructionData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstructionInclusions"
        }
      }
    },
    "ServiceRequestInstructionInclusions": {
      "type": "object",
      "properties": {
        "ClaimContact": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimContactData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ServiceRequestInstructionRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstructionData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstructionInclusions"
        }
      }
    },
    "ServiceRequestInstructionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstructionData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstructionInclusions"
        }
      }
    },
    "ServiceRequestInvoiceOperationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInvoiceOperationContext"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestInvoiceOperationRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInvoiceOperationData"
        }
      }
    },
    "ServiceRequestList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestMessageData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestMessage"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestMessageList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestMessageData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestMessageRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestMessageData"
        }
      }
    },
    "ServiceRequestMessageResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestMessageData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestOperationData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestOperationContext"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestOperationRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestOperationData"
        }
      }
    },
    "ServiceRequestRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "ServiceRequestResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestResponseInclusions": {
      "type": "object",
      "properties": {
        "Claim": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ClaimContact": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimContactData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequestChange": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestChangeData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequestInstruction": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestInstructionData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequestInvoice": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestStatementData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequestMessage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestMessageData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "ServiceRequestQuote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestStatementData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ServiceRequestStatementData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestStatement"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ServiceRequestStatementList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestStatementData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "ServiceRequestStatementRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestStatementData"
        }
      }
    },
    "ServiceRequestStatementResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestStatementData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestResponseInclusions"
        }
      }
    },
    "TransactionData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/Transaction"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "TransactionList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TransactionData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "TransactionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/TransactionData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "VehicleIncidentData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/VehicleIncident"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "VehicleIncidentList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VehicleIncidentData"
          },
          "xml": {
            "wrapped": true
          }
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "VehicleIncidentRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/VehicleIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimRequestInclusions"
        }
      }
    },
    "VehicleIncidentResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/VehicleIncidentData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "VehicleRiskUnitData": {
      "type": "object",
      "required": ["attributes"],
      "properties": {
        "method": {
          "type": "string",
          "enum": ["post", "patch"]
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections",
          "readOnly": true
        },
        "checksum": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "$ref": "#/definitions/VehicleRiskUnit"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "VehicleRiskUnitList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "readOnly": true
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links",
          "readOnly": true
        },
        "total": {
          "type": "integer",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VehicleRiskUnitData"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "VehicleRiskUnitRequest": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/VehicleRiskUnitData"
        }
      }
    },
    "VehicleRiskUnitResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/VehicleRiskUnitData"
        },
        "included": {
          "type": "object",
          "$ref": "#/definitions/ClaimResponseInclusions"
        }
      }
    },
    "BatchRequest": {
      "type": "object",
      "description": "Defines the structure of a batch request, which consists of an array of sub-requests",
      "required": ["requests"],
      "properties": {
        "requests": {
          "type": "array",
          "description": "The array of sub-requests",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BatchSubRequest"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "BatchResponse": {
      "type": "object",
      "description": "Defines the structure of the response to a batch request.  The 'responses' array will have one element for every entry in the 'requests' array, and responses will appear in the same order.",
      "properties": {
        "responses": {
          "type": "array",
          "description": "The array of sub-responses, appearing in the same order as the elements in the 'requests' array of the request",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BatchSubResponse"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "BatchSubRequest": {
      "type": "object",
      "description": "Defines the structure of an individual sub-request of the batch request",
      "required": ["method", "path"],
      "properties": {
        "body": {
          "type": "object",
          "description": "The body of the sub-request, if any"
        },
        "headers": {
          "type": "array",
          "description": "Defines headers that will be included as part of the sub-request.  Any headers defined using this property will override header values inherited from the main request.  Any headers present on the main request that are not defined in this array will be inherited when the sub-request is made, with the exception of the 'GW-Checksum' header.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Header"
          },
          "xml": {
            "wrapped": true
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method for the sub-request",
          "enum": ["delete", "head", "get", "options", "patch", "post", "put"]
        },
        "onFail": {
          "type": "string",
          "description": "Controls whether or not subsequent sub-requests are processed if this sub-request fails.  The default behavior, if unspecified, is to continue processing sub-request.  The 'abort' option specifies that all subsequent sub-requests will be skipped.",
          "enum": ["abort", "continue"]
        },
        "path": {
          "type": "string",
          "description": "Specifies the path for the sub-request.  This path is relative to the root of the API hosting the batch endpoint.  For example, if the batch endpoint is <servlet>/rest/common/v1/batch, then a path of '/activities' will mean a request against <servlet>/rest/common/v1/activities.  The path must start with '/' and cannot contain whitespace.",
          "minLength": 1,
          "pattern": "^/[\\S]*$"
        },
        "query": {
          "type": "string",
          "description": "The query string to use for the sub-request, if any"
        }
      }
    },
    "BatchSubResponse": {
      "type": "object",
      "description": "Defines the format of the sub-response.  In addition to the properties listed here, the 'body' property will include the body of the response as a JSON object.",
      "properties": {
        "body": {
          "type": "object",
          "description": "The body of the response, if any"
        },
        "code": {
          "type": "integer",
          "description": "The HTTP status code for the sub-response"
        },
        "headers": {
          "type": "array",
          "description": "The headers returned for the sub-response",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Header"
          },
          "xml": {
            "wrapped": true
          }
        },
        "skipped": {
          "type": "boolean",
          "description": "This property will be set to 'true' if the corresponding sub-request was not processed due to a prior failed request that specified the \"onFail\": \"abort\" option"
        }
      }
    },
    "Header": {
      "type": "object",
      "description": "An HTTP request or response header",
      "required": ["name", "value"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The header name"
        },
        "value": {
          "type": "string",
          "description": "The header value"
        }
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "activityPattern": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "activityType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ActivityType"
          }
        },
        "approvalIssue": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "approvalRationale": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "approved": {
          "type": "boolean",
          "readOnly": true
        },
        "assignedByUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "assignedGroup": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedQueue": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User",
            "sortable": true
          }
        },
        "assignmentStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "AssignmentStatus"
          }
        },
        "closeDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true
          }
        },
        "closeUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "escalated": {
          "type": "boolean",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        },
        "escalationDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "externallyOwned": {
          "type": "boolean",
          "x-gw-extensions": {
            "filterable": true
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "importance": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ImportanceLevel"
          }
        },
        "initialAssignment": {
          "type": "object",
          "$ref": "#/definitions/Assignee",
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "mandatory": {
          "type": "boolean"
        },
        "priority": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true,
            "typelist": "Priority"
          }
        },
        "recurring": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true,
            "typelist": "ActivityStatus"
          }
        },
        "subject": {
          "type": "string",
          "minLength": 1,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          },
          "pattern": "\\S",
          "maxLength": 255
        }
      }
    },
    "ActivityPattern": {
      "type": "object",
      "properties": {
        "activityClass": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "typelist": "ActivityClass"
          }
        },
        "activityType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "typelist": "ActivityType"
          }
        },
        "availableForClosedClaims": {
          "type": "boolean"
        },
        "category": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true,
            "typelist": "ActivityCategory",
            "filterBy": ["activityType"]
          }
        },
        "claimLossType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "LossType"
          }
        },
        "code": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true,
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "dueDate": {
          "type": "string",
          "description": "The default dueDate for activities created from this pattern, calculated based on the current date and time",
          "format": "date-time"
        },
        "escalationDate": {
          "type": "string",
          "description": "The default escalationDate for activities created from this pattern, calculated based on the current date and time",
          "format": "date-time"
        },
        "externallyOwned": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "importance": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ImportanceLevel"
          }
        },
        "mandatory": {
          "type": "boolean"
        },
        "priority": {
          "type": "object",
          "description": "The default priority for activities created from this pattern",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "Priority"
          }
        },
        "recurring": {
          "type": "boolean"
        },
        "subject": {
          "type": "string",
          "description": "The default subject for activities created from this pattern",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        }
      }
    },
    "AdditionalInfo": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Address": {
      "type": "object",
      "x-gw-extensions": {
        "discriminatorProperty": "country"
      },
      "properties": {
        "CEDEX": {
          "type": "string",
          "maxLength": 2,
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          }
        },
        "addressLine1": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine1Kanji": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine2": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine2Kanji": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine3": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "area": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "city": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "cityKanji": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "country": {
          "type": "string",
          "x-gw-type": "typekey.Country",
          "x-gw-nullable": true
        },
        "county": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "department": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "emirate": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "island": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "oblast": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "parish": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "postalCode": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "prefecture": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "province": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        }
      }
    },
    "Assignee": {
      "type": "object",
      "properties": {
        "autoAssign": {
          "type": "boolean"
        },
        "claimOwner": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "queueId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "Building": {
      "type": "object",
      "properties": {
        "buildingNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "policySystemId": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        }
      }
    },
    "Check": {
      "type": "object",
      "properties": {
        "bankAccount": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "BankAccount"
          }
        },
        "checkBatching": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "CheckBatching"
          }
        },
        "checkInstructions": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "CheckHandlingInstructions"
          }
        },
        "checkNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "checkType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "CheckType"
          }
        },
        "claimContact": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference"
        },
        "comments": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "dateOfService": {
          "type": "string",
          "format": "date-time"
        },
        "deductionType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "DeductionType"
          }
        },
        "deliveryMethod": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "DeliveryMethod"
          }
        },
        "enteredTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "mailTo": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "mailingAddress": {
          "type": "object",
          "$ref": "#/definitions/Address"
        },
        "memo": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "payTo": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "payees": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/Payee"
          },
          "xml": {
            "wrapped": true
          }
        },
        "paymentMethod": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "PaymentMethod"
          }
        },
        "payments": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/Transaction"
          },
          "xml": {
            "wrapped": true
          }
        },
        "portion": {
          "type": "object",
          "$ref": "#/definitions/CheckPortion"
        },
        "reportability": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ReportabilityType"
          }
        },
        "reportableAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "readOnly": true,
          "maximum": 9999999999999999.99,
          "minimum": -9999999999999999.99
        },
        "scheduledSendDate": {
          "type": "string",
          "format": "date-time"
        },
        "servicePdEnd": {
          "type": "string",
          "format": "date-time"
        },
        "servicePdStart": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "TransactionStatus"
          }
        }
      }
    },
    "CheckOccurrence": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "primaryCheck": {
          "type": "object",
          "$ref": "#/definitions/Check",
          "x-gw-extensions": {
            "requiredForCreate": true
          }
        },
        "secondaryChecks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Check"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "CheckPortion": {
      "type": "object",
      "properties": {
        "fixedAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "maximum": 9999999999999999.99,
          "minimum": -9999999999999999.99
        },
        "percentage": {
          "type": "string",
          "format": "gw-bigdecimal",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "CheckSet": {
      "type": "object",
      "properties": {
        "approvalDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "approvalStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ApprovalStatus"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "occurrences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CheckOccurrence"
          },
          "xml": {
            "wrapped": true
          }
        },
        "recurrenceInfo": {
          "type": "object",
          "$ref": "#/definitions/RecurrenceInfo"
        },
        "requestingUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        }
      }
    },
    "Claim": {
      "type": "object",
      "properties": {
        "arson": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "assignedByUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "assignedGroup": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedQueue": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User",
            "sortable": true
          }
        },
        "assignmentStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "AssignmentStatus"
          }
        },
        "claimNumber": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "closeDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "closedOutcome": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ClaimClosedOutcomeType"
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "faultRating": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "FaultRating"
          }
        },
        "filterPropertyRiskUnits": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "filterVehicleRiskUnits": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "fireDepartmentResponded": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "fireSource": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 250
        },
        "flagged": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "FlaggedType"
          }
        },
        "hasWaterBeenTurnedOff": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "howReported": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "HowReportedType"
          }
        },
        "howWasFireDiscovered": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 250
        },
        "id": {
          "type": "string"
        },
        "incidentOnly": {
          "type": "boolean"
        },
        "insured": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "readOnly": true
        },
        "isAnyoneInjured": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "isHomeHabitable": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "isHomeSecure": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "isRoofProtected": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "jurisdiction": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "Jurisdiction"
          }
        },
        "lobCode": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "typelist": "LOBCode",
            "filterBy": ["lossType"]
          }
        },
        "lossCause": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossCause",
            "filterBy": ["lossType"]
          }
        },
        "lossDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-extensions": {
            "before": "now",
            "createOnly": true,
            "filterable": true,
            "requiredForCreate": true,
            "sortable": true
          }
        },
        "lossLocation": {
          "type": "object",
          "$ref": "#/definitions/ClaimAddress",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "lossType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "LossType"
          }
        },
        "mainContact": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "policyAddresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClaimAddress"
          },
          "readOnly": true,
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "policyNumber": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "reportedByType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "PersonRelationType"
          }
        },
        "reportedDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "before": "now"
          }
        },
        "reporter": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "segment": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ClaimSegment"
          }
        },
        "smokeDamageOnly": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "typelist": "ClaimState"
          }
        },
        "strategy": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ClaimStrategy"
          }
        },
        "validationLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        },
        "waterSource": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "WaterSource"
          }
        },
        "witnesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Witness"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "ClaimAddress": {
      "type": "object",
      "x-gw-extensions": {
        "discriminatorProperty": "country"
      },
      "properties": {
        "addressLine1": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine2": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "addressLine3": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "area": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "city": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "country": {
          "type": "string",
          "x-gw-type": "typekey.Country",
          "x-gw-nullable": true
        },
        "county": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "department": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "emirate": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "id": {
          "type": "string"
        },
        "island": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "oblast": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "parish": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "policyAddress": {
          "type": "boolean",
          "readOnly": true
        },
        "policyLabel": {
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "prefecture": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "province": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "countryRestricted": true,
            "typelist": "State",
            "filterBy": ["country"]
          }
        }
      }
    },
    "ClaimContact": {
      "type": "object",
      "x-gw-extensions": {
        "discriminatorProperty": "contactSubtype"
      },
      "properties": {
        "addressBookUID": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 64
        },
        "cellPhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          }
        },
        "companyName": {
          "type": "string",
          "x-gw-extensions": {
            "entitySubtype": "Company"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "companyNameKanji": {
          "type": "string",
          "x-gw-extensions": {
            "entitySubtype": "Company"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "contactSubtype": {
          "type": "string",
          "x-gw-type": "typekey.Contact",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          }
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "before": "now",
            "entitySubtype": "Person"
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "x-gw-nullable": true
        },
        "doctorSpecialty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Doctor",
            "typelist": "SpecialtyType"
          }
        },
        "editableRoles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContactRole"
          },
          "xml": {
            "wrapped": true
          }
        },
        "emailAddress1": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "emailAddress2": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "firstName": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "homePhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "lastName": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "licenseNumber": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 20
        },
        "licenseState": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person",
            "typelist": "Jurisdiction"
          }
        },
        "medicalLicense": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Doctor"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "policySystemId": {
          "type": "string",
          "readOnly": true,
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "primaryAddress": {
          "type": "object",
          "$ref": "#/definitions/Address",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "primaryLanguage": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LanguageType"
          }
        },
        "primaryLocale": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LocaleType"
          }
        },
        "primaryPhone": {
          "type": "string",
          "readOnly": true
        },
        "primaryPhoneType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person",
            "typelist": "PrimaryPhoneType"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContactRole"
          },
          "readOnly": true,
          "xml": {
            "wrapped": true
          }
        },
        "taxId": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "workPhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true
        }
      }
    },
    "ClaimReference": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ClaimSearchRequestAttributes": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "firstName": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "lastName": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "nameSearchType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ClaimSearchNameSearchType"
          }
        },
        "policyNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        }
      }
    },
    "ClaimSearchResult": {
      "type": "object",
      "properties": {
        "adjusterName": {
          "type": "string"
        },
        "claimId": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "claimants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          }
        },
        "insuredName": {
          "type": "string"
        },
        "lossDate": {
          "type": "string",
          "format": "date-time"
        },
        "policyNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ClaimState"
          }
        }
      }
    },
    "CodeReference": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "addressBookUID": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 64
        },
        "cellPhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          }
        },
        "companyName": {
          "type": "string",
          "x-gw-extensions": {
            "entitySubtype": "Company"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "before": "now",
            "entitySubtype": "Person"
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "x-gw-nullable": true
        },
        "doctorSpecialty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "SpecialtyType"
          }
        },
        "emailAddress1": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "emailAddress2": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "firstName": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "homePhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "lastName": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "licenseNumber": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 20
        },
        "licenseState": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person",
            "typelist": "Jurisdiction"
          }
        },
        "medicalLicense": {
          "type": "string",
          "x-gw-nullable": true
        },
        "policySystemId": {
          "type": "string",
          "readOnly": true,
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "preferred": {
          "type": "boolean",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": ["CompanyVendor", "PersonVendor"]
          }
        },
        "primaryAddress": {
          "type": "object",
          "$ref": "#/definitions/Address",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "primaryLanguage": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LanguageType"
          }
        },
        "primaryLocale": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LocaleType"
          }
        },
        "primaryPhone": {
          "type": "string",
          "readOnly": true
        },
        "primaryPhoneType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "Person",
            "typelist": "PrimaryPhoneType"
          }
        },
        "roles": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContactRole"
          },
          "xml": {
            "wrapped": true
          }
        },
        "subtype": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "Contact"
          }
        },
        "taxId": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "workPhone": {
          "type": "object",
          "$ref": "#/definitions/PhoneNumber",
          "x-gw-nullable": true
        }
      }
    },
    "ContactRole": {
      "type": "object",
      "required": ["relatedTo", "role"],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "comments": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "relatedTo": {
          "type": "object",
          "$ref": "#/definitions/GenericRelation"
        },
        "role": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ContactRole"
          }
        }
      }
    },
    "ContactRoleConstraint": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "schemaConstraints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RoleSchemaConstraint"
          },
          "xml": {
            "wrapped": true
          }
        },
        "subtype": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true
          }
        }
      }
    },
    "CovTerm": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "ClassificationCovTerm"
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 100
        },
        "covTermOrder": {
          "type": "integer",
          "x-gw-nullable": true
        },
        "covTermPattern": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "CovTermPattern"
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 100
        },
        "financialAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "FinancialCovTerm"
          },
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "id": {
          "type": "string"
        },
        "modelAggregation": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "CovTermModelAgg"
          }
        },
        "modelRestriction": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "CovTermModelRest"
          }
        },
        "numericValue": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "entitySubtype": "NumericCovTerm"
          }
        },
        "units": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "CovTermModelVal"
          }
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Coverage": {
      "type": "object",
      "properties": {
        "claimAggLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "covTerms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CovTerm"
          },
          "xml": {
            "wrapped": true
          }
        },
        "coverageType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true,
            "typelist": "CoverageType"
          }
        },
        "currency": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "Currency"
          }
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "exposureLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "id": {
          "type": "string"
        },
        "incidentLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "limitsIndicator": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LimitsIndicator"
          }
        },
        "nonmedAggLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "notes": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "personAggLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "replaceAggLimit": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-nullable": true,
          "maximum": 9999999999999999.99,
          "minimum": 0
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "State"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "dateModified": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "docUID": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true,
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "inbound": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "language": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LanguageType"
          }
        },
        "mimeType": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 80
        },
        "name": {
          "type": "string",
          "x-gw-extensions": {
            "filterable": true,
            "requiredForCreate": true,
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 80
        },
        "obsolete": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "recipient": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 60
        },
        "relatedTo": {
          "type": "object",
          "$ref": "#/definitions/GenericRelation"
        },
        "section": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "filterable": true,
            "typelist": "DocumentSection"
          }
        },
        "securityType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "DocumentSecurityType"
          }
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "filterable": true,
            "requiredForCreate": true,
            "typelist": "DocumentStatusType"
          }
        },
        "type": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "requiredForCreate": true,
            "typelist": "DocumentType"
          }
        }
      }
    },
    "DocumentContent": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "string",
          "format": "byte",
          "readOnly": true
        },
        "responseMimeType": {
          "type": "string",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DwellingIncident": {
      "type": "object",
      "properties": {
        "damagedAreaSize": {
          "type": "integer",
          "minimum": 0,
          "x-gw-nullable": true,
          "exclusiveMinimum": true
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "dwellingRoomDamages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DwellingRoomDamage"
          },
          "xml": {
            "wrapped": true
          }
        },
        "fireProtectionAvailable": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocation",
          "x-gw-nullable": true
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossPartyType"
          }
        },
        "materialsDamaged": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 250
        },
        "numberOfPeopleOnPolicy": {
          "type": "integer",
          "minimum": 0,
          "x-gw-nullable": true
        },
        "occupancyType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "OccupancyType"
          }
        },
        "propertySize": {
          "type": "integer",
          "minimum": 0,
          "x-gw-nullable": true,
          "exclusiveMinimum": true
        },
        "severity": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "SeverityType"
          }
        },
        "yearBuilt": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "before": "now"
          }
        },
        "yearsInHome": {
          "type": "integer",
          "minimum": 0,
          "x-gw-nullable": true
        }
      }
    },
    "DwellingRoomDamage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "numberOfRooms": {
          "type": "integer",
          "minimum": 0,
          "x-gw-nullable": true,
          "exclusiveMinimum": true
        },
        "roomType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "RoomType"
          }
        }
      }
    },
    "Endorsement": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "formNumber": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 64
        },
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Exposure": {
      "type": "object",
      "properties": {
        "assignedByUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "assignedGroup": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedQueue": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "assignmentStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "AssignmentStatus"
          }
        },
        "claimOrder": {
          "type": "integer",
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "claimant": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "claimantType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "ClaimantType"
          }
        },
        "closeDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "closedOutcome": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ExposureClosedOutcomeType"
          }
        },
        "contactPermitted": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "coverage": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true
        },
        "coverageSubtype": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "sortable": true,
            "typelist": "CoverageSubtype"
          }
        },
        "createdVia": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "CreatedVia"
          }
        },
        "dwellingIncident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "DwellingIncident"
          }
        },
        "fixedPropertyIncident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "FixedPropertyIncident"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "injuryIncident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "InjuryIncident"
          }
        },
        "jurisdiction": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "Jurisdiction"
          }
        },
        "livingExpensesIncident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "LivingExpensesIncident"
          }
        },
        "lossCategory": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossCategory"
          }
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "LossPartyType",
            "filterBy": ["coverageSubtype"]
          }
        },
        "otherCoverage": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "primaryCoverage": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "sortable": true,
            "typelist": "CoverageType"
          }
        },
        "progress": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "ExposureProgressType"
          }
        },
        "reopenDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "reopenedReason": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ExposureReopenedReason"
          }
        },
        "securityLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "typelist": "ExposureSecurityType"
          }
        },
        "segment": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ClaimSegment"
          }
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ExposureState"
          }
        },
        "strategy": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ClaimStrategy"
          }
        },
        "tier": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "ExposureTier"
          }
        },
        "type": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "ExposureType"
          }
        },
        "validationLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        },
        "vehicleIncident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "VehicleIncident"
          }
        }
      }
    },
    "FixedPropertyIncident": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"],
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "id": {
          "type": "string"
        },
        "location": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocation",
          "x-gw-nullable": true
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossPartyType"
          }
        },
        "occupancyType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "OccupancyType"
          }
        },
        "severity": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "SeverityType"
          }
        }
      }
    },
    "GenericRelation": {
      "type": "object",
      "required": ["id", "type"],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "This property is ignored on updates."
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "GroupDetail": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "InjuryBodyPart": {
      "type": "object",
      "properties": {
        "detailedBodyPart": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "DetailedBodyPartType",
            "filterBy": ["primaryBodyPart"]
          }
        },
        "detailedBodyPartDesc": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "DetailedBodyPartDesc",
            "filterBy": ["detailedBodyPart"]
          }
        },
        "id": {
          "type": "string"
        },
        "impairmentPercentage": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100,
          "x-gw-nullable": true
        },
        "ordering": {
          "type": "integer"
        },
        "primaryBodyPart": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "BodyPartType"
          }
        },
        "sideOfBody": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "SideOfBody"
          }
        }
      }
    },
    "InjuryIncident": {
      "type": "object",
      "properties": {
        "ambulanceUsed": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "bodyParts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/InjuryBodyPart"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"],
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "detailedInjuryType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "DetailedInjuryType",
            "filterBy": ["generalInjuryType"]
          }
        },
        "disabledDueToAccident": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "DisabledDueToAccident"
          }
        },
        "generalInjuryType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "InjuryType"
          }
        },
        "id": {
          "type": "string"
        },
        "injuredPerson": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossPartyType"
          }
        },
        "lostWages": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "primaryDoctor": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true
        },
        "severity": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "SeverityType"
          }
        },
        "treatmentType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "MedicalTreatmentType"
          }
        }
      }
    },
    "LinkObject": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "Links": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/LinkObject"
      }
    },
    "LivingExpensesIncident": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "id": {
          "type": "string"
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "LossPartyType"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "sortable": true
          }
        }
      }
    },
    "LocationBasedRiskUnit": {
      "type": "object",
      "properties": {
        "RUNumber": {
          "type": "integer",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        },
        "building": {
          "type": "object",
          "$ref": "#/definitions/Building"
        },
        "coverages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Coverage"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "locationId": {
          "type": "string",
          "readOnly": true
        },
        "otherRiskType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "entitySubtype": "LocationMiscRU",
            "typelist": "OtherRiskType"
          }
        },
        "policyLocation": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocation"
        },
        "policySystemId": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "subtype": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "createOnly": true,
            "typelist": "RiskUnit"
          }
        }
      }
    },
    "MetaObject": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/Links"
        },
        "refid": {
          "type": "string"
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/RelatedCollections"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MonetaryAmount": {
      "type": "object",
      "required": ["amount", "currency"],
      "properties": {
        "amount": {
          "type": "string",
          "format": "gw-bigdecimal"
        },
        "currency": {
          "type": "string",
          "x-gw-type": "typekey.Currency"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "author": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "body": {
          "type": "string",
          "minLength": 1,
          "x-gw-extensions": {
            "defaultViews": ["detail"],
            "filterable": true,
            "requiredForCreate": true
          },
          "pattern": "\\S",
          "maxLength": 65000
        },
        "bodySummary": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["summary"]
          }
        },
        "confidential": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "relatedTo": {
          "type": "object",
          "$ref": "#/definitions/GenericRelation"
        },
        "securityType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "NoteSecurityType"
          }
        },
        "subject": {
          "type": "string",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "topic": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "NoteTopicType"
          }
        },
        "updateTime": {
          "type": "string",
          "description": "Time when the note was updated",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        }
      }
    },
    "Payee": {
      "type": "object",
      "properties": {
        "contact": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference"
        },
        "id": {
          "type": "string"
        },
        "payeeType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ContactRole"
          }
        }
      }
    },
    "PhoneNumber": {
      "type": "object",
      "required": ["countryCode", "number"],
      "properties": {
        "countryCode": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "PhoneCountryCode"
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "extension": {
          "type": "string",
          "x-gw-nullable": true
        },
        "number": {
          "type": "string"
        }
      }
    },
    "Policy": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "agent": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "assignedRisk": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "coveredParties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions": {
              "resourceType": "ClaimContact"
            }
          },
          "xml": {
            "wrapped": true
          }
        },
        "currency": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "Currency"
          }
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "excludedParties": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions": {
              "resourceType": "ClaimContact"
            }
          },
          "xml": {
            "wrapped": true
          }
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        },
        "financialInterests": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "foreignCoverage": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "id": {
          "type": "string"
        },
        "insured": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "notes": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "originalEffectiveDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-nullable": true
        },
        "policyLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PolicyObjectReference"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "policyNumber": {
          "type": "string",
          "x-gw-extensions": {
            "requiredForCreate": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "policyType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "PolicyType"
          }
        },
        "producerCode": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "serviceTier": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "CustomerServiceTier"
          }
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "PolicyStatus"
          }
        },
        "underwritingCo": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "UnderwritingCompanyType"
          }
        },
        "underwritingGroup": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "UnderwritingGroupType"
          }
        },
        "verifiedPolicy": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PolicyLocation": {
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "$ref": "#/definitions/ClaimAddress"
        },
        "buildings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Building"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "notes": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "policySystemId": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "primaryLocation": {
          "type": "boolean",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        }
      }
    },
    "PolicyObjectReference": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "policyLabel": {
          "type": "string",
          "readOnly": true
        },
        "policySystemId": {
          "type": "string"
        }
      }
    },
    "QueueDetail": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 30
        },
        "id": {
          "type": "string"
        }
      }
    },
    "RecurrenceInfo": {
      "type": "object",
      "properties": {
        "firstDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "issuanceDateOffset": {
          "type": "integer"
        },
        "numChecks": {
          "type": "integer",
          "exclusiveMinimum": true,
          "minimum": 0
        },
        "recurrenceDay": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "RecurrenceDay"
          }
        }
      }
    },
    "RelatedCollection": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SimpleReference"
          },
          "xml": {
            "wrapped": true
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "RelatedCollections": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/RelatedCollection"
      }
    },
    "ReserveSet": {
      "type": "object",
      "properties": {
        "approvalDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "approvalStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ApprovalStatus"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "createdVia": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "CreatedVia"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "requestingUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "reserves": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/Transaction"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "requiredForCreate": true
          }
        }
      }
    },
    "RoleSchemaConstraint": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SchemaConstraint"
          },
          "readOnly": true,
          "xml": {
            "wrapped": true
          }
        },
        "exceptionSubtypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "xml": {
            "wrapped": true
          }
        },
        "schema": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SchemaConstraint": {
      "type": "object",
      "properties": {
        "additionalInfoList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AdditionalInfo"
          },
          "xml": {
            "wrapped": true
          }
        },
        "constraintType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceRequest": {
      "type": "object",
      "properties": {
        "assignedGroup": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true
        },
        "assignedUser": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "assignmentDate": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "canceledReason": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "claim": {
          "type": "object",
          "$ref": "#/definitions/ClaimReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "Claim"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "expectedQuoteCompletionDate": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "expectedServiceCompletionDate": {
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "exposure": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "incident": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "instruction": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestInstruction",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "resourceType": "ServiceRequestInstruction"
          }
        },
        "kind": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "sortable": true,
            "typelist": "ServiceRequestKind"
          }
        },
        "latestQuote": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestStatement"
        },
        "nextStep": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestAction",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "progress": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true,
            "typelist": "ServiceRequestProgress"
          }
        },
        "quoteStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ServiceRequestQuoteStatus"
          }
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "requestedQuoteCompletionDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "now",
            "createOnly": true
          }
        },
        "requestedServiceCompletionDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "now",
            "createOnly": true
          }
        },
        "serviceRequestNumber": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "specialist": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "resourceType": "ClaimContact"
          }
        },
        "specialistCommMethod": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "typelist": "SpecialistCommMethod"
          }
        },
        "tier": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "sortable": true,
            "typelist": "ServiceRequestTier"
          }
        }
      }
    },
    "ServiceRequestAction": {
      "type": "object",
      "properties": {
        "defaultOperation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ServiceRequestChange": {
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "newInstruction": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-extensions": {
            "resourceType": "ServiceRequestInstruction"
          }
        },
        "newProgress": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ServiceRequestProgress"
          }
        },
        "newQuoteExpectedCompletionDate": {
          "type": "string",
          "format": "date"
        },
        "newQuoteStatus": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ServiceRequestQuoteStatus"
          }
        },
        "newServiceExpectedCompletionDate": {
          "type": "string",
          "format": "date"
        },
        "operation": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ServiceRequestOperation"
          }
        },
        "sequence": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceRequestInstruction": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "resourceType": "ClaimContact"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "instructionText": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true,
            "defaultViews": ["detail"],
            "sortable": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "serviceAddress": {
          "type": "object",
          "$ref": "#/definitions/ClaimAddress",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          }
        },
        "services": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/SpecialistService"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          }
        }
      }
    },
    "ServiceRequestInvoiceOperationContext": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "ServiceRequestMessage": {
      "type": "object",
      "required": ["messageType"],
      "properties": {
        "body": {
          "type": "string",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "messageType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ServiceRequestMessageType"
          }
        },
        "sendDate": {
          "type": "string",
          "format": "date-time",
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "serviceRequest": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestReference",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        }
      }
    },
    "ServiceRequestOperationContext": {
      "type": "object",
      "properties": {
        "expectedCompletionDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "now"
          }
        },
        "originalDate": {
          "type": "string",
          "format": "date"
        },
        "reason": {
          "type": "string"
        },
        "requestedCompletionDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "after": "now"
          }
        },
        "statement": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestStatement"
        }
      }
    },
    "ServiceRequestReference": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "serviceRequestNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        }
      }
    },
    "ServiceRequestSimpleOperationContext": {
      "type": "object"
    },
    "ServiceRequestStatement": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "approvalDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "approvedBy": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "readOnly": true,
          "x-gw-extensions": {
            "resourceType": "User"
          }
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "declinedReason": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "description": {
          "type": "string",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 65000
        },
        "expectedDaysToPerformService": {
          "type": "integer",
          "x-gw-extensions": {
            "entitySubtype": "ServiceRequestQuote"
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "lineItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequestStatementLineItem"
          },
          "xml": {
            "wrapped": true
          }
        },
        "operationContext": {
          "type": "object",
          "$ref": "#/definitions/ServiceRequestSimpleOperationContext",
          "x-gw-extensions": {
            "createOnly": true,
            "entitySubtype": "ServiceRequestInvoice"
          }
        },
        "paymentDate": {
          "type": "string",
          "format": "date",
          "x-gw-extensions": {
            "entitySubtype": "ServiceRequestInvoice"
          }
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "source": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "StatementSource"
          }
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "entitySubtype": "ServiceRequestInvoice",
            "typelist": "ServiceRequestInvoiceStatus"
          }
        },
        "subtype": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "ServiceRequestStatement"
          }
        },
        "total": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "readOnly": true
        }
      }
    },
    "ServiceRequestStatementLineItem": {
      "type": "object",
      "required": ["amount"],
      "properties": {
        "amount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "maximum": 9999999999999999.99,
          "minimum": -9999999999999999.99
        },
        "category": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ServiceRequestStatementLineItemCategory"
          }
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SimpleReference": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "SpecialistService": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "x-gw-extensions": {
            "createOnly": true
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "parent": {
          "type": "object",
          "$ref": "#/definitions/CodeReference",
          "readOnly": true
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "bookingDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "comments": {
          "type": "string",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "coverage": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "CoverageType"
          }
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "sortable": true
          }
        },
        "createdVia": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "CreatedVia"
          }
        },
        "currency": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "Currency"
          }
        },
        "eroding": {
          "type": "boolean",
          "x-gw-extensions": {
            "entitySubtype": "Payment"
          }
        },
        "exchangeDescription": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "exchangeRate": {
          "type": "string",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "exchangeRateEffDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "lineItems": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "#/definitions/TransactionLineItem"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          }
        },
        "overrideTransToReservingExchangeRate": {
          "type": "boolean",
          "readOnly": true,
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "paymentType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "entitySubtype": "Payment",
            "requiredForCreate": true,
            "typelist": "PaymentType"
          }
        },
        "reserveLine": {
          "type": "object",
          "$ref": "#/definitions/TransactionCoding",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          }
        },
        "reservingAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "readOnly": true
        },
        "status": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "typelist": "TransactionStatus"
          }
        },
        "transactionAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "readOnly": true
        },
        "type": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "typelist": "Transaction"
          }
        }
      }
    },
    "TransactionCoding": {
      "type": "object",
      "properties": {
        "costCategory": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "CostCategory",
            "filterBy": ["costType"]
          }
        },
        "costType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "CostType"
          }
        },
        "exposure": {
          "type": "object",
          "$ref": "#/definitions/SimpleReference",
          "x-gw-extensions": {
            "createOnly": true
          }
        },
        "reservingCurrency": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true,
            "typelist": "Currency"
          }
        }
      }
    },
    "TransactionLineItem": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string"
        },
        "lineCategory": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "LineCategory"
          }
        },
        "reservingAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "readOnly": true,
          "maximum": 9999999999999999.99,
          "minimum": -9999999999999999.99
        },
        "transactionAmount": {
          "type": "object",
          "$ref": "#/definitions/MonetaryAmount",
          "x-gw-extensions": {
            "createOnly": true,
            "requiredForCreate": true
          },
          "maximum": 9999999999999999.99,
          "minimum": -9999999999999999.99
        }
      }
    },
    "TypeFilter": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "typeKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        }
      }
    },
    "TypeKey": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["none"]
          }
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "retired": {
          "type": "boolean",
          "x-gw-extensions": {
            "defaultViews": ["none"]
          }
        }
      }
    },
    "TypeKeyReference": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "This property is ignored on updates."
        }
      }
    },
    "TypeList": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        },
        "typeFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TypeFilter"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "typeKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TypeKey"
          },
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        }
      }
    },
    "UpdatablePolicyObjectReference": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "policySystemId": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ValidationIssue": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "severity": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ValidationIssueType"
          }
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "validationLevel": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "hasErrors": {
          "type": "boolean"
        },
        "validationIssues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ValidationIssue"
          },
          "xml": {
            "wrapped": true
          }
        },
        "validationLevelReached": {
          "type": "object",
          "description": "Updated ValidationLevel of the root bean that is being validated",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "ValidationLevel"
          }
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "licensePlate": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "make": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "manufacturer": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "VehicleManufacturer"
          }
        },
        "model": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "policyLabel": {
          "type": "string",
          "readOnly": true
        },
        "policySystemId": {
          "type": "string"
        },
        "policyVehicle": {
          "type": "boolean",
          "readOnly": true
        },
        "state": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "Jurisdiction"
          }
        },
        "style": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "VehicleStyle"
          }
        },
        "vin": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 40
        },
        "year": {
          "type": "integer",
          "x-gw-nullable": true
        }
      }
    },
    "VehicleIncident": {
      "type": "object",
      "properties": {
        "airbagsDeployed": {
          "type": "boolean"
        },
        "collision": {
          "type": "boolean"
        },
        "collisionPoint": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "CollisionPoint"
          }
        },
        "damageDescription": {
          "type": "string",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          },
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 1333
        },
        "driver": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "equipmentFailure": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "incidentOwner": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "lossParty": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "LossPartyType"
          }
        },
        "passengers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UpdatablePolicyObjectReference",
            "x-gw-extensions": {
              "resourceType": "ClaimContact"
            }
          },
          "xml": {
            "wrapped": true
          }
        },
        "propertyDamageDescription": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "safeToDrive": {
          "type": "boolean"
        },
        "severity": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "sortable": true,
            "typelist": "SeverityType"
          }
        },
        "theft": {
          "type": "boolean"
        },
        "totalLoss": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "vehicle": {
          "type": "object",
          "$ref": "#/definitions/Vehicle"
        },
        "vehicleDirection": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "VehicleDirection"
          }
        },
        "vehicleParked": {
          "type": "boolean",
          "x-gw-nullable": true
        },
        "vehicleType": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-nullable": true,
          "x-gw-extensions": {
            "typelist": "VehicleType",
            "filterBy": ["lossParty"]
          }
        }
      }
    },
    "VehicleRiskUnit": {
      "type": "object",
      "properties": {
        "RUNumber": {
          "type": "integer",
          "readOnly": true,
          "x-gw-extensions": {
            "filterable": true,
            "sortable": true
          }
        },
        "coverages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Coverage"
          },
          "readOnly": true,
          "xml": {
            "wrapped": true
          },
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "description": {
          "type": "string",
          "x-gw-nullable": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "policySystemId": {
          "type": "string",
          "readOnly": true,
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 256
        },
        "vehicle": {
          "type": "object",
          "$ref": "#/definitions/Vehicle",
          "x-gw-extensions": {
            "defaultViews": ["detail"]
          }
        },
        "vehicleId": {
          "type": "string",
          "readOnly": true
        },
        "vehicleLocation": {
          "type": "object",
          "$ref": "#/definitions/PolicyLocation",
          "readOnly": true
        }
      }
    },
    "Witness": {
      "type": "object",
      "required": ["contact"],
      "properties": {
        "contact": {
          "type": "object",
          "$ref": "#/definitions/UpdatablePolicyObjectReference",
          "x-gw-extensions": {
            "resourceType": "ClaimContact"
          }
        },
        "perspective": {
          "type": "string",
          "minLength": 1,
          "pattern": "\\S",
          "maxLength": 100
        },
        "position": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "WitnessPosition"
          }
        },
        "statementObtained": {
          "type": "object",
          "$ref": "#/definitions/TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "YesNo"
          }
        }
      }
    },
    "framework_GenericRelation": {
      "type": "object",
      "xml": {
        "name": "GenericRelation"
      },
      "required": ["id", "type"],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "This property is ignored on updates."
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "framework_LinkObject": {
      "type": "object",
      "xml": {
        "name": "LinkObject"
      },
      "properties": {
        "href": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "framework_Links": {
      "type": "object",
      "xml": {
        "name": "Links"
      },
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/framework_LinkObject"
      }
    },
    "framework_MetaObject": {
      "type": "object",
      "xml": {
        "name": "MetaObject"
      },
      "properties": {
        "checksum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "links": {
          "type": "object",
          "$ref": "#/definitions/framework_Links"
        },
        "refid": {
          "type": "string"
        },
        "related": {
          "type": "object",
          "$ref": "#/definitions/framework_RelatedCollections"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "framework_MonetaryAmount": {
      "type": "object",
      "xml": {
        "name": "MonetaryAmount"
      },
      "required": ["amount", "currency"],
      "properties": {
        "amount": {
          "type": "string",
          "format": "gw-bigdecimal"
        },
        "currency": {
          "type": "string",
          "x-gw-type": "typekey.Currency"
        }
      }
    },
    "framework_PhoneNumber": {
      "type": "object",
      "xml": {
        "name": "PhoneNumber"
      },
      "required": ["countryCode", "number"],
      "properties": {
        "countryCode": {
          "type": "object",
          "$ref": "#/definitions/framework_TypeKeyReference",
          "x-gw-extensions": {
            "typelist": "PhoneCountryCode"
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "extension": {
          "type": "string",
          "x-gw-nullable": true
        },
        "number": {
          "type": "string"
        }
      }
    },
    "framework_RelatedCollection": {
      "type": "object",
      "xml": {
        "name": "RelatedCollection"
      },
      "properties": {
        "count": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/framework_SimpleReference"
          },
          "xml": {
            "wrapped": true
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "framework_RelatedCollections": {
      "type": "object",
      "xml": {
        "name": "RelatedCollections"
      },
      "additionalProperties": {
        "type": "object",
        "$ref": "#/definitions/framework_RelatedCollection"
      }
    },
    "framework_SimpleReference": {
      "type": "object",
      "xml": {
        "name": "SimpleReference"
      },
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "refid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "framework_TypeKeyReference": {
      "type": "object",
      "xml": {
        "name": "TypeKeyReference"
      },
      "required": ["code"],
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "This property is ignored on updates."
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "lineNumber": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "parameterLocation": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        }
      }
    },
    "ErrorInfo": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ErrorDetails"
          },
          "xml": {
            "wrapped": true
          }
        },
        "developerMessage": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer"
        },
        "userMessage": {
          "type": "string"
        }
      }
    }
  }
}
