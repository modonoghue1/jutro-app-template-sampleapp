{
  "components": {
    "parameters": {
      "claimId": {
        "description": "The identifier for the claim",
        "in": "path",
        "name": "claimId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "contactId": {
        "description": "The identifier for the contact",
        "in": "path",
        "name": "contactId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "contactRoleId": {
        "description": "The identifier for the contact role",
        "in": "path",
        "name": "contactRoleId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "coverageId": {
        "description": "The identifier for the coverage",
        "in": "path",
        "name": "coverageId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "documentId": {
        "description": "The identifier for the document",
        "in": "path",
        "name": "documentId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "enablePolymorphism": {
        "description": "Whether or not to use the discriminator/oneOf pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to true.  When set to false, the schema in these cases will contain the superset of all valid fields, e.g. address schemas will contain all fields for all countries, rather than have separate schemas for different countries.  Setting this to false may make the schema output more consumable by tools that don't support that part of the OpenAPI schema.",
        "in": "query",
        "name": "enablePolymorphism",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "endorsementId": {
        "description": "The identifier for policy endorsement",
        "in": "path",
        "name": "endorsementId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "exposureId": {
        "description": "The identifier for the exposure",
        "in": "path",
        "name": "exposureId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "description": "The fields parameter allows the caller to specify the set of fields that should be included for a given resource, and allows the client to avoid fetching fields they don't want as well as to request optional fields that aren't included by default.  The parameter is of the form fields=<field list> or fields=<include>:<field list>.  The <field list> is a comma-separated list of fields desired on the response, and <include> indicates that the field selection applies to an included resource.  If not specified, the default fields for a resource will be returned. The \"checksum\" and \"links\" properties are special and can be included by specifying \"$checksum\" and \"$links\" respectively. If you wish to select fields on the root resource and the included resources, each of those must be in a separate fields parameter. For example, ?fields=<field list>&fields=<include1>:<field list>&fields=<include2>:<field list>. Special values beginning with the '*' character are used to indicate a set of fields to return, which will then be combined with additional fields that are explicitly listed. The '*default' set will include whatever set of the fields the endpoint would normally return if the \"fields\" query parameter wasn't specified. For example, specifying fields=firstName,lastName will return only the firstName and lastName fields on the response, while specifying fields=default,firstName,lastName will return all the default fields as well as the firstName and lastName. Other '' options are '*detail', '*summary', and '*all'. Properties on sub-objects can be selected via dot-separated paths, for example fields=assignedUser,assignedUser.id will fetch only the id of the assignedUser object but not the displayName. <include> can also represent a nested included resource, such as fields=activities.notes:subject,body.",
        "explode": true,
        "in": "query",
        "name": "fields",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "filter": {
        "description": "Filters the list of results based on the specified field, operator, and value.  The query parameter's value should be of the form <field>:<operator>:<value> or <include>:<field>:<operator>:<value>.  If the <include>: piece is specified, the filter will be applied to the included resource. The set of supported fields is dependent upon the resource being filtered.  Valid operators include \"eq\", \"ne\", \"lt\", \"gt\", \"le\", \"ge\", \"in\", \"ni\", \"sw\", and \"cn\". Values should be formatted according to the same JSON type and format as the filtered field, i.e. if the filtered field is a boolean field, the value should either be \"true\" or \"false\" and if the filtered field is a date-time field, the value should be an ISO-8601 date-time value.  One exception is that filtering on date-time fields can accept either date-times or dates. On occasions where the value needs to contain a \":\" character, this character can be escaped with an additional \":\". For example, to compare against \"some:value\", the query parameter would take the form <field>:<operator>:some::value. The filter query parameter can be specified multiple times for the same resource or field, and all the specified filters will effectively be ANDed together. <include> can also represent a nested included resource, such as filter=activities.notes:subject:cn:NoteSubject.",
        "explode": true,
        "in": "query",
        "name": "filter",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "filterByUser": {
        "description": "Whether or not to filter endpoints and schema properties by the authorization of this user. Defaults to false.",
        "in": "query",
        "name": "filterByUser",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "gwLanguageHeader": {
        "description": "If specified, this header will set the language used when processing the request",
        "in": "header",
        "name": "GW-Language",
        "schema": {
          "type": "string"
        }
      },
      "gwLocaleHeader": {
        "description": "If specified, this header will set the locale used when processing the request",
        "in": "header",
        "name": "GW-Locale",
        "schema": {
          "type": "string"
        }
      },
      "gwSchemaProperty": {
        "description": "If specified and the operation returns json with a defined schema, this will add a property, '$GW-Schema',  with the fully qualified name of the object's schema.",
        "in": "header",
        "name": "GW-IncludeSchemaProperty",
        "schema": {
          "type": "boolean"
        }
      },
      "gwTraceability": {
        "description": "This header permits a customer to trace a request from its initial reception through all of the subsequent applications that were invoked to handle that request. The actual traceability id present in the MDC and logs (and returned in the response), is dependent on the implementation of TraceabilityIDPlugin. The default implementation uses this value, if specified, or a generated UID.  However, another implementation may always generate a unique id and just log  the relationship between these incoming values and the generated UID. Note: that this header can be repeated, but the resulting string will just be the comma separated values.",
        "in": "header",
        "name": "X-Correlation-ID",
        "schema": {
          "type": "string"
        }
      },
      "gwTransactionID": {
        "description": "If specified and this operation results in a database commit, this header's value must not have been submitted before.  This value must be globally unique across all clients, apis and webservices. It is used for those transaction that are not idempotent. Unless this is explicitly referenced for an operation it is not required.",
        "in": "header",
        "name": "GW-DBTransaction-ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "gwUnknownPropertyHeader": {
        "description": "If specified, this header will drive the behavior for unknown property handling",
        "in": "header",
        "name": "GW-UnknownPropertyHandling",
        "schema": {
          "enum": [
            "log",
            "reject",
            "ignore"
          ],
          "type": "string"
        }
      },
      "gwUnknownQueryParameterHeader": {
        "description": "If specified, this header will drive the behavior for unknown query parameter handling.  Default is to reject them.",
        "in": "header",
        "name": "GW-UnknownQueryParamHandling",
        "schema": {
          "enum": [
            "log",
            "reject",
            "ignore"
          ],
          "type": "string"
        }
      },
      "gwValidateResponseHandling": {
        "description": "If specified, this header permits the client to override the behavior around validating response",
        "in": "header",
        "name": "GW-ValidateResponseHandling",
        "schema": {
          "type": "boolean"
        }
      },
      "incidentId": {
        "description": "The identifier for the incident",
        "in": "path",
        "name": "incidentId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "include": {
        "description": "Indicates that the caller would like additional resources returned along with this call in the \"included\" section of the response.  The include parameter can appear multiple times, and is a comma-separated list of additional resources to include.  Nested inclusions can be specified by prefixing the inclusion list with the name of the included property and :.  For example, to include the vehicleincidents and mainContact for a Claim, as well as the driver of the vehicle, you could specify ?include=vehicleincidents,mainContact&include=vehicleincidents:driver. The exact set of options for the include parameter depends upon the particular endpoint.",
        "explode": true,
        "in": "query",
        "name": "include",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "includeTotal": {
        "description": "The includeTotal parameter is used to indicate that the results should include a count of the total number of results available, in cases where the list of results is paginated and not all results are included.  This parameter is of the form includeTotal=<true|false> or includeTotal=<include>:<true|false>.  Specifying the <include>: prefix on the query parameter will apply the includeTotal option to the included list. <include> can also represent a nested included resource, such as includeTotal=activities.notes:true. Calculating the total size of a list can require additional database load, and the option is turned off by default. The returned total is capped at 1000, and will not be accurate if the resource contains more than 1000 elements.",
        "explode": true,
        "in": "query",
        "name": "includeTotal",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "instructionId": {
        "description": "The service request instruction identifier",
        "in": "path",
        "name": "instructionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invoiceId": {
        "description": "The identifier for the invoice",
        "in": "path",
        "name": "invoiceId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "locationBasedRiskUnitId": {
        "description": "The identifier for the location based risk unit",
        "in": "path",
        "name": "locationBasedRiskUnitId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "locationId": {
        "description": "The identifier for the location",
        "in": "path",
        "name": "locationId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "messageId": {
        "description": "The service request message identifier",
        "in": "path",
        "name": "messageId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pageOffset": {
        "description": "The pageOffset parameter is used to indicate the first result to fetch, in order to page through a list of results. The token may represent a zero-indexed offset, but it may also represent something else such as the id of the last or previous result, depending upon how the server implements pagination for a particular operation. As a general rule, pagination of an API should use the \"next\" and \"prev\" links on the query results to navigate back and forth, rather than attempting to manually construct the pageOffset value.",
        "in": "query",
        "name": "pageOffset",
        "schema": {
          "type": "string"
        }
      },
      "pageSize": {
        "description": "The maximum number of results to return in the result.  If not specified, the default settings for that endpoint will be used; each endpoint also defines a maximum pageSize.  The pageSize parameter can be specified as either pageSize=<size> or pageSize=<include>:<size>, where <include> represents the name of an included resource.  For example, ?pageSize=100 will indicate that 100 resources should be returned, while ?include=activities&pageSize=activities:5 will indicate that 5 activities should be returned along with the response. <include> can also represent a nested included resource, such as pageSize=activities.notes:5.",
        "explode": true,
        "in": "query",
        "name": "pageSize",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "policyId": {
        "description": "The identifier for the policy",
        "in": "path",
        "name": "policyId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "prettyPrintSchema": {
        "description": "Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to false.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "default": false,
          "type": "boolean"
        }
      },
      "quoteId": {
        "description": "The identifier for the quote",
        "in": "path",
        "name": "quoteId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "serviceRequestChangeId": {
        "description": "The identifier for the service request change",
        "in": "path",
        "name": "serviceRequestChangeId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "serviceRequestId": {
        "description": "The service request identifier",
        "in": "path",
        "name": "serviceRequestId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sort": {
        "description": "The sort parameter is used to control the sorting of the returned results.  The sort parameter can appear multiple times in the query string, and is either of the form sort=<include>:<properties> or sort=<properties>, where <properties> is a comma-separated list of properties to sort on and <include> represents the name of an included resource.  Property names can be prefixed with '-' to specify a descending sort on that property, otherwise the default is an ascending sort.  The set of valid sort property names depends on the specific endpoint being requested. For example, ?sort=priority,-dueDate will specify a primary sort on priority (ascending) and a secondary sort on dueDate (descending).  ?include=activities&sort=activities:priority,-dueDate specifies the same sort values, but applies them to the included \"activities\" list rather than to the primary resource. <include> can also represent a nested included resource, such as sort=activities.notes:dueDate.",
        "explode": true,
        "in": "query",
        "name": "sort",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "transactionId": {
        "description": "The identifier for the transaction",
        "in": "path",
        "name": "transactionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "vehicleRiskUnitId": {
        "description": "The identifier for the vehicle risk unit",
        "in": "path",
        "name": "vehicleRiskUnitId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Activity": {
        "properties": {
          "activityPattern": {
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true
          },
          "activityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ActivityType"
          },
          "approvalIssue": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "approvalRationale": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "approved": {
            "readOnly": true,
            "type": "boolean"
          },
          "assignedByUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignedGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true
          },
          "assignedQueue": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true
          },
          "assignedUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignmentStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "AssignmentStatus"
          },
          "autopilotHandlingDecision": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "AutopilotHandlingDecision"
          },
          "autopilotId": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "autopilotPurpose": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "AutopilotPurpose"
          },
          "closeDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "closeUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "coverageIssues": {
            "items": {
              "$ref": "#/components/schemas/CoverageIssue"
            },
            "type": "array",
            "x-gw-createOnly": true
          },
          "createTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "dueDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "escalated": {
            "readOnly": true,
            "type": "boolean"
          },
          "escalationDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "externallyOwned": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "importance": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ImportanceLevel"
          },
          "initialAssignment": {
            "$ref": "#/components/schemas/Assignee",
            "x-gw-createOnly": true
          },
          "mandatory": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Priority"
          },
          "recurring": {
            "type": "boolean"
          },
          "startDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ActivityStatus"
          },
          "subject": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "autopilotHandlingDecision",
          "autopilotId",
          "autopilotPurpose",
          "closeDate",
          "dueDate",
          "escalated",
          "externallyOwned",
          "priority",
          "status",
          "subject"
        ],
        "x-gw-sortable": [
          "assignedUser",
          "dueDate",
          "escalated",
          "priority",
          "status",
          "subject"
        ]
      },
      "ActivityData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Activity"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ActivityList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ActivityData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActivityPattern": {
        "properties": {
          "activityClass": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ActivityClass"
          },
          "activityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ActivityType"
          },
          "availableForClosedClaims": {
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-filterBy": [
              "activityType"
            ],
            "x-gw-typelist": "ActivityCategory"
          },
          "claimLossType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "LossType"
          },
          "code": {
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true
          },
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "dueDate": {
            "description": "The default dueDate for activities created from this pattern, calculated based on the current date and time",
            "format": "date-time",
            "type": "string"
          },
          "escalationDate": {
            "description": "The default escalationDate for activities created from this pattern, calculated based on the current date and time",
            "format": "date-time",
            "type": "string"
          },
          "externallyOwned": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "importance": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ImportanceLevel"
          },
          "mandatory": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "The default priority for activities created from this pattern",
            "x-gw-typelist": "Priority"
          },
          "recurring": {
            "type": "boolean"
          },
          "subject": {
            "description": "The default subject for activities created from this pattern",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "activityClass",
          "activityType",
          "category"
        ],
        "x-gw-sortable": [
          "category",
          "code",
          "priority"
        ]
      },
      "ActivityPatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ActivityPattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ActivityPatternList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ActivityPatternData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActivityRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ActivityResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ActivityData"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          }
        },
        "type": "object"
      },
      "ActivityResponseInclusions": {
        "properties": {
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdditionalInfo": {
        "properties": {
          "propertyName": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "discriminator": {
          "mapping": {
            "AD": "#/components/schemas/Address_Group0",
            "AE": "#/components/schemas/Address_AE",
            "AF": "#/components/schemas/Address_Group0",
            "AG": "#/components/schemas/Address_AG",
            "AI": "#/components/schemas/Address_Group0",
            "AL": "#/components/schemas/Address_Group0",
            "AM": "#/components/schemas/Address_Group3",
            "AO": "#/components/schemas/Address_Group2",
            "AQ": "#/components/schemas/Address_Group2",
            "AR": "#/components/schemas/Address_Group3",
            "AS": "#/components/schemas/Address_Group1",
            "AT": "#/components/schemas/Address_Group4",
            "AU": "#/components/schemas/Address_Group1",
            "AW": "#/components/schemas/Address_Group2",
            "AZ": "#/components/schemas/Address_Group0",
            "BA": "#/components/schemas/Address_Group0",
            "BB": "#/components/schemas/Address_BB",
            "BD": "#/components/schemas/Address_Group0",
            "BE": "#/components/schemas/Address_Group4",
            "BF": "#/components/schemas/Address_Group6",
            "BG": "#/components/schemas/Address_Group0",
            "BH": "#/components/schemas/Address_Group0",
            "BI": "#/components/schemas/Address_Group2",
            "BJ": "#/components/schemas/Address_Group2",
            "BL": "#/components/schemas/Address_Group8",
            "BM": "#/components/schemas/Address_Group0",
            "BN": "#/components/schemas/Address_Group0",
            "BO": "#/components/schemas/Address_Group2",
            "BR": "#/components/schemas/Address_BR",
            "BS": "#/components/schemas/Address_Group5",
            "BT": "#/components/schemas/Address_Group0",
            "BV": "#/components/schemas/Address_Group2",
            "BW": "#/components/schemas/Address_Group2",
            "BY": "#/components/schemas/Address_Group3",
            "BZ": "#/components/schemas/Address_Group2",
            "CA": "#/components/schemas/Address_CA",
            "CC": "#/components/schemas/Address_Group3",
            "CD": "#/components/schemas/Address_Group2",
            "CF": "#/components/schemas/Address_Group2",
            "CG": "#/components/schemas/Address_Group2",
            "CH": "#/components/schemas/Address_Group4",
            "CI": "#/components/schemas/Address_Group6",
            "CK": "#/components/schemas/Address_Group2",
            "CL": "#/components/schemas/Address_Group3",
            "CM": "#/components/schemas/Address_Group2",
            "CN": "#/components/schemas/Address_CN",
            "CO": "#/components/schemas/Address_CO",
            "CR": "#/components/schemas/Address_Group7",
            "CV": "#/components/schemas/Address_CV",
            "CX": "#/components/schemas/Address_Group3",
            "CY": "#/components/schemas/Address_Group0",
            "CZ": "#/components/schemas/Address_Group0",
            "DE": "#/components/schemas/Address_Group4",
            "DJ": "#/components/schemas/Address_Group2",
            "DK": "#/components/schemas/Address_Group4",
            "DM": "#/components/schemas/Address_Group2",
            "DO": "#/components/schemas/Address_Group0",
            "DZ": "#/components/schemas/Address_Group0",
            "EC": "#/components/schemas/Address_Group0",
            "EE": "#/components/schemas/Address_Group0",
            "EG": "#/components/schemas/Address_Group3",
            "EH": "#/components/schemas/Address_Group0",
            "ER": "#/components/schemas/Address_Group2",
            "ES": "#/components/schemas/Address_Group10",
            "ET": "#/components/schemas/Address_Group0",
            "FI": "#/components/schemas/Address_Group4",
            "FJ": "#/components/schemas/Address_Group2",
            "FK": "#/components/schemas/Address_Group4",
            "FM": "#/components/schemas/Address_Group1",
            "FO": "#/components/schemas/Address_Group0",
            "FR": "#/components/schemas/Address_FR",
            "GA": "#/components/schemas/Address_Group2",
            "GB": "#/components/schemas/Address_Group4",
            "GD": "#/components/schemas/Address_Group2",
            "GE": "#/components/schemas/Address_Group0",
            "GF": "#/components/schemas/Address_Group8",
            "GH": "#/components/schemas/Address_Group2",
            "GI": "#/components/schemas/Address_GI",
            "GL": "#/components/schemas/Address_Group4",
            "GM": "#/components/schemas/Address_Group2",
            "GN": "#/components/schemas/Address_Group0",
            "GP": "#/components/schemas/Address_Group8",
            "GQ": "#/components/schemas/Address_Group2",
            "GR": "#/components/schemas/Address_Group4",
            "GS": "#/components/schemas/Address_Group4",
            "GT": "#/components/schemas/Address_Group0",
            "GU": "#/components/schemas/Address_Group1",
            "GW": "#/components/schemas/Address_Group0",
            "GY": "#/components/schemas/Address_Group2",
            "HK": "#/components/schemas/Address_HK",
            "HM": "#/components/schemas/Address_Group3",
            "HN": "#/components/schemas/Address_Group7",
            "HR": "#/components/schemas/Address_Group0",
            "HT": "#/components/schemas/Address_Group0",
            "HU": "#/components/schemas/Address_Group4",
            "ID": "#/components/schemas/Address_ID",
            "IE": "#/components/schemas/Address_IE",
            "IL": "#/components/schemas/Address_Group0",
            "IN": "#/components/schemas/Address_Group1",
            "IO": "#/components/schemas/Address_Group4",
            "IQ": "#/components/schemas/Address_Group7",
            "IR": "#/components/schemas/Address_Group9",
            "IS": "#/components/schemas/Address_Group0",
            "IT": "#/components/schemas/Address_Group10",
            "JM": "#/components/schemas/Address_JM",
            "JO": "#/components/schemas/Address_Group0",
            "JP": "#/components/schemas/Address_JP",
            "KE": "#/components/schemas/Address_Group0",
            "KG": "#/components/schemas/Address_Group0",
            "KH": "#/components/schemas/Address_Group0",
            "KI": "#/components/schemas/Address_Group5",
            "KM": "#/components/schemas/Address_Group2",
            "KN": "#/components/schemas/Address_KN",
            "KR": "#/components/schemas/Address_KR",
            "KW": "#/components/schemas/Address_Group0",
            "KY": "#/components/schemas/Address_KY",
            "KZ": "#/components/schemas/Address_Group3",
            "LA": "#/components/schemas/Address_Group0",
            "LB": "#/components/schemas/Address_Group0",
            "LC": "#/components/schemas/Address_Group2",
            "LI": "#/components/schemas/Address_Group4",
            "LK": "#/components/schemas/Address_Group0",
            "LR": "#/components/schemas/Address_Group0",
            "LS": "#/components/schemas/Address_Group0",
            "LT": "#/components/schemas/Address_Group0",
            "LU": "#/components/schemas/Address_Group4",
            "LV": "#/components/schemas/Address_Group0",
            "LY": "#/components/schemas/Address_Group2",
            "MA": "#/components/schemas/Address_Group0",
            "MC": "#/components/schemas/Address_MC",
            "MD": "#/components/schemas/Address_Group0",
            "ME": "#/components/schemas/Address_Group0",
            "MF": "#/components/schemas/Address_Group8",
            "MG": "#/components/schemas/Address_Group0",
            "MH": "#/components/schemas/Address_Group1",
            "MK": "#/components/schemas/Address_Group0",
            "ML": "#/components/schemas/Address_Group2",
            "MM": "#/components/schemas/Address_Group0",
            "MN": "#/components/schemas/Address_Group3",
            "MO": "#/components/schemas/Address_MO",
            "MP": "#/components/schemas/Address_Group1",
            "MQ": "#/components/schemas/Address_Group8",
            "MR": "#/components/schemas/Address_Group2",
            "MS": "#/components/schemas/Address_Group2",
            "MT": "#/components/schemas/Address_Group0",
            "MU": "#/components/schemas/Address_Group0",
            "MV": "#/components/schemas/Address_Group0",
            "MW": "#/components/schemas/Address_Group6",
            "MX": "#/components/schemas/Address_Group11",
            "MY": "#/components/schemas/Address_Group11",
            "MZ": "#/components/schemas/Address_Group0",
            "NA": "#/components/schemas/Address_Group2",
            "NC": "#/components/schemas/Address_Group8",
            "NE": "#/components/schemas/Address_Group0",
            "NF": "#/components/schemas/Address_Group3",
            "NG": "#/components/schemas/Address_NG",
            "NI": "#/components/schemas/Address_NI",
            "NL": "#/components/schemas/Address_Group4",
            "NO": "#/components/schemas/Address_Group4",
            "NP": "#/components/schemas/Address_Group0",
            "NR": "#/components/schemas/Address_NR",
            "NU": "#/components/schemas/Address_Group2",
            "NZ": "#/components/schemas/Address_Group12",
            "OM": "#/components/schemas/Address_Group0",
            "PA": "#/components/schemas/Address_Group13",
            "PE": "#/components/schemas/Address_Group3",
            "PF": "#/components/schemas/Address_PF",
            "PG": "#/components/schemas/Address_Group7",
            "PH": "#/components/schemas/Address_Group9",
            "PK": "#/components/schemas/Address_Group0",
            "PL": "#/components/schemas/Address_Group4",
            "PM": "#/components/schemas/Address_Group8",
            "PN": "#/components/schemas/Address_Group4",
            "PR": "#/components/schemas/Address_Group4",
            "PS": "#/components/schemas/Address_Group2",
            "PT": "#/components/schemas/Address_Group4",
            "PW": "#/components/schemas/Address_Group1",
            "PY": "#/components/schemas/Address_Group0",
            "QA": "#/components/schemas/Address_Group2",
            "RE": "#/components/schemas/Address_Group8",
            "RO": "#/components/schemas/Address_Group0",
            "RS": "#/components/schemas/Address_Group0",
            "RU": "#/components/schemas/Address_Group14",
            "RW": "#/components/schemas/Address_Group2",
            "SA": "#/components/schemas/Address_Group0",
            "SB": "#/components/schemas/Address_Group2",
            "SC": "#/components/schemas/Address_Group5",
            "SE": "#/components/schemas/Address_Group4",
            "SG": "#/components/schemas/Address_SG",
            "SH": "#/components/schemas/Address_Group4",
            "SI": "#/components/schemas/Address_Group0",
            "SJ": "#/components/schemas/Address_Group4",
            "SK": "#/components/schemas/Address_Group0",
            "SL": "#/components/schemas/Address_Group2",
            "SM": "#/components/schemas/Address_SM",
            "SN": "#/components/schemas/Address_Group0",
            "SO": "#/components/schemas/Address_Group7",
            "SR": "#/components/schemas/Address_Group13",
            "ST": "#/components/schemas/Address_Group2",
            "SV": "#/components/schemas/Address_Group7",
            "SZ": "#/components/schemas/Address_Group0",
            "TC": "#/components/schemas/Address_Group4",
            "TD": "#/components/schemas/Address_Group2",
            "TF": "#/components/schemas/Address_Group2",
            "TG": "#/components/schemas/Address_Group2",
            "TH": "#/components/schemas/Address_Group9",
            "TJ": "#/components/schemas/Address_Group0",
            "TK": "#/components/schemas/Address_Group2",
            "TL": "#/components/schemas/Address_Group2",
            "TM": "#/components/schemas/Address_Group0",
            "TN": "#/components/schemas/Address_Group0",
            "TO": "#/components/schemas/Address_Group2",
            "TR": "#/components/schemas/Address_TR",
            "TT": "#/components/schemas/Address_Group2",
            "TV": "#/components/schemas/Address_Group5",
            "TW": "#/components/schemas/Address_TW",
            "TZ": "#/components/schemas/Address_Group0",
            "UA": "#/components/schemas/Address_Group14",
            "UG": "#/components/schemas/Address_Group2",
            "UM": "#/components/schemas/Address_Group15",
            "US": "#/components/schemas/Address_US",
            "UY": "#/components/schemas/Address_Group3",
            "UZ": "#/components/schemas/Address_Group3",
            "VA": "#/components/schemas/Address_Group0",
            "VC": "#/components/schemas/Address_Group0",
            "VE": "#/components/schemas/Address_Group15",
            "VG": "#/components/schemas/Address_VG",
            "VI": "#/components/schemas/Address_Group1",
            "VN": "#/components/schemas/Address_Group3",
            "VU": "#/components/schemas/Address_Group2",
            "WF": "#/components/schemas/Address_Group8",
            "WS": "#/components/schemas/Address_Group2",
            "YE": "#/components/schemas/Address_Group2",
            "YT": "#/components/schemas/Address_Group8",
            "ZA": "#/components/schemas/Address_Group12",
            "ZM": "#/components/schemas/Address_Group0",
            "ZW": "#/components/schemas/Address_Group2"
          },
          "propertyName": "country"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/Address_AE"
          },
          {
            "$ref": "#/components/schemas/Address_AG"
          },
          {
            "$ref": "#/components/schemas/Address_BB"
          },
          {
            "$ref": "#/components/schemas/Address_BR"
          },
          {
            "$ref": "#/components/schemas/Address_CA"
          },
          {
            "$ref": "#/components/schemas/Address_CN"
          },
          {
            "$ref": "#/components/schemas/Address_CO"
          },
          {
            "$ref": "#/components/schemas/Address_CV"
          },
          {
            "$ref": "#/components/schemas/Address_FR"
          },
          {
            "$ref": "#/components/schemas/Address_GI"
          },
          {
            "$ref": "#/components/schemas/Address_Group0"
          },
          {
            "$ref": "#/components/schemas/Address_Group1"
          },
          {
            "$ref": "#/components/schemas/Address_Group10"
          },
          {
            "$ref": "#/components/schemas/Address_Group11"
          },
          {
            "$ref": "#/components/schemas/Address_Group12"
          },
          {
            "$ref": "#/components/schemas/Address_Group13"
          },
          {
            "$ref": "#/components/schemas/Address_Group14"
          },
          {
            "$ref": "#/components/schemas/Address_Group15"
          },
          {
            "$ref": "#/components/schemas/Address_Group2"
          },
          {
            "$ref": "#/components/schemas/Address_Group3"
          },
          {
            "$ref": "#/components/schemas/Address_Group4"
          },
          {
            "$ref": "#/components/schemas/Address_Group5"
          },
          {
            "$ref": "#/components/schemas/Address_Group6"
          },
          {
            "$ref": "#/components/schemas/Address_Group7"
          },
          {
            "$ref": "#/components/schemas/Address_Group8"
          },
          {
            "$ref": "#/components/schemas/Address_Group9"
          },
          {
            "$ref": "#/components/schemas/Address_HK"
          },
          {
            "$ref": "#/components/schemas/Address_ID"
          },
          {
            "$ref": "#/components/schemas/Address_IE"
          },
          {
            "$ref": "#/components/schemas/Address_JM"
          },
          {
            "$ref": "#/components/schemas/Address_JP"
          },
          {
            "$ref": "#/components/schemas/Address_KN"
          },
          {
            "$ref": "#/components/schemas/Address_KR"
          },
          {
            "$ref": "#/components/schemas/Address_KY"
          },
          {
            "$ref": "#/components/schemas/Address_MC"
          },
          {
            "$ref": "#/components/schemas/Address_MO"
          },
          {
            "$ref": "#/components/schemas/Address_NG"
          },
          {
            "$ref": "#/components/schemas/Address_NI"
          },
          {
            "$ref": "#/components/schemas/Address_NR"
          },
          {
            "$ref": "#/components/schemas/Address_PF"
          },
          {
            "$ref": "#/components/schemas/Address_SG"
          },
          {
            "$ref": "#/components/schemas/Address_SM"
          },
          {
            "$ref": "#/components/schemas/Address_TR"
          },
          {
            "$ref": "#/components/schemas/Address_TW"
          },
          {
            "$ref": "#/components/schemas/Address_US"
          },
          {
            "$ref": "#/components/schemas/Address_VG"
          }
        ]
      },
      "Address_AE": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "emirate": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "emirate"
        ]
      },
      "Address_AG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_BB": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BB"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_BR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_CA": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_CN": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_CO": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CO"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "department"
        ]
      },
      "Address_CV": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_FR": {
        "properties": {
          "CEDEX": {
            "maxLength": 2,
            "nullable": true,
            "type": "string"
          },
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "FR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_GI": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "GI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_Group0": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AD",
              "AF",
              "AI",
              "AL",
              "AZ",
              "BA",
              "BD",
              "BG",
              "BH",
              "BM",
              "BN",
              "BT",
              "CY",
              "CZ",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EH",
              "ET",
              "FO",
              "GE",
              "GN",
              "GT",
              "GW",
              "HR",
              "HT",
              "IL",
              "IS",
              "JO",
              "KE",
              "KG",
              "KH",
              "KW",
              "LA",
              "LB",
              "LK",
              "LR",
              "LS",
              "LT",
              "LV",
              "MA",
              "MD",
              "ME",
              "MG",
              "MK",
              "MM",
              "MT",
              "MU",
              "MV",
              "MZ",
              "NE",
              "NP",
              "OM",
              "PK",
              "PY",
              "RO",
              "RS",
              "SA",
              "SI",
              "SK",
              "SN",
              "SZ",
              "TJ",
              "TM",
              "TN",
              "TZ",
              "VA",
              "VC",
              "ZM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group1": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AS",
              "AU",
              "FM",
              "GU",
              "IN",
              "MH",
              "MP",
              "PW",
              "VI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_Group10": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "ES",
              "IT"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "Address_Group11": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MX",
              "MY"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group12": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NZ",
              "ZA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group13": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "PA",
              "SR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group14": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "RU",
              "UA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "oblast": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "oblast",
          "postalCode"
        ]
      },
      "Address_Group15": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "UM",
              "VE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "state"
        ]
      },
      "Address_Group2": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AO",
              "AQ",
              "AW",
              "BI",
              "BJ",
              "BO",
              "BV",
              "BW",
              "BZ",
              "CD",
              "CF",
              "CG",
              "CK",
              "CM",
              "DJ",
              "DM",
              "ER",
              "FJ",
              "GA",
              "GD",
              "GH",
              "GM",
              "GQ",
              "GY",
              "KM",
              "LC",
              "LY",
              "ML",
              "MR",
              "MS",
              "NA",
              "NU",
              "PS",
              "QA",
              "RW",
              "SB",
              "SL",
              "ST",
              "TD",
              "TF",
              "TG",
              "TK",
              "TL",
              "TO",
              "TT",
              "UG",
              "VU",
              "WS",
              "YE",
              "ZW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group3": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AM",
              "AR",
              "BY",
              "CC",
              "CL",
              "CX",
              "EG",
              "HM",
              "KZ",
              "MN",
              "NF",
              "PE",
              "UY",
              "UZ",
              "VN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group4": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AT",
              "BE",
              "CH",
              "DE",
              "DK",
              "FI",
              "FK",
              "GB",
              "GL",
              "GR",
              "GS",
              "HU",
              "IO",
              "LI",
              "LU",
              "NL",
              "NO",
              "PL",
              "PN",
              "PR",
              "PT",
              "SE",
              "SH",
              "SJ",
              "TC"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group5": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BS",
              "KI",
              "SC",
              "TV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group6": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BF",
              "CI",
              "MW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_Group7": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CR",
              "HN",
              "IQ",
              "PG",
              "SO",
              "SV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "province"
        ]
      },
      "Address_Group8": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BL",
              "GF",
              "GP",
              "MF",
              "MQ",
              "NC",
              "PM",
              "RE",
              "WF",
              "YT"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_Group9": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "IR",
              "PH",
              "TH"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_HK": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "area": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "HK"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "area"
        ]
      },
      "Address_ID": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "ID"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "province"
        ]
      },
      "Address_IE": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "IE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_JM": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "JM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "parish"
        ]
      },
      "Address_JP": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine1Kanji": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2Kanji": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "cityKanji": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "JP"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "prefecture": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "prefecture"
        ]
      },
      "Address_KN": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island"
        ]
      },
      "Address_KR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "do_si",
          "postalCode"
        ]
      },
      "Address_KY": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KY"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "island"
        ]
      },
      "Address_MC": {
        "properties": {
          "CEDEX": {
            "maxLength": 2,
            "nullable": true,
            "type": "string"
          },
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MC"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_MO": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MO"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Address_NG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_NI": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "Address_NR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "district"
        ]
      },
      "Address_PF": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "PF"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island",
          "postalCode"
        ]
      },
      "Address_SG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "SG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "Address_SM": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "SM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "Address_TR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "TR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "Address_TW": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "TW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "county",
          "postalCode"
        ]
      },
      "Address_US": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "US"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "Address_VG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "VG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "spatialPoint": {
            "$ref": "#/components/schemas/SpatialPoint",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "Assignee": {
        "properties": {
          "autoAssign": {
            "type": "boolean"
          },
          "claimOwner": {
            "type": "boolean"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "queueId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssigneeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Assignee"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "AssigneeList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AssigneeData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BatchRequest": {
        "description": "Defines the structure of a batch request, which consists of an array of sub-requests",
        "properties": {
          "requests": {
            "description": "The array of sub-requests",
            "items": {
              "$ref": "#/components/schemas/BatchSubRequest"
            },
            "type": "array"
          }
        },
        "required": [
          "requests"
        ],
        "type": "object"
      },
      "BatchResponse": {
        "description": "Defines the structure of the response to a batch request.  The 'responses' array will have one element for every entry in the 'requests' array, and responses will appear in the same order.",
        "properties": {
          "responses": {
            "description": "The array of sub-responses, appearing in the same order as the elements in the 'requests' array of the request",
            "items": {
              "$ref": "#/components/schemas/BatchSubResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchSubRequest": {
        "description": "Defines the structure of an individual sub-request of the batch request",
        "properties": {
          "body": {
            "description": "The body of the sub-request, if any",
            "type": "object"
          },
          "headers": {
            "description": "Defines headers that will be included as part of the sub-request.  Any headers defined using this property will override header values inherited from the main request.  Any headers present on the main request that are not defined in this array will be inherited when the sub-request is made, with the exception of the 'GW-Checksum' header.",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "type": "array"
          },
          "method": {
            "description": "The HTTP method for the sub-request",
            "enum": [
              "delete",
              "head",
              "get",
              "options",
              "patch",
              "post",
              "put"
            ],
            "type": "string"
          },
          "onFail": {
            "description": "Controls whether or not subsequent sub-requests are processed if this sub-request fails.  The default behavior, if unspecified, is to continue processing sub-request.  The 'abort' option specifies that all subsequent sub-requests will be skipped.",
            "enum": [
              "abort",
              "continue"
            ],
            "type": "string"
          },
          "path": {
            "description": "Specifies the path for the sub-request.  This path is relative to the root of the API hosting the batch endpoint.  For example, if the batch endpoint is <servlet>/rest/common/v1/batch, then a path of '/activities' will mean a request against <servlet>/rest/common/v1/activities.  The path must start with '/' and cannot contain whitespace.",
            "minLength": 1,
            "pattern": "^/[\\S]*$",
            "type": "string"
          },
          "query": {
            "description": "The query string to use for the sub-request, if any",
            "type": "string"
          }
        },
        "required": [
          "method",
          "path"
        ],
        "type": "object"
      },
      "BatchSubResponse": {
        "description": "Defines the format of the sub-response.  In addition to the properties listed here, the 'body' property will include the body of the response as a JSON object.",
        "properties": {
          "body": {
            "description": "The body of the response, if any",
            "type": "object"
          },
          "code": {
            "description": "The HTTP status code for the sub-response",
            "type": "integer"
          },
          "headers": {
            "description": "The headers returned for the sub-response",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "type": "array"
          },
          "skipped": {
            "description": "This property will be set to 'true' if the corresponding sub-request was not processed due to a prior failed request that specified the \"onFail\": \"abort\" option",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Building": {
        "properties": {
          "buildingNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "notes": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Claim": {
        "properties": {
          "arson": {
            "nullable": true,
            "type": "boolean"
          },
          "assignedByUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignedGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-referenceType": "Group"
          },
          "assignedQueue": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-referenceType": "AssignableQueue"
          },
          "assignedUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignmentStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "AssignmentStatus"
          },
          "claimNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "closeDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "closedOutcome": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimClosedOutcomeType"
          },
          "coverageInQuestion": {
            "type": "boolean"
          },
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "faultRating": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "FaultRating"
          },
          "filterPropertyRiskUnits": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-gw-createOnly": true
          },
          "filterVehicleRiskUnits": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-gw-createOnly": true
          },
          "fireDepartmentResponded": {
            "nullable": true,
            "type": "boolean"
          },
          "fireSource": {
            "maxLength": 250,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "flagged": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "FlaggedType"
          },
          "hasWaterBeenTurnedOff": {
            "nullable": true,
            "type": "boolean"
          },
          "howReported": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "HowReportedType"
          },
          "howWasFireDiscovered": {
            "maxLength": 250,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "incidentOnly": {
            "type": "boolean"
          },
          "insured": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "readOnly": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "isAnyoneInjured": {
            "nullable": true,
            "type": "boolean"
          },
          "isHomeHabitable": {
            "nullable": true,
            "type": "boolean"
          },
          "isHomeSecure": {
            "nullable": true,
            "type": "boolean"
          },
          "isRoofProtected": {
            "nullable": true,
            "type": "boolean"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Jurisdiction"
          },
          "lobCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "lossType"
            ],
            "x-gw-typelist": "LOBCode"
          },
          "lossCause": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "lossType"
            ],
            "x-gw-typelist": "LossCause"
          },
          "lossDate": {
            "format": "date-time",
            "type": "string",
            "x-gw-before": "now",
            "x-gw-createOnly": true
          },
          "lossLocation": {
            "$ref": "#/components/schemas/ClaimAddress",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "lossType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "LossType"
          },
          "mainContact": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "policyAddresses": {
            "items": {
              "$ref": "#/components/schemas/ClaimAddress"
            },
            "readOnly": true,
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "policyNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true
          },
          "reportedByType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "PersonRelationType"
          },
          "reportedDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string",
            "x-gw-before": "now"
          },
          "reporter": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "nullable": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "segment": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimSegment"
          },
          "siuStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "SIUStatus"
          },
          "smokeDamageOnly": {
            "nullable": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimState"
          },
          "strategy": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimStrategy"
          },
          "validationLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ValidationLevel"
          },
          "waterSource": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "WaterSource"
          },
          "witnesses": {
            "items": {
              "$ref": "#/components/schemas/Witness"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "claimNumber",
          "lossDate",
          "state"
        ],
        "x-gw-requiredForCreate": [
          "lossDate",
          "policyNumber"
        ],
        "x-gw-sortable": [
          "assignedUser",
          "claimNumber",
          "lossDate"
        ]
      },
      "ClaimAddress": {
        "discriminator": {
          "mapping": {
            "AD": "#/components/schemas/ClaimAddress_Group0",
            "AE": "#/components/schemas/ClaimAddress_AE",
            "AF": "#/components/schemas/ClaimAddress_Group0",
            "AG": "#/components/schemas/ClaimAddress_AG",
            "AI": "#/components/schemas/ClaimAddress_Group0",
            "AL": "#/components/schemas/ClaimAddress_Group0",
            "AM": "#/components/schemas/ClaimAddress_Group3",
            "AO": "#/components/schemas/ClaimAddress_Group2",
            "AQ": "#/components/schemas/ClaimAddress_Group2",
            "AR": "#/components/schemas/ClaimAddress_Group3",
            "AS": "#/components/schemas/ClaimAddress_Group1",
            "AT": "#/components/schemas/ClaimAddress_Group4",
            "AU": "#/components/schemas/ClaimAddress_Group1",
            "AW": "#/components/schemas/ClaimAddress_Group2",
            "AZ": "#/components/schemas/ClaimAddress_Group0",
            "BA": "#/components/schemas/ClaimAddress_Group0",
            "BB": "#/components/schemas/ClaimAddress_BB",
            "BD": "#/components/schemas/ClaimAddress_Group0",
            "BE": "#/components/schemas/ClaimAddress_Group4",
            "BF": "#/components/schemas/ClaimAddress_Group6",
            "BG": "#/components/schemas/ClaimAddress_Group0",
            "BH": "#/components/schemas/ClaimAddress_Group0",
            "BI": "#/components/schemas/ClaimAddress_Group2",
            "BJ": "#/components/schemas/ClaimAddress_Group2",
            "BL": "#/components/schemas/ClaimAddress_Group8",
            "BM": "#/components/schemas/ClaimAddress_Group0",
            "BN": "#/components/schemas/ClaimAddress_Group0",
            "BO": "#/components/schemas/ClaimAddress_Group2",
            "BR": "#/components/schemas/ClaimAddress_BR",
            "BS": "#/components/schemas/ClaimAddress_Group5",
            "BT": "#/components/schemas/ClaimAddress_Group0",
            "BV": "#/components/schemas/ClaimAddress_Group2",
            "BW": "#/components/schemas/ClaimAddress_Group2",
            "BY": "#/components/schemas/ClaimAddress_Group3",
            "BZ": "#/components/schemas/ClaimAddress_Group2",
            "CA": "#/components/schemas/ClaimAddress_CA",
            "CC": "#/components/schemas/ClaimAddress_Group3",
            "CD": "#/components/schemas/ClaimAddress_Group2",
            "CF": "#/components/schemas/ClaimAddress_Group2",
            "CG": "#/components/schemas/ClaimAddress_Group2",
            "CH": "#/components/schemas/ClaimAddress_Group4",
            "CI": "#/components/schemas/ClaimAddress_Group6",
            "CK": "#/components/schemas/ClaimAddress_Group2",
            "CL": "#/components/schemas/ClaimAddress_Group3",
            "CM": "#/components/schemas/ClaimAddress_Group2",
            "CN": "#/components/schemas/ClaimAddress_CN",
            "CO": "#/components/schemas/ClaimAddress_CO",
            "CR": "#/components/schemas/ClaimAddress_Group7",
            "CV": "#/components/schemas/ClaimAddress_CV",
            "CX": "#/components/schemas/ClaimAddress_Group3",
            "CY": "#/components/schemas/ClaimAddress_Group0",
            "CZ": "#/components/schemas/ClaimAddress_Group0",
            "DE": "#/components/schemas/ClaimAddress_Group4",
            "DJ": "#/components/schemas/ClaimAddress_Group2",
            "DK": "#/components/schemas/ClaimAddress_Group4",
            "DM": "#/components/schemas/ClaimAddress_Group2",
            "DO": "#/components/schemas/ClaimAddress_Group0",
            "DZ": "#/components/schemas/ClaimAddress_Group0",
            "EC": "#/components/schemas/ClaimAddress_Group0",
            "EE": "#/components/schemas/ClaimAddress_Group0",
            "EG": "#/components/schemas/ClaimAddress_Group3",
            "EH": "#/components/schemas/ClaimAddress_Group0",
            "ER": "#/components/schemas/ClaimAddress_Group2",
            "ES": "#/components/schemas/ClaimAddress_Group10",
            "ET": "#/components/schemas/ClaimAddress_Group0",
            "FI": "#/components/schemas/ClaimAddress_Group4",
            "FJ": "#/components/schemas/ClaimAddress_Group2",
            "FK": "#/components/schemas/ClaimAddress_Group4",
            "FM": "#/components/schemas/ClaimAddress_Group1",
            "FO": "#/components/schemas/ClaimAddress_Group0",
            "FR": "#/components/schemas/ClaimAddress_FR",
            "GA": "#/components/schemas/ClaimAddress_Group2",
            "GB": "#/components/schemas/ClaimAddress_Group4",
            "GD": "#/components/schemas/ClaimAddress_Group2",
            "GE": "#/components/schemas/ClaimAddress_Group0",
            "GF": "#/components/schemas/ClaimAddress_Group8",
            "GH": "#/components/schemas/ClaimAddress_Group2",
            "GI": "#/components/schemas/ClaimAddress_GI",
            "GL": "#/components/schemas/ClaimAddress_Group4",
            "GM": "#/components/schemas/ClaimAddress_Group2",
            "GN": "#/components/schemas/ClaimAddress_Group0",
            "GP": "#/components/schemas/ClaimAddress_Group8",
            "GQ": "#/components/schemas/ClaimAddress_Group2",
            "GR": "#/components/schemas/ClaimAddress_Group4",
            "GS": "#/components/schemas/ClaimAddress_Group4",
            "GT": "#/components/schemas/ClaimAddress_Group0",
            "GU": "#/components/schemas/ClaimAddress_Group1",
            "GW": "#/components/schemas/ClaimAddress_Group0",
            "GY": "#/components/schemas/ClaimAddress_Group2",
            "HK": "#/components/schemas/ClaimAddress_HK",
            "HM": "#/components/schemas/ClaimAddress_Group3",
            "HN": "#/components/schemas/ClaimAddress_Group7",
            "HR": "#/components/schemas/ClaimAddress_Group0",
            "HT": "#/components/schemas/ClaimAddress_Group0",
            "HU": "#/components/schemas/ClaimAddress_Group4",
            "ID": "#/components/schemas/ClaimAddress_ID",
            "IE": "#/components/schemas/ClaimAddress_IE",
            "IL": "#/components/schemas/ClaimAddress_Group0",
            "IN": "#/components/schemas/ClaimAddress_Group1",
            "IO": "#/components/schemas/ClaimAddress_Group4",
            "IQ": "#/components/schemas/ClaimAddress_Group7",
            "IR": "#/components/schemas/ClaimAddress_Group9",
            "IS": "#/components/schemas/ClaimAddress_Group0",
            "IT": "#/components/schemas/ClaimAddress_Group10",
            "JM": "#/components/schemas/ClaimAddress_JM",
            "JO": "#/components/schemas/ClaimAddress_Group0",
            "JP": "#/components/schemas/ClaimAddress_JP",
            "KE": "#/components/schemas/ClaimAddress_Group0",
            "KG": "#/components/schemas/ClaimAddress_Group0",
            "KH": "#/components/schemas/ClaimAddress_Group0",
            "KI": "#/components/schemas/ClaimAddress_Group5",
            "KM": "#/components/schemas/ClaimAddress_Group2",
            "KN": "#/components/schemas/ClaimAddress_KN",
            "KR": "#/components/schemas/ClaimAddress_KR",
            "KW": "#/components/schemas/ClaimAddress_Group0",
            "KY": "#/components/schemas/ClaimAddress_KY",
            "KZ": "#/components/schemas/ClaimAddress_Group3",
            "LA": "#/components/schemas/ClaimAddress_Group0",
            "LB": "#/components/schemas/ClaimAddress_Group0",
            "LC": "#/components/schemas/ClaimAddress_Group2",
            "LI": "#/components/schemas/ClaimAddress_Group4",
            "LK": "#/components/schemas/ClaimAddress_Group0",
            "LR": "#/components/schemas/ClaimAddress_Group0",
            "LS": "#/components/schemas/ClaimAddress_Group0",
            "LT": "#/components/schemas/ClaimAddress_Group0",
            "LU": "#/components/schemas/ClaimAddress_Group4",
            "LV": "#/components/schemas/ClaimAddress_Group0",
            "LY": "#/components/schemas/ClaimAddress_Group2",
            "MA": "#/components/schemas/ClaimAddress_Group0",
            "MC": "#/components/schemas/ClaimAddress_MC",
            "MD": "#/components/schemas/ClaimAddress_Group0",
            "ME": "#/components/schemas/ClaimAddress_Group0",
            "MF": "#/components/schemas/ClaimAddress_Group8",
            "MG": "#/components/schemas/ClaimAddress_Group0",
            "MH": "#/components/schemas/ClaimAddress_Group1",
            "MK": "#/components/schemas/ClaimAddress_Group0",
            "ML": "#/components/schemas/ClaimAddress_Group2",
            "MM": "#/components/schemas/ClaimAddress_Group0",
            "MN": "#/components/schemas/ClaimAddress_Group3",
            "MO": "#/components/schemas/ClaimAddress_MO",
            "MP": "#/components/schemas/ClaimAddress_Group1",
            "MQ": "#/components/schemas/ClaimAddress_Group8",
            "MR": "#/components/schemas/ClaimAddress_Group2",
            "MS": "#/components/schemas/ClaimAddress_Group2",
            "MT": "#/components/schemas/ClaimAddress_Group0",
            "MU": "#/components/schemas/ClaimAddress_Group0",
            "MV": "#/components/schemas/ClaimAddress_Group0",
            "MW": "#/components/schemas/ClaimAddress_Group6",
            "MX": "#/components/schemas/ClaimAddress_Group11",
            "MY": "#/components/schemas/ClaimAddress_Group11",
            "MZ": "#/components/schemas/ClaimAddress_Group0",
            "NA": "#/components/schemas/ClaimAddress_Group2",
            "NC": "#/components/schemas/ClaimAddress_Group8",
            "NE": "#/components/schemas/ClaimAddress_Group0",
            "NF": "#/components/schemas/ClaimAddress_Group3",
            "NG": "#/components/schemas/ClaimAddress_NG",
            "NI": "#/components/schemas/ClaimAddress_NI",
            "NL": "#/components/schemas/ClaimAddress_Group4",
            "NO": "#/components/schemas/ClaimAddress_Group4",
            "NP": "#/components/schemas/ClaimAddress_Group0",
            "NR": "#/components/schemas/ClaimAddress_NR",
            "NU": "#/components/schemas/ClaimAddress_Group2",
            "NZ": "#/components/schemas/ClaimAddress_Group12",
            "OM": "#/components/schemas/ClaimAddress_Group0",
            "PA": "#/components/schemas/ClaimAddress_Group13",
            "PE": "#/components/schemas/ClaimAddress_Group3",
            "PF": "#/components/schemas/ClaimAddress_PF",
            "PG": "#/components/schemas/ClaimAddress_Group7",
            "PH": "#/components/schemas/ClaimAddress_Group9",
            "PK": "#/components/schemas/ClaimAddress_Group0",
            "PL": "#/components/schemas/ClaimAddress_Group4",
            "PM": "#/components/schemas/ClaimAddress_Group8",
            "PN": "#/components/schemas/ClaimAddress_Group4",
            "PR": "#/components/schemas/ClaimAddress_Group4",
            "PS": "#/components/schemas/ClaimAddress_Group2",
            "PT": "#/components/schemas/ClaimAddress_Group4",
            "PW": "#/components/schemas/ClaimAddress_Group1",
            "PY": "#/components/schemas/ClaimAddress_Group0",
            "QA": "#/components/schemas/ClaimAddress_Group2",
            "RE": "#/components/schemas/ClaimAddress_Group8",
            "RO": "#/components/schemas/ClaimAddress_Group0",
            "RS": "#/components/schemas/ClaimAddress_Group0",
            "RU": "#/components/schemas/ClaimAddress_Group14",
            "RW": "#/components/schemas/ClaimAddress_Group2",
            "SA": "#/components/schemas/ClaimAddress_Group0",
            "SB": "#/components/schemas/ClaimAddress_Group2",
            "SC": "#/components/schemas/ClaimAddress_Group5",
            "SE": "#/components/schemas/ClaimAddress_Group4",
            "SG": "#/components/schemas/ClaimAddress_SG",
            "SH": "#/components/schemas/ClaimAddress_Group4",
            "SI": "#/components/schemas/ClaimAddress_Group0",
            "SJ": "#/components/schemas/ClaimAddress_Group4",
            "SK": "#/components/schemas/ClaimAddress_Group0",
            "SL": "#/components/schemas/ClaimAddress_Group2",
            "SM": "#/components/schemas/ClaimAddress_SM",
            "SN": "#/components/schemas/ClaimAddress_Group0",
            "SO": "#/components/schemas/ClaimAddress_Group7",
            "SR": "#/components/schemas/ClaimAddress_Group13",
            "ST": "#/components/schemas/ClaimAddress_Group2",
            "SV": "#/components/schemas/ClaimAddress_Group7",
            "SZ": "#/components/schemas/ClaimAddress_Group0",
            "TC": "#/components/schemas/ClaimAddress_Group4",
            "TD": "#/components/schemas/ClaimAddress_Group2",
            "TF": "#/components/schemas/ClaimAddress_Group2",
            "TG": "#/components/schemas/ClaimAddress_Group2",
            "TH": "#/components/schemas/ClaimAddress_Group9",
            "TJ": "#/components/schemas/ClaimAddress_Group0",
            "TK": "#/components/schemas/ClaimAddress_Group2",
            "TL": "#/components/schemas/ClaimAddress_Group2",
            "TM": "#/components/schemas/ClaimAddress_Group0",
            "TN": "#/components/schemas/ClaimAddress_Group0",
            "TO": "#/components/schemas/ClaimAddress_Group2",
            "TR": "#/components/schemas/ClaimAddress_TR",
            "TT": "#/components/schemas/ClaimAddress_Group2",
            "TV": "#/components/schemas/ClaimAddress_Group5",
            "TW": "#/components/schemas/ClaimAddress_TW",
            "TZ": "#/components/schemas/ClaimAddress_Group0",
            "UA": "#/components/schemas/ClaimAddress_Group14",
            "UG": "#/components/schemas/ClaimAddress_Group2",
            "UM": "#/components/schemas/ClaimAddress_Group15",
            "US": "#/components/schemas/ClaimAddress_US",
            "UY": "#/components/schemas/ClaimAddress_Group3",
            "UZ": "#/components/schemas/ClaimAddress_Group3",
            "VA": "#/components/schemas/ClaimAddress_Group0",
            "VC": "#/components/schemas/ClaimAddress_Group0",
            "VE": "#/components/schemas/ClaimAddress_Group15",
            "VG": "#/components/schemas/ClaimAddress_VG",
            "VI": "#/components/schemas/ClaimAddress_Group1",
            "VN": "#/components/schemas/ClaimAddress_Group3",
            "VU": "#/components/schemas/ClaimAddress_Group2",
            "WF": "#/components/schemas/ClaimAddress_Group8",
            "WS": "#/components/schemas/ClaimAddress_Group2",
            "YE": "#/components/schemas/ClaimAddress_Group2",
            "YT": "#/components/schemas/ClaimAddress_Group8",
            "ZA": "#/components/schemas/ClaimAddress_Group12",
            "ZM": "#/components/schemas/ClaimAddress_Group0",
            "ZW": "#/components/schemas/ClaimAddress_Group2"
          },
          "propertyName": "country"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ClaimAddress_AE"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_AG"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_BB"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_BR"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_CA"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_CN"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_CO"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_CV"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_FR"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_GI"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group0"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group1"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group10"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group11"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group12"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group13"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group14"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group15"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group2"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group3"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group4"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group5"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group6"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group7"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group8"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_Group9"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_HK"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_ID"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_IE"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_JM"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_JP"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_KN"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_KR"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_KY"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_MC"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_MO"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_NG"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_NI"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_NR"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_PF"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_SG"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_SM"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_TR"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_TW"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_US"
          },
          {
            "$ref": "#/components/schemas/ClaimAddress_VG"
          }
        ]
      },
      "ClaimAddress_AE": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "emirate": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "emirate"
        ]
      },
      "ClaimAddress_AG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "ClaimAddress_BB": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BB"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_BR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "ClaimAddress_CA": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "ClaimAddress_CN": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "ClaimAddress_CO": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CO"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "department"
        ]
      },
      "ClaimAddress_CV": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_FR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "FR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_GI": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "GI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "ClaimAddress_Group0": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AD",
              "AF",
              "AI",
              "AL",
              "AZ",
              "BA",
              "BD",
              "BG",
              "BH",
              "BM",
              "BN",
              "BT",
              "CY",
              "CZ",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EH",
              "ET",
              "FO",
              "GE",
              "GN",
              "GT",
              "GW",
              "HR",
              "HT",
              "IL",
              "IS",
              "JO",
              "KE",
              "KG",
              "KH",
              "KW",
              "LA",
              "LB",
              "LK",
              "LR",
              "LS",
              "LT",
              "LV",
              "MA",
              "MD",
              "ME",
              "MG",
              "MK",
              "MM",
              "MT",
              "MU",
              "MV",
              "MZ",
              "NE",
              "NP",
              "OM",
              "PK",
              "PY",
              "RO",
              "RS",
              "SA",
              "SI",
              "SK",
              "SN",
              "SZ",
              "TJ",
              "TM",
              "TN",
              "TZ",
              "VA",
              "VC",
              "ZM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group1": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AS",
              "AU",
              "FM",
              "GU",
              "IN",
              "MH",
              "MP",
              "PW",
              "VI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "ClaimAddress_Group10": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "ES",
              "IT"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "province"
        ]
      },
      "ClaimAddress_Group11": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MX",
              "MY"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_Group12": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NZ",
              "ZA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_Group13": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "PA",
              "SR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group14": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "RU",
              "UA"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "oblast": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "oblast",
          "postalCode"
        ]
      },
      "ClaimAddress_Group15": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "UM",
              "VE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "state"
        ]
      },
      "ClaimAddress_Group2": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AO",
              "AQ",
              "AW",
              "BI",
              "BJ",
              "BO",
              "BV",
              "BW",
              "BZ",
              "CD",
              "CF",
              "CG",
              "CK",
              "CM",
              "DJ",
              "DM",
              "ER",
              "FJ",
              "GA",
              "GD",
              "GH",
              "GM",
              "GQ",
              "GY",
              "KM",
              "LC",
              "LY",
              "ML",
              "MR",
              "MS",
              "NA",
              "NU",
              "PS",
              "QA",
              "RW",
              "SB",
              "SL",
              "ST",
              "TD",
              "TF",
              "TG",
              "TK",
              "TL",
              "TO",
              "TT",
              "UG",
              "VU",
              "WS",
              "YE",
              "ZW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group3": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AM",
              "AR",
              "BY",
              "CC",
              "CL",
              "CX",
              "EG",
              "HM",
              "KZ",
              "MN",
              "NF",
              "PE",
              "UY",
              "UZ",
              "VN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group4": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "AT",
              "BE",
              "CH",
              "DE",
              "DK",
              "FI",
              "FK",
              "GB",
              "GL",
              "GR",
              "GS",
              "HU",
              "IO",
              "LI",
              "LU",
              "NL",
              "NO",
              "PL",
              "PN",
              "PR",
              "PT",
              "SE",
              "SH",
              "SJ",
              "TC"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_Group5": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BS",
              "KI",
              "SC",
              "TV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group6": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BF",
              "CI",
              "MW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_Group7": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "CR",
              "HN",
              "IQ",
              "PG",
              "SO",
              "SV"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "province"
        ]
      },
      "ClaimAddress_Group8": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "BL",
              "GF",
              "GP",
              "MF",
              "MQ",
              "NC",
              "PM",
              "RE",
              "WF",
              "YT"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_Group9": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "IR",
              "PH",
              "TH"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_HK": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "area": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "HK"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "area"
        ]
      },
      "ClaimAddress_ID": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "ID"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "province"
        ]
      },
      "ClaimAddress_IE": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "IE"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_JM": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "JM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "parish": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "parish"
        ]
      },
      "ClaimAddress_JP": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "JP"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "prefecture": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "prefecture"
        ]
      },
      "ClaimAddress_KN": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KN"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island"
        ]
      },
      "ClaimAddress_KR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "do_si",
          "postalCode"
        ]
      },
      "ClaimAddress_KY": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "KY"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "island"
        ]
      },
      "ClaimAddress_MC": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MC"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_MO": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "MO"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "ClaimAddress_NG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_NI": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NI"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "department": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city"
        ]
      },
      "ClaimAddress_NR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "NR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "district"
        ]
      },
      "ClaimAddress_PF": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "PF"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "island": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "island",
          "postalCode"
        ]
      },
      "ClaimAddress_SG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "SG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "ClaimAddress_SM": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "SM"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "postalCode"
        ]
      },
      "ClaimAddress_TR": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "TR"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "province": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode"
        ]
      },
      "ClaimAddress_TW": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "TW"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "county",
          "postalCode"
        ]
      },
      "ClaimAddress_US": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "US"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "county": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "country"
            ],
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1",
          "city",
          "postalCode",
          "state"
        ]
      },
      "ClaimAddress_VG": {
        "properties": {
          "addressLine1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "city": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "country": {
            "enum": [
              "VG"
            ],
            "nullable": true,
            "type": "string",
            "x-gw-type": "typekey.Country"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "policyAddress": {
            "readOnly": true,
            "type": "boolean"
          },
          "policyLabel": {
            "type": "string"
          },
          "postalCode": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForValidation": [
          "addressLine1"
        ]
      },
      "ClaimAssignee": {
        "properties": {
          "autoAssign": {
            "type": "boolean"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimAssigneeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimAssignee"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimAssignmentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimAssigneeData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimCloseRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimCloseRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimCloseRequestAttributes": {
        "properties": {
          "closedOutcome": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ClaimClosedOutcomeType"
          },
          "reason": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimCloseRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimCloseRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimContact": {
        "discriminator": {
          "mapping": {
            "Adjudicator": "#/components/schemas/ClaimContact_Person",
            "Attorney": "#/components/schemas/ClaimContact_Person",
            "AutoRepairShop": "#/components/schemas/ClaimContact_Company",
            "AutoTowingAgcy": "#/components/schemas/ClaimContact_Company",
            "Company": "#/components/schemas/ClaimContact_Company",
            "CompanyVendor": "#/components/schemas/ClaimContact_Company",
            "Doctor": "#/components/schemas/ClaimContact_Doctor",
            "LawFirm": "#/components/schemas/ClaimContact_Company",
            "LegalVenue": "#/components/schemas/ClaimContact_Place",
            "MedicalCareOrg": "#/components/schemas/ClaimContact_Company",
            "Person": "#/components/schemas/ClaimContact_Person",
            "PersonVendor": "#/components/schemas/ClaimContact_Person",
            "Place": "#/components/schemas/ClaimContact_Place",
            "UserContact": "#/components/schemas/ClaimContact_Person"
          },
          "propertyName": "contactSubtype"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ClaimContact_Company"
          },
          {
            "$ref": "#/components/schemas/ClaimContact_Doctor"
          },
          {
            "$ref": "#/components/schemas/ClaimContact_Person"
          },
          {
            "$ref": "#/components/schemas/ClaimContact_Place"
          }
        ]
      },
      "ClaimContactData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimContact"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimContactList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ClaimContactData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ClaimContact_Company": {
        "properties": {
          "addressBookUID": {
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "companyName": {
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "companyNameKanji": {
            "maxLength": 60,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "contactSubtype": {
            "enum": [
              "AutoRepairShop",
              "AutoTowingAgcy",
              "Company",
              "CompanyVendor",
              "LawFirm",
              "MedicalCareOrg"
            ],
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "editableRoles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "type": "array"
          },
          "emailAddress1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "emailAddress2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "readOnly": true,
            "type": "string"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "readOnly": true,
            "type": "array"
          },
          "taxId": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "contactSubtype"
        ]
      },
      "ClaimContact_Doctor": {
        "properties": {
          "addressBookUID": {
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "cellPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          },
          "contactSubtype": {
            "enum": [
              "Doctor"
            ],
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "dateOfBirth": {
            "format": "date",
            "nullable": true,
            "type": "string",
            "x-gw-before": "now"
          },
          "displayName": {
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "doctorSpecialty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "SpecialtyType"
          },
          "editableRoles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "type": "array"
          },
          "emailAddress1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "emailAddress2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "homePhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "licenseNumber": {
            "maxLength": 20,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "licenseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "Jurisdiction"
          },
          "medicalLicense": {
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "readOnly": true,
            "type": "string"
          },
          "primaryPhoneType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "PrimaryPhoneType"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "readOnly": true,
            "type": "array"
          },
          "taxId": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "contactSubtype"
        ]
      },
      "ClaimContact_Person": {
        "properties": {
          "addressBookUID": {
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "cellPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          },
          "contactSubtype": {
            "enum": [
              "Adjudicator",
              "Attorney",
              "Person",
              "PersonVendor",
              "UserContact"
            ],
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "dateOfBirth": {
            "format": "date",
            "nullable": true,
            "type": "string",
            "x-gw-before": "now"
          },
          "displayName": {
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "editableRoles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "type": "array"
          },
          "emailAddress1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "emailAddress2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "homePhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "licenseNumber": {
            "maxLength": 20,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "licenseState": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "Jurisdiction"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "readOnly": true,
            "type": "string"
          },
          "primaryPhoneType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "PrimaryPhoneType"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "readOnly": true,
            "type": "array"
          },
          "taxId": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "contactSubtype"
        ]
      },
      "ClaimContact_Place": {
        "properties": {
          "addressBookUID": {
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "contactSubtype": {
            "enum": [
              "LegalVenue",
              "Place"
            ],
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.Contact"
          },
          "displayName": {
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "editableRoles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "type": "array"
          },
          "emailAddress1": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "emailAddress2": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/Address",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LanguageType"
          },
          "primaryLocale": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LocaleType"
          },
          "primaryPhone": {
            "readOnly": true,
            "type": "string"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/ContactRole"
            },
            "readOnly": true,
            "type": "array"
          },
          "taxId": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "workPhone": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "contactSubtype"
        ]
      },
      "ClaimData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Claim"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimDocumentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimDocumentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentData"
          },
          "included": {
            "$ref": "#/components/schemas/DocumentResponseInclusions"
          }
        },
        "type": "object"
      },
      "ClaimReference": {
        "properties": {
          "claimNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "ClaimRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimRequestInclusions": {
        "properties": {
          "ClaimContact": {
            "items": {
              "$ref": "#/components/schemas/ClaimContactData"
            },
            "type": "array"
          },
          "DwellingIncident": {
            "items": {
              "$ref": "#/components/schemas/DwellingIncidentData"
            },
            "type": "array"
          },
          "Exposure": {
            "items": {
              "$ref": "#/components/schemas/ExposureData"
            },
            "type": "array"
          },
          "FixedPropertyIncident": {
            "items": {
              "$ref": "#/components/schemas/FixedPropertyIncidentData"
            },
            "type": "array"
          },
          "InjuryIncident": {
            "items": {
              "$ref": "#/components/schemas/InjuryIncidentData"
            },
            "type": "array"
          },
          "LivingExpensesIncident": {
            "items": {
              "$ref": "#/components/schemas/LivingExpensesIncidentData"
            },
            "type": "array"
          },
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          },
          "ServiceRequest": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestData"
            },
            "type": "array"
          },
          "VehicleIncident": {
            "items": {
              "$ref": "#/components/schemas/VehicleIncidentData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "ClaimResponseInclusions": {
        "properties": {
          "Activity": {
            "items": {
              "$ref": "#/components/schemas/ActivityData"
            },
            "type": "array"
          },
          "ActivityPattern": {
            "items": {
              "$ref": "#/components/schemas/ActivityPatternData"
            },
            "type": "array"
          },
          "ClaimContact": {
            "items": {
              "$ref": "#/components/schemas/ClaimContactData"
            },
            "type": "array"
          },
          "DwellingIncident": {
            "items": {
              "$ref": "#/components/schemas/DwellingIncidentData"
            },
            "type": "array"
          },
          "Endorsement": {
            "items": {
              "$ref": "#/components/schemas/EndorsementData"
            },
            "type": "array"
          },
          "Exposure": {
            "items": {
              "$ref": "#/components/schemas/ExposureData"
            },
            "type": "array"
          },
          "FixedPropertyIncident": {
            "items": {
              "$ref": "#/components/schemas/FixedPropertyIncidentData"
            },
            "type": "array"
          },
          "GenericRelation": {
            "items": {
              "$ref": "#/components/schemas/GenericRelationData"
            },
            "type": "array"
          },
          "InjuryIncident": {
            "items": {
              "$ref": "#/components/schemas/InjuryIncidentData"
            },
            "type": "array"
          },
          "LivingExpensesIncident": {
            "items": {
              "$ref": "#/components/schemas/LivingExpensesIncidentData"
            },
            "type": "array"
          },
          "LocationBasedRiskUnit": {
            "items": {
              "$ref": "#/components/schemas/LocationBasedRiskUnitData"
            },
            "type": "array"
          },
          "Note": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          },
          "Policy": {
            "items": {
              "$ref": "#/components/schemas/PolicyData"
            },
            "type": "array"
          },
          "PolicyCoverage": {
            "items": {
              "$ref": "#/components/schemas/CoverageData"
            },
            "type": "array"
          },
          "PolicyLocation": {
            "items": {
              "$ref": "#/components/schemas/PolicyLocationData"
            },
            "type": "array"
          },
          "Reserve": {
            "items": {
              "$ref": "#/components/schemas/TransactionData"
            },
            "type": "array"
          },
          "ServiceRequest": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestData"
            },
            "type": "array"
          },
          "VehicleIncident": {
            "items": {
              "$ref": "#/components/schemas/VehicleIncidentData"
            },
            "type": "array"
          },
          "VehicleRiskUnit": {
            "items": {
              "$ref": "#/components/schemas/VehicleRiskUnitData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClaimSearchRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimSearchRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimSearchRequestAttributes": {
        "properties": {
          "claimNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "nameSearchType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ClaimSearchNameSearchType"
          },
          "policyNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClaimSearchRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimSearchRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimSearchResult": {
        "properties": {
          "adjusterName": {
            "type": "string"
          },
          "claimId": {
            "type": "string"
          },
          "claimNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "claimants": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "insuredName": {
            "type": "string"
          },
          "lossDate": {
            "format": "date-time",
            "type": "string"
          },
          "policyNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ClaimState"
          }
        },
        "type": "object"
      },
      "ClaimSearchResultData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimSearchResult"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimSearchResultList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ClaimSearchResultData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ClaimSubmitRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimSubmitRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimSubmitRequestAttributes": {
        "properties": {
          "initialAssignment": {
            "$ref": "#/components/schemas/Assignee"
          }
        },
        "type": "object"
      },
      "ClaimSubmitRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimSubmitRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimValidationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ValidationResult"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimValidationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimValidationRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ClaimValidationRequestAttributes": {
        "properties": {
          "validateExposures": {
            "type": "boolean"
          },
          "validationLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ValidationLevel"
          }
        },
        "required": [
          "validateExposures",
          "validationLevel"
        ],
        "type": "object"
      },
      "ClaimValidationRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ClaimValidationRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ClaimValidationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimValidationData"
          }
        },
        "type": "object"
      },
      "ClaimsList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ClaimData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CodeReference": {
        "properties": {
          "code": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimContactData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ContactResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimContactData"
          }
        },
        "type": "object"
      },
      "ContactRole": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "comments": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "relatedTo": {
            "$ref": "#/components/schemas/GenericRelation"
          },
          "role": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ContactRole"
          }
        },
        "required": [
          "role",
          "relatedTo"
        ],
        "type": "object"
      },
      "ContactRoleConstraint": {
        "properties": {
          "code": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "schemaConstraints": {
            "items": {
              "$ref": "#/components/schemas/RoleSchemaConstraint"
            },
            "type": "array"
          },
          "subtype": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "subtype"
        ],
        "x-gw-sortable": [
          "code"
        ]
      },
      "ContactRoleConstraintData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ContactRoleConstraint"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ContactRoleConstraintList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ContactRoleConstraintData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContactRoleConstraintResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactRoleConstraintData"
          }
        },
        "type": "object"
      },
      "CovTerm": {
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "covTermOrder": {
            "nullable": true,
            "type": "integer"
          },
          "covTermPattern": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CovTermPattern"
          },
          "covTermSubtype": {
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-type": "typekey.CovTerm"
          },
          "description": {
            "maxLength": 100,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "financialAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0
          },
          "id": {
            "type": "string"
          },
          "modelAggregation": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CovTermModelAgg"
          },
          "modelRestriction": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CovTermModelRest"
          },
          "numericValue": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CovTermModelVal"
          },
          "value": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "covTermSubtype",
          "financialAmount",
          "numericValue"
        ]
      },
      "Coverage": {
        "properties": {
          "claimAggLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "coinsurance": {
            "format": "gw-bigdecimal",
            "nullable": true,
            "type": "string"
          },
          "covTerms": {
            "items": {
              "$ref": "#/components/schemas/CovTerm"
            },
            "type": "array"
          },
          "coverageBasis": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CoverageBasis"
          },
          "coverageType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CoverageType"
          },
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Currency"
          },
          "effectiveDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "exposureLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "incidentLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "limitsIndicator": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LimitsIndicator"
          },
          "nonmedAggLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "notes": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "personAggLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "replaceAggLimit": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": 0.0,
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "State"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "coverageType"
        ],
        "x-gw-requiredForCreate": [
          "coverageType"
        ],
        "x-gw-sortable": [
          "coverageType"
        ]
      },
      "CoverageData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Coverage"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "CoverageIssue": {
        "properties": {
          "coverageSubtype": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CoverageSubtype"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "maxLength": 65000,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CoverageIssueSeverity"
          }
        },
        "type": "object"
      },
      "Document": {
        "properties": {
          "author": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "dateModified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "docUID": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "inbound": {
            "nullable": true,
            "type": "boolean"
          },
          "language": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LanguageType"
          },
          "mimeType": {
            "maxLength": 80,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "name": {
            "maxLength": 80,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "obsolete": {
            "nullable": true,
            "type": "boolean"
          },
          "recipient": {
            "maxLength": 60,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "relatedTo": {
            "$ref": "#/components/schemas/GenericRelation"
          },
          "section": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "DocumentSection"
          },
          "securityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "DocumentSecurityType"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "DocumentStatusType"
          },
          "type": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "DocumentType"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "name",
          "section",
          "status"
        ],
        "x-gw-requiredForCreate": [
          "name",
          "status",
          "type"
        ],
        "x-gw-sortable": [
          "dateModified",
          "name"
        ]
      },
      "DocumentContent": {
        "properties": {
          "contents": {
            "format": "byte",
            "readOnly": true,
            "type": "string"
          },
          "responseMimeType": {
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentContentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/DocumentContent"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DocumentContentsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocumentContentData"
          }
        },
        "type": "object"
      },
      "DocumentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Document"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DocumentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DocumentData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DocumentResponseInclusions": {
        "properties": {
          "ClaimDocumentContent": {
            "items": {
              "$ref": "#/components/schemas/DocumentContentData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DwellingIncident": {
        "properties": {
          "damagedAreaSize": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "dwellingRoomDamages": {
            "items": {
              "$ref": "#/components/schemas/DwellingRoomDamage"
            },
            "type": "array"
          },
          "fireProtectionAvailable": {
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/PolicyLocation",
            "nullable": true
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LossPartyType"
          },
          "materialsDamaged": {
            "maxLength": 250,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "numberOfPeopleOnPolicy": {
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "occupancyType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "OccupancyType"
          },
          "propertySize": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "SeverityType"
          },
          "yearBuilt": {
            "format": "date-time",
            "nullable": true,
            "type": "string",
            "x-gw-before": "now"
          },
          "yearsInHome": {
            "exclusiveMinimum": false,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "description",
          "occupancyType"
        ]
      },
      "DwellingIncidentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/DwellingIncident"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "DwellingIncidentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DwellingIncidentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DwellingIncidentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DwellingIncidentData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "DwellingIncidentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DwellingIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "DwellingRoomDamage": {
        "properties": {
          "id": {
            "type": "string"
          },
          "numberOfRooms": {
            "exclusiveMinimum": true,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "roomType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "RoomType"
          }
        },
        "type": "object"
      },
      "Endorsement": {
        "properties": {
          "comments": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "effectiveDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "formNumber": {
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "formNumber"
        ]
      },
      "EndorsementData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Endorsement"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "Exposure": {
        "properties": {
          "assignedByUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignedGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-referenceType": "Group"
          },
          "assignedQueue": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-referenceType": "AssignableQueue"
          },
          "assignedUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignmentStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "AssignmentStatus"
          },
          "autopilotStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-defaultViews": [
              "none"
            ],
            "x-gw-typelist": "ExposureAutopilotStatus"
          },
          "claimOrder": {
            "type": "integer"
          },
          "claimant": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "nullable": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "claimantType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "ClaimantType"
          },
          "closeDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "closedOutcome": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ExposureClosedOutcomeType"
          },
          "contactPermitted": {
            "nullable": true,
            "type": "boolean"
          },
          "coverage": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "Coverage",
            "x-gw-referenceType": "PolicyCoverage"
          },
          "coverageSubtype": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-createOnly": true,
            "x-gw-typelist": "CoverageSubtype"
          },
          "createdVia": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "CreatedVia"
          },
          "dwellingIncident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "DwellingIncident",
            "x-gw-referenceType": "DwellingIncident"
          },
          "fixedPropertyIncident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "FixedPropertyIncident",
            "x-gw-referenceType": "FixedPropertyIncident"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "injuryIncident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "InjuryIncident",
            "x-gw-referenceType": "InjuryIncident"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "Jurisdiction"
          },
          "livingExpensesIncident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "LivingExpensesIncident",
            "x-gw-referenceType": "LivingExpensesIncident"
          },
          "lossCategory": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LossCategory"
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-filterBy": [
              "coverageSubtype"
            ],
            "x-gw-typelist": "LossPartyType"
          },
          "otherCoverage": {
            "nullable": true,
            "type": "boolean"
          },
          "primaryCoverage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "CoverageType"
          },
          "progress": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "ExposureProgressType"
          },
          "reopenDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "reopenedReason": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ExposureReopenedReason"
          },
          "securityLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "ExposureSecurityType"
          },
          "segment": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimSegment"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ExposureState"
          },
          "strategy": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ClaimStrategy"
          },
          "tier": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "ExposureTier"
          },
          "type": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ExposureType"
          },
          "validationLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ValidationLevel"
          },
          "vehicleIncident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "VehicleIncident",
            "x-gw-referenceType": "VehicleIncident"
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "coverageSubtype",
          "primaryCoverage"
        ],
        "x-gw-sortable": [
          "claimOrder",
          "coverageSubtype",
          "primaryCoverage",
          "type"
        ]
      },
      "ExposureAssignee": {
        "properties": {
          "autoAssign": {
            "type": "boolean"
          },
          "claimOwner": {
            "type": "boolean"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExposureAssigneeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExposureAssignee"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ExposureAssignmentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureAssigneeData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ExposureCloseRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureCloseRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ExposureCloseRequestAttributes": {
        "properties": {
          "closedOutcome": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ExposureClosedOutcomeType"
          },
          "reason": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExposureCloseRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExposureCloseRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ExposureData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Exposure"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ExposureRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ExposureResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "ExposureValidationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ValidationResult"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ExposureValidationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureValidationRequestData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ExposureValidationRequestAttributes": {
        "properties": {
          "validateClaim": {
            "type": "boolean"
          },
          "validationLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ValidationLevel"
          }
        },
        "required": [
          "validateClaim",
          "validationLevel"
        ],
        "type": "object"
      },
      "ExposureValidationRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExposureValidationRequestAttributes"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ExposureValidationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExposureValidationData"
          }
        },
        "type": "object"
      },
      "ExposuresList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ExposureData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FixedPropertyIncident": {
        "properties": {
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/PolicyLocation",
            "nullable": true
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LossPartyType"
          },
          "occupancyType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "OccupancyType"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "SeverityType"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "description",
          "occupancyType"
        ]
      },
      "FixedPropertyIncidentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/FixedPropertyIncident"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "FixedPropertyIncidentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/FixedPropertyIncidentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FixedPropertyIncidentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FixedPropertyIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "FixedPropertyIncidentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FixedPropertyIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "GenericRelation": {
        "properties": {
          "displayName": {
            "description": "This property is ignored on updates.",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "x-gw-resourceReference": true
      },
      "GenericRelationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenericRelation"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "GenericRelationList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/GenericRelationData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Header": {
        "description": "An HTTP request or response header",
        "properties": {
          "name": {
            "description": "The header name",
            "type": "string"
          },
          "value": {
            "description": "The header value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "InjuryBodyPart": {
        "properties": {
          "detailedBodyPart": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-filterBy": [
              "primaryBodyPart"
            ],
            "x-gw-typelist": "DetailedBodyPartType"
          },
          "detailedBodyPartDesc": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "detailedBodyPart"
            ],
            "x-gw-typelist": "DetailedBodyPartDesc"
          },
          "id": {
            "type": "string"
          },
          "impairmentPercentage": {
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 100,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "ordering": {
            "type": "integer"
          },
          "primaryBodyPart": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "BodyPartType"
          },
          "sideOfBody": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "SideOfBody"
          }
        },
        "type": "object"
      },
      "InjuryIncident": {
        "properties": {
          "ambulanceUsed": {
            "nullable": true,
            "type": "boolean"
          },
          "bodyParts": {
            "items": {
              "$ref": "#/components/schemas/InjuryBodyPart"
            },
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "detailedInjuryType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "generalInjuryType"
            ],
            "x-gw-typelist": "DetailedInjuryType"
          },
          "disabledDueToAccident": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "DisabledDueToAccident"
          },
          "generalInjuryType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "InjuryType"
          },
          "id": {
            "type": "string"
          },
          "injuredPerson": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LossPartyType"
          },
          "lostWages": {
            "nullable": true,
            "type": "boolean"
          },
          "primaryDoctor": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "SeverityType"
          },
          "treatmentType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "MedicalTreatmentType"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "description"
        ]
      },
      "InjuryIncidentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InjuryIncident"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "InjuryIncidentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/InjuryIncidentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InjuryIncidentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InjuryIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "InjuryIncidentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InjuryIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "LinkObject": {
        "properties": {
          "href": {
            "type": "string"
          },
          "methods": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/LinkObject"
        },
        "type": "object"
      },
      "LivingExpensesIncident": {
        "properties": {
          "description": {
            "maxLength": 1333,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "LossPartyType"
          },
          "startDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "description",
          "startDate"
        ]
      },
      "LivingExpensesIncidentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LivingExpensesIncident"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "LivingExpensesIncidentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/LivingExpensesIncidentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LivingExpensesIncidentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LivingExpensesIncidentData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "LivingExpensesIncidentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LivingExpensesIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "LocationBasedRiskUnit": {
        "properties": {
          "RUNumber": {
            "readOnly": true,
            "type": "integer"
          },
          "building": {
            "$ref": "#/components/schemas/Building",
            "nullable": true
          },
          "coverages": {
            "items": {
              "$ref": "#/components/schemas/Coverage"
            },
            "readOnly": true,
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "locationId": {
            "readOnly": true,
            "type": "string"
          },
          "otherRiskType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "OtherRiskType"
          },
          "policyLocation": {
            "$ref": "#/components/schemas/PolicyLocation"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "subtype": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "RiskUnit"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "RUNumber",
          "subtype"
        ],
        "x-gw-requiredForCreate": [
          "policyLocation",
          "subtype"
        ],
        "x-gw-sortable": [
          "RUNumber",
          "subtype"
        ]
      },
      "LocationBasedRiskUnitData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LocationBasedRiskUnit"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "LocationBasedRiskUnitList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/LocationBasedRiskUnitData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LocationBasedRiskUnitRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationBasedRiskUnitData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "LocationBasedRiskUnitResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LocationBasedRiskUnitData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "MonetaryAmount": {
        "properties": {
          "amount": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "currency": {
            "type": "string",
            "x-gw-type": "typekey.Currency"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "type": "object"
      },
      "Note": {
        "properties": {
          "author": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "body": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "bodySummary": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "summary"
            ]
          },
          "confidential": {
            "type": "boolean"
          },
          "createdDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "relatedTo": {
            "$ref": "#/components/schemas/GenericRelation"
          },
          "securityType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "NoteSecurityType"
          },
          "subject": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "topic": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "NoteTopicType"
          },
          "updateTime": {
            "description": "Time when the note was updated",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "body",
          "subject"
        ],
        "x-gw-requiredForCreate": [
          "body"
        ],
        "x-gw-sortable": [
          "subject",
          "topic",
          "updateTime"
        ]
      },
      "NoteData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Note"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "NoteList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/NoteData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NoteRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NoteData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "NoteResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NoteData"
          },
          "included": {
            "$ref": "#/components/schemas/ActivityResponseInclusions"
          }
        },
        "type": "object"
      },
      "PhoneNumber": {
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "PhoneCountryCode"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "extension": {
            "nullable": true,
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "required": [
          "countryCode",
          "number"
        ],
        "type": "object"
      },
      "PoliciesList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PolicyData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Policy": {
        "properties": {
          "accountNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "agent": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "assignedRisk": {
            "nullable": true,
            "type": "boolean"
          },
          "cancellationDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "coveredParties": {
            "items": {
              "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
              "x-gw-reference-schema": "ClaimContact",
              "x-gw-referenceType": "ClaimContact"
            },
            "type": "array"
          },
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Currency"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "excludedParties": {
            "items": {
              "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
              "x-gw-reference-schema": "ClaimContact",
              "x-gw-referenceType": "ClaimContact"
            },
            "type": "array"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "financialInterests": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "foreignCoverage": {
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "insured": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "notes": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "originalEffectiveDate": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "policyLocations": {
            "items": {
              "$ref": "#/components/schemas/PolicyObjectReference",
              "x-gw-reference-schema": "PolicyLocation",
              "x-gw-referenceType": "PolicyLocation"
            },
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "policyNumber": {
            "maxLength": 40,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "policyType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "PolicyType"
          },
          "producerCode": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "serviceTier": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "CustomerServiceTier"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "PolicyStatus"
          },
          "underwritingCo": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "UnderwritingCompanyType"
          },
          "underwritingGroup": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "UnderwritingGroupType"
          },
          "verifiedPolicy": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "policyNumber",
          "policyType"
        ],
        "x-gw-sortable": [
          "effectiveDate",
          "policyNumber"
        ]
      },
      "PolicyCoverageList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CoverageData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyCoverageResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CoverageData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "PolicyData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Policy"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyEndorsementList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/EndorsementData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyEndorsementResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EndorsementData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "PolicyLocation": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ClaimAddress"
          },
          "buildings": {
            "items": {
              "$ref": "#/components/schemas/Building"
            },
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "locationNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "notes": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "primaryLocation": {
            "type": "boolean"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "locationNumber",
          "primaryLocation"
        ],
        "x-gw-sortable": [
          "locationNumber",
          "primaryLocation"
        ]
      },
      "PolicyLocationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyLocation"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyLocationList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PolicyLocationData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PolicyLocationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyLocationData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "PolicyObjectReference": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "policyLabel": {
            "readOnly": true,
            "type": "string"
          },
          "policySystemId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "PolicyRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "PolicyResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PolicyData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "RelatedCollection": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SimpleReference"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RelatedCollections": {
        "additionalProperties": {
          "$ref": "#/components/schemas/RelatedCollection"
        },
        "type": "object"
      },
      "RoleSchemaConstraint": {
        "properties": {
          "constraints": {
            "items": {
              "$ref": "#/components/schemas/SchemaConstraint"
            },
            "readOnly": true,
            "type": "array"
          },
          "exceptionSubtypes": {
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "schema": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SchemaConstraint": {
        "properties": {
          "additionalInfoList": {
            "items": {
              "$ref": "#/components/schemas/AdditionalInfo"
            },
            "type": "array"
          },
          "constraintType": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceRequest": {
        "properties": {
          "assignedGroup": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-referenceType": "Group"
          },
          "assignedUser": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "assignmentDate": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "canceledReason": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "claim": {
            "$ref": "#/components/schemas/ClaimReference",
            "readOnly": true,
            "x-gw-reference-schema": "Claim",
            "x-gw-referenceType": "Claim"
          },
          "createTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "expectedQuoteCompletionDate": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "expectedServiceCompletionDate": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "exposure": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "Exposure",
            "x-gw-referenceType": "Exposure"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "incident": {
            "$ref": "#/components/schemas/SimpleReference",
            "nullable": true,
            "x-gw-createOnly": true
          },
          "instruction": {
            "$ref": "#/components/schemas/ServiceRequestInstruction",
            "x-gw-createOnly": true
          },
          "kind": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "ServiceRequestKind"
          },
          "latestQuote": {
            "$ref": "#/components/schemas/ServiceRequestStatement"
          },
          "nextStep": {
            "$ref": "#/components/schemas/ServiceRequestAction",
            "readOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "progress": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ServiceRequestProgress"
          },
          "quoteStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ServiceRequestQuoteStatus"
          },
          "referenceNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "requestedQuoteCompletionDate": {
            "format": "date",
            "type": "string",
            "x-gw-after": "now",
            "x-gw-createOnly": true
          },
          "requestedServiceCompletionDate": {
            "format": "date",
            "type": "string",
            "x-gw-after": "now",
            "x-gw-createOnly": true
          },
          "serviceRequestNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "specialist": {
            "$ref": "#/components/schemas/SimpleReference",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "specialistCommMethod": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "SpecialistCommMethod"
          },
          "tier": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "ServiceRequestTier"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "progress"
        ],
        "x-gw-requiredForCreate": [
          "instruction",
          "kind",
          "specialist"
        ],
        "x-gw-sortable": [
          "createTime",
          "kind",
          "progress",
          "tier"
        ]
      },
      "ServiceRequestAction": {
        "properties": {
          "defaultOperation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceRequestAssignee": {
        "properties": {
          "autoAssign": {
            "type": "boolean"
          },
          "claimOwner": {
            "type": "boolean"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceRequestAssigneeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestAssignee"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestAssignmentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestAssigneeData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ServiceRequestChange": {
        "properties": {
          "changeType": {
            "type": "string"
          },
          "description": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "newInstruction": {
            "$ref": "#/components/schemas/SimpleReference",
            "x-gw-reference-schema": "ServiceRequestInstruction",
            "x-gw-referenceType": "ServiceRequestInstruction"
          },
          "newProgress": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ServiceRequestProgress"
          },
          "newQuoteExpectedCompletionDate": {
            "format": "date",
            "type": "string"
          },
          "newQuoteStatus": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ServiceRequestQuoteStatus"
          },
          "newServiceExpectedCompletionDate": {
            "format": "date",
            "type": "string"
          },
          "operation": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ServiceRequestOperation"
          },
          "sequence": {
            "type": "integer"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceRequestChangeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestChange"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequest"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestInstruction": {
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "instructionText": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true,
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "serviceAddress": {
            "$ref": "#/components/schemas/ClaimAddress",
            "x-gw-createOnly": true
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/SpecialistService"
            },
            "minItems": 1,
            "type": "array",
            "x-gw-createOnly": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "customer",
          "serviceAddress",
          "services"
        ],
        "x-gw-sortable": [
          "instructionText"
        ]
      },
      "ServiceRequestInstructionData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestInstruction"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestInvoiceOperationContext": {
        "properties": {
          "reason": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceRequestInvoiceOperationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestInvoiceOperationContext"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestInvoiceOperationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestInvoiceOperationData"
          }
        },
        "type": "object"
      },
      "ServiceRequestList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ServiceRequestResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServiceRequestMessage": {
        "properties": {
          "body": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "messageType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ServiceRequestMessageType"
          },
          "sendDate": {
            "format": "date-time",
            "type": "string"
          },
          "serviceRequest": {
            "$ref": "#/components/schemas/ServiceRequestReference",
            "readOnly": true,
            "x-gw-reference-schema": "ServiceRequest",
            "x-gw-referenceType": "ServiceRequest"
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          }
        },
        "required": [
          "messageType"
        ],
        "type": "object",
        "x-gw-sortable": [
          "sendDate"
        ]
      },
      "ServiceRequestMessageData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestMessage"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestOperationContext": {
        "properties": {
          "expectedCompletionDate": {
            "format": "date",
            "type": "string",
            "x-gw-after": "now"
          },
          "originalDate": {
            "format": "date",
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "requestedCompletionDate": {
            "format": "date",
            "type": "string",
            "x-gw-after": "now"
          },
          "statement": {
            "$ref": "#/components/schemas/ServiceRequestStatement"
          }
        },
        "type": "object"
      },
      "ServiceRequestOperationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestOperationContext"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestOperationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestOperationData"
          }
        },
        "type": "object"
      },
      "ServiceRequestReference": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "referenceNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "serviceRequestNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "ServiceRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ServiceRequestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestData"
          },
          "included": {
            "$ref": "#/components/schemas/ServiceRequestResponseInclusions"
          }
        },
        "type": "object"
      },
      "ServiceRequestResponseInclusions": {
        "properties": {
          "Claim": {
            "items": {
              "$ref": "#/components/schemas/ClaimData"
            },
            "type": "array"
          },
          "ClaimContact": {
            "items": {
              "$ref": "#/components/schemas/ClaimContactData"
            },
            "type": "array"
          },
          "ServiceRequestChange": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestChangeData"
            },
            "type": "array"
          },
          "ServiceRequestInstruction": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestInstructionData"
            },
            "type": "array"
          },
          "ServiceRequestInvoice": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestStatementData"
            },
            "type": "array"
          },
          "ServiceRequestMessage": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestMessageData"
            },
            "type": "array"
          },
          "ServiceRequestQuote": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestStatementData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceRequestSimpleOperationContext": {
        "type": "object"
      },
      "ServiceRequestStatement": {
        "properties": {
          "approvalDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "approvedBy": {
            "$ref": "#/components/schemas/SimpleReference",
            "readOnly": true,
            "x-gw-reference-schema": "User",
            "x-gw-referenceType": "User"
          },
          "creationTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "declinedReason": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "maxLength": 65000,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "expectedDaysToPerformService": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "lineItems": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestStatementLineItem"
            },
            "minItems": 1,
            "type": "array"
          },
          "operationContext": {
            "$ref": "#/components/schemas/ServiceRequestSimpleOperationContext",
            "x-gw-createOnly": true
          },
          "paymentDate": {
            "format": "date",
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "StatementSource"
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ServiceRequestInvoiceStatus"
          },
          "subtype": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "ServiceRequestStatement"
          },
          "total": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "readOnly": true
          }
        },
        "required": [
          "description"
        ],
        "type": "object",
        "x-gw-requiredForCreate": [
          "lineItems"
        ],
        "x-gw-sortable": [
          "approvalDate",
          "creationTime"
        ]
      },
      "ServiceRequestStatementData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ServiceRequestStatement"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ServiceRequestStatementLineItem": {
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": -1.0E16
          },
          "category": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ServiceRequestStatementLineItemCategory"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "amount"
        ],
        "type": "object"
      },
      "ServiceRequestStatementList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ServiceRequestStatementData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ServiceRequestResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServiceRequestStatementRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestStatementData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "ServiceRequestStatementResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceRequestStatementData"
          },
          "included": {
            "$ref": "#/components/schemas/ServiceRequestResponseInclusions"
          }
        },
        "type": "object"
      },
      "SimpleReference": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "refid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "SpatialPoint": {
        "properties": {
          "latitude": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "longitude": {
            "format": "gw-bigdecimal",
            "type": "string"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "SpecialistService": {
        "properties": {
          "active": {
            "readOnly": true,
            "type": "boolean"
          },
          "code": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-createOnly": true
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/CodeReference",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Transaction": {
        "properties": {
          "bookingDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "comments": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "coverage": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "CoverageType"
          },
          "createTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdVia": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "CreatedVia"
          },
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "Currency"
          },
          "eroding": {
            "type": "boolean"
          },
          "exchangeDescription": {
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "exchangeRate": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "exchangeRateEffDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "lineItems": {
            "items": {
              "$ref": "#/components/schemas/TransactionLineItem"
            },
            "minItems": 1,
            "type": "array",
            "x-gw-createOnly": true
          },
          "overrideTransToReservingExchangeRate": {
            "readOnly": true,
            "type": "boolean",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "paymentType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "PaymentType"
          },
          "reserveLine": {
            "$ref": "#/components/schemas/TransactionCoding",
            "x-gw-createOnly": true
          },
          "reservingAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "TransactionStatus"
          },
          "transactionAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "readOnly": true,
            "x-gw-typelist": "Transaction"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "type"
        ],
        "x-gw-requiredForCreate": [
          "currency",
          "lineItems",
          "paymentType",
          "reserveLine"
        ],
        "x-gw-sortable": [
          "createTime"
        ]
      },
      "TransactionCoding": {
        "properties": {
          "costCategory": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-filterBy": [
              "costType"
            ],
            "x-gw-typelist": "CostCategory"
          },
          "costType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "CostType"
          },
          "exposure": {
            "$ref": "#/components/schemas/SimpleReference",
            "x-gw-createOnly": true,
            "x-gw-reference-schema": "Exposure",
            "x-gw-referenceType": "Exposure"
          },
          "reservingCurrency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-createOnly": true,
            "x-gw-typelist": "Currency"
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "costCategory",
          "costType",
          "reservingCurrency"
        ]
      },
      "TransactionData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Transaction"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "TransactionLineItem": {
        "properties": {
          "comments": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lineCategory": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "LineCategory"
          },
          "reservingAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": -1.0E16,
            "readOnly": true
          },
          "transactionAmount": {
            "$ref": "#/components/schemas/MonetaryAmount",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1.0E16,
            "minimum": -1.0E16,
            "x-gw-createOnly": true
          }
        },
        "type": "object",
        "x-gw-requiredForCreate": [
          "transactionAmount"
        ]
      },
      "TypeKeyReference": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "description": "This property is ignored on updates.",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "type": "object"
      },
      "UnverifiedPolicyCoverageData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Coverage"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "UnverifiedPolicyCoverageList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UnverifiedPolicyCoverageData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UnverifiedPolicyCoverageRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnverifiedPolicyCoverageData"
          }
        },
        "type": "object"
      },
      "UnverifiedPolicyCoverageResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnverifiedPolicyCoverageData"
          }
        },
        "type": "object"
      },
      "UnverifiedPolicyLocation": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "buildings": {
            "items": {
              "$ref": "#/components/schemas/Building"
            },
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "locationNumber": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "notes": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "primaryLocation": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "locationNumber",
          "primaryLocation"
        ],
        "x-gw-sortable": [
          "locationNumber",
          "primaryLocation"
        ]
      },
      "UnverifiedPolicyLocationData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UnverifiedPolicyLocation"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "UnverifiedPolicyLocationList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UnverifiedPolicyLocationData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UnverifiedPolicyLocationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnverifiedPolicyLocationData"
          }
        },
        "type": "object"
      },
      "UnverifiedPolicyLocationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnverifiedPolicyLocationData"
          }
        },
        "type": "object"
      },
      "UpdatablePolicyObjectReference": {
        "properties": {
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "ValidationIssue": {
        "properties": {
          "field": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ValidationIssueType"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "validationLevel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ValidationLevel"
          }
        },
        "type": "object"
      },
      "ValidationResult": {
        "properties": {
          "hasErrors": {
            "type": "boolean"
          },
          "validationIssues": {
            "items": {
              "$ref": "#/components/schemas/ValidationIssue"
            },
            "type": "array"
          },
          "validationLevelReached": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "description": "Updated ValidationLevel of the root bean that is being validated",
            "x-gw-typelist": "ValidationLevel"
          }
        },
        "type": "object"
      },
      "Vehicle": {
        "properties": {
          "color": {
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "displayName": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "licensePlate": {
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "make": {
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "VehicleManufacturer"
          },
          "model": {
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "policyLabel": {
            "readOnly": true,
            "type": "string"
          },
          "policySystemId": {
            "type": "string"
          },
          "policyVehicle": {
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "Jurisdiction"
          },
          "style": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "VehicleStyle"
          },
          "vin": {
            "maxLength": 40,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "year": {
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VehicleIncident": {
        "properties": {
          "airbagsDeployed": {
            "type": "boolean"
          },
          "collision": {
            "type": "boolean"
          },
          "collisionPoint": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CollisionPoint"
          },
          "damageDescription": {
            "maxLength": 1333,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "driver": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "equipmentFailure": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "incidentOwner": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "nullable": true,
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "lossParty": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "LossPartyType"
          },
          "passengers": {
            "items": {
              "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
              "x-gw-reference-schema": "ClaimContact",
              "x-gw-referenceType": "ClaimContact"
            },
            "type": "array"
          },
          "propertyDamageDescription": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "safeToDrive": {
            "type": "boolean"
          },
          "severity": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "SeverityType"
          },
          "theft": {
            "type": "boolean"
          },
          "totalLoss": {
            "nullable": true,
            "type": "boolean"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle"
          },
          "vehicleDirection": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "VehicleDirection"
          },
          "vehicleParked": {
            "nullable": true,
            "type": "boolean"
          },
          "vehicleType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-filterBy": [
              "lossParty"
            ],
            "x-gw-typelist": "VehicleType"
          },
          "vehicleUseReason": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "nullable": true,
            "x-gw-typelist": "ReasonForUse"
          }
        },
        "type": "object",
        "x-gw-sortable": [
          "lossParty",
          "severity"
        ]
      },
      "VehicleIncidentData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/VehicleIncident"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "VehicleIncidentList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/VehicleIncidentData"
            },
            "type": "array"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VehicleIncidentRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VehicleIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimRequestInclusions"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "VehicleIncidentResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VehicleIncidentData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "VehicleRiskUnit": {
        "properties": {
          "RUNumber": {
            "readOnly": true,
            "type": "integer"
          },
          "coverages": {
            "items": {
              "$ref": "#/components/schemas/Coverage"
            },
            "readOnly": true,
            "type": "array",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "nullable": true,
            "pattern": "\\S",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "policySystemId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "\\S",
            "readOnly": true,
            "type": "string"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle",
            "x-gw-defaultViews": [
              "detail"
            ]
          },
          "vehicleId": {
            "readOnly": true,
            "type": "string"
          },
          "vehicleLocation": {
            "$ref": "#/components/schemas/PolicyLocation",
            "readOnly": true
          }
        },
        "type": "object",
        "x-gw-filterable": [
          "RUNumber"
        ],
        "x-gw-sortable": [
          "RUNumber"
        ]
      },
      "VehicleRiskUnitData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/VehicleRiskUnit"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "VehicleRiskUnitList": {
        "properties": {
          "count": {
            "readOnly": true,
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/VehicleRiskUnitData"
            },
            "type": "array"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "total": {
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VehicleRiskUnitRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VehicleRiskUnitData"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "VehicleRiskUnitResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VehicleRiskUnitData"
          },
          "included": {
            "$ref": "#/components/schemas/ClaimResponseInclusions"
          }
        },
        "type": "object"
      },
      "Witness": {
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/UpdatablePolicyObjectReference",
            "x-gw-reference-schema": "ClaimContact",
            "x-gw-referenceType": "ClaimContact"
          },
          "perspective": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "WitnessPosition"
          },
          "statementObtained": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "YesNo"
          }
        },
        "required": [
          "contact"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "APIs for claims and related objects",
    "title": "Claim API",
    "version": "1.2.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/batch": {
      "post": {
        "description": "Post a list of sub-requests to make against this endpoint.  Sub-requests will be executed serially, in the order they are specified in the \"requests\" property of the input.  Responses to each sub-request will then be batched up and returned all together.  Sub-requests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the sub-request and will override any headers from the main request.",
        "operationId": "batchRequest",
        "parameters": [
          {
            "description": "Controls what response headers, if any, are included for sub-responses.  If unspecified, or set to the value \"*all\", all headers for sub-responses will be returned.  If set to the value \"*none\", no headers for sub-responses will be returned.  Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on sub-responses.",
            "explode": false,
            "in": "query",
            "name": "includeResponseHeaders",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            }
          },
          "description": "The body of the batch request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponse"
                }
              }
            },
            "description": "The batch request itself was well-formed; individual sub-requests may have succeeded or failed"
          }
        },
        "summary": "Issue multiple requests at once as a non-transactional batch"
      }
    },
    "/claims": {
      "get": {
        "description": "Retrieves a list of assigned claims",
        "operationId": "getClaims",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimsList"
                }
              }
            },
            "description": "The list of claims"
          }
        },
        "summary": "Retrieves a list of claims",
        "x-gw-childResourceType": "Claim",
        "x-gw-resourceType": "Claims"
      },
      "post": {
        "description": "Create a new draft claim",
        "operationId": "createClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a new draft claim",
        "x-gw-childResourceType": "Claim",
        "x-gw-resourceType": "Claims"
      }
    },
    "/claims/{claimId}": {
      "get": {
        "description": "Retrieve a claim",
        "operationId": "getClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a claim",
        "x-gw-resourceType": "Claim"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "patch": {
        "description": "Update a claim",
        "operationId": "patchClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a claim",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/activities": {
      "get": {
        "description": "Returns a list of activities associated with this claim",
        "operationId": "getClaimActivities",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            },
            "description": "Returns a list of activities"
          }
        },
        "summary": "Returns a list of activities associated with this claim",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "ClaimActivities"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Creates a new activity associated with this claim",
        "operationId": "createClaimActivity",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description": "Returns the details for the newly-created activity"
          }
        },
        "summary": "Creates a new activity associated with this claim",
        "x-gw-childResourceType": "Activity",
        "x-gw-resourceType": "ClaimActivities"
      }
    },
    "/claims/{claimId}/activity-assignees": {
      "get": {
        "description": "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to\n",
        "operationId": "getClaimActivityAssignees",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssigneeList"
                }
              }
            },
            "description": "The suggested assignees"
          }
        },
        "summary": "The list of suggested people, groups, queues, etc. that new activities on this claim can be assigned to",
        "x-gw-childResourceType": "Assignee",
        "x-gw-resourceType": "ClaimActivityAssignees"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/activity-patterns": {
      "get": {
        "description": "Returns a list of activity patterns that can be used to create activities on this claim",
        "operationId": "getClaimActivityPatterns",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPatternList"
                }
              }
            },
            "description": "Returns a list of activities"
          }
        },
        "summary": "Returns a list of activity patterns that can be used to create activities on this claim",
        "x-gw-childResourceType": "ActivityPattern",
        "x-gw-resourceType": "ClaimActivityPatterns"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/assign": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Assign claim to a user or a group",
        "operationId": "assignClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Successfully assigned the claim"
          }
        },
        "summary": "Assign claim to a user or a group",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Cancels and removes the given claim; only allowed on draft claims.",
        "operationId": "cancel",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Cancels and removes the given claim; only allowed on draft claims.",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/close": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Close this claim and transition it to the 'closed' state",
        "operationId": "closeClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimCloseRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Successfully closed the claim"
          }
        },
        "summary": "Close this claim and transition it to the 'closed' state",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/contact-role-owners": {
      "get": {
        "description": "The contact role owners associated with a given claim. This includes the claim, policy, incidents, exposures, matters, negotiations, and evaluations. Worker's comp injury incidents are not included.\n",
        "operationId": "getClaimContactRoleOwners",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericRelationList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The contact role owners associated with a given claim, including incidents, exposures, policy, and more.",
        "x-gw-childResourceType": "GenericRelation",
        "x-gw-resourceType": "ClaimContactRoleOwners"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/contacts": {
      "get": {
        "description": "The contacts associated with a given claim",
        "operationId": "getClaimContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimContactList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The contacts associated with a given claim",
        "x-gw-childResourceType": "ClaimContact",
        "x-gw-resourceType": "ClaimContacts"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new contact on the given claim",
        "operationId": "createClaimContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new contact on the given claim",
        "x-gw-childResourceType": "ClaimContact",
        "x-gw-resourceType": "ClaimContacts"
      }
    },
    "/claims/{claimId}/contacts/{contactId}": {
      "delete": {
        "description": "Delete a contact on the given claim",
        "operationId": "deleteClaimContact",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete a contact on the given claim",
        "x-gw-resourceType": "ClaimContact"
      },
      "get": {
        "description": "The details of a specific contact",
        "operationId": "getClaimContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The details of a specific contact",
        "x-gw-resourceType": "ClaimContact"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/contactId"
        }
      ],
      "patch": {
        "description": "Update the details of the specific contact on the given claim",
        "operationId": "patchClaimContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update the details of the specific contact on the given claim",
        "x-gw-resourceType": "ClaimContact"
      }
    },
    "/claims/{claimId}/documents": {
      "get": {
        "description": "The documents associated with a given claim",
        "operationId": "getClaimDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The documents associated with a given claim",
        "x-gw-childResourceType": "ClaimDocument",
        "x-gw-resourceType": "ClaimDocuments"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new document on the given claim",
        "operationId": "createClaimDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "content": {
                    "format": "binary",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/ClaimDocumentRequest"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimDocumentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new document on the given claim",
        "x-gw-childResourceType": "ClaimDocument",
        "x-gw-resourceType": "ClaimDocuments"
      }
    },
    "/claims/{claimId}/documents/{documentId}": {
      "delete": {
        "description": "Delete a document on the given claim",
        "operationId": "deleteClaimDocument",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete a document on the given claim",
        "x-gw-resourceType": "ClaimDocument"
      },
      "get": {
        "description": "The details of a specific document",
        "operationId": "getClaimDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimDocumentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The details of a specific document",
        "x-gw-resourceType": "ClaimDocument"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/documentId"
        }
      ],
      "patch": {
        "description": "Update a document on the given claim",
        "operationId": "patchClaimDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "content": {
                    "format": "binary",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/ClaimDocumentRequest"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimDocumentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update a document on the given claim",
        "x-gw-resourceType": "ClaimDocument"
      }
    },
    "/claims/{claimId}/documents/{documentId}/content": {
      "get": {
        "description": "The contents of a document",
        "operationId": "getDocumentContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentContentsResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The contents of a document",
        "x-gw-resourceType": "ClaimDocumentContent"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/documentId"
        }
      ]
    },
    "/claims/{claimId}/dwelling-incidents": {
      "get": {
        "description": "Retrieve dwelling incidents on a claim",
        "operationId": "getDwellingIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DwellingIncidentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve dwelling incidents on a claim",
        "x-gw-childResourceType": "DwellingIncident",
        "x-gw-resourceType": "ClaimDwellingIncidents"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new dwelling incident",
        "operationId": "createClaimDwellingIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DwellingIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DwellingIncidentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new dwelling incident",
        "x-gw-childResourceType": "DwellingIncident",
        "x-gw-resourceType": "ClaimDwellingIncidents"
      }
    },
    "/claims/{claimId}/dwelling-incidents/{incidentId}": {
      "get": {
        "description": "Retrieve a dwelling incident",
        "operationId": "getDwellingIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DwellingIncidentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a dwelling incident",
        "x-gw-resourceType": "DwellingIncident"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/incidentId"
        }
      ],
      "patch": {
        "description": "Update a dwelling incident",
        "operationId": "patchDwellingIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DwellingIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DwellingIncidentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update a dwelling incident",
        "x-gw-resourceType": "DwellingIncident"
      }
    },
    "/claims/{claimId}/exposures": {
      "get": {
        "description": "The exposures associated with a given claim",
        "operationId": "getClaimExposures",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposuresList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The exposures associated with a given claim",
        "x-gw-childResourceType": "Exposure",
        "x-gw-resourceType": "ClaimExposures"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new exposure on the given claim",
        "operationId": "createClaimExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new exposure on the given claim",
        "x-gw-childResourceType": "Exposure",
        "x-gw-resourceType": "ClaimExposures"
      }
    },
    "/claims/{claimId}/exposures/{exposureId}": {
      "delete": {
        "description": "Delete the draft exposure",
        "operationId": "deleteExposure",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete the draft exposure",
        "x-gw-resourceType": "Exposure"
      },
      "get": {
        "description": "The details of a specific exposure",
        "operationId": "getExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The details of a specific exposure",
        "x-gw-resourceType": "Exposure"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/exposureId"
        }
      ],
      "patch": {
        "description": "Update the details of the specific exposure on the given claim",
        "operationId": "patchExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update the details of the specific exposure on the given claim",
        "x-gw-resourceType": "Exposure"
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/assign": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/exposureId"
        }
      ],
      "post": {
        "description": "Assign exposure to a user or a group",
        "operationId": "assignExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureResponse"
                }
              }
            },
            "description": "Successfully assigned the exposure"
          }
        },
        "summary": "Assign exposure to a user or a group",
        "x-gw-resourceType": "Exposure"
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/close": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/exposureId"
        }
      ],
      "post": {
        "description": "Close the exposure",
        "operationId": "closeExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureCloseRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureResponse"
                }
              }
            },
            "description": "Successfully closed the exposure"
          }
        },
        "summary": "Close the exposure",
        "x-gw-resourceType": "Exposure"
      }
    },
    "/claims/{claimId}/exposures/{exposureId}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/exposureId"
        }
      ],
      "post": {
        "description": "Validate the exposure",
        "operationId": "validateExposure",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureValidationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureValidationResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Validate the exposure",
        "x-gw-resourceType": "Exposure"
      }
    },
    "/claims/{claimId}/fixed-property-incidents": {
      "get": {
        "description": "The fixed property incidents associated with a given claim",
        "operationId": "getClaimFixedPropertyIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FixedPropertyIncidentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The fixed property incidents associated with a given claim",
        "x-gw-childResourceType": "FixedPropertyIncident",
        "x-gw-resourceType": "ClaimFixedPropertyIncidents"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new fixed property incident on the given claim",
        "operationId": "createClaimFixedPropertyIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FixedPropertyIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FixedPropertyIncidentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new fixed property incident on the given claim",
        "x-gw-childResourceType": "FixedPropertyIncident",
        "x-gw-resourceType": "ClaimFixedPropertyIncidents"
      }
    },
    "/claims/{claimId}/fixed-property-incidents/{incidentId}": {
      "delete": {
        "description": "Delete a fixed property incident on the given claim",
        "operationId": "deleteFixedPropertyIncident",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete a fixed property incident on the given claim",
        "x-gw-resourceType": "FixedPropertyIncident"
      },
      "get": {
        "description": "The details of a specific fixed property incident",
        "operationId": "getFixedPropertyIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FixedPropertyIncidentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The details of a specific fixed property incident",
        "x-gw-resourceType": "FixedPropertyIncident"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/incidentId"
        }
      ],
      "patch": {
        "description": "Update the details of a specific fixed property incident",
        "operationId": "patchFixedPropertyIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FixedPropertyIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FixedPropertyIncidentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update the details of a specific fixed property incident",
        "x-gw-resourceType": "FixedPropertyIncident"
      }
    },
    "/claims/{claimId}/injury-incidents": {
      "get": {
        "description": "The injury incidents associated with a given claim",
        "operationId": "getClaimInjuryIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InjuryIncidentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The injury incidents associated with a given claim",
        "x-gw-childResourceType": "InjuryIncident",
        "x-gw-resourceType": "ClaimInjuryIncidents"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new injury incident on the given claim",
        "operationId": "createClaimInjuryIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InjuryIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InjuryIncidentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new injury incident on the given claim",
        "x-gw-childResourceType": "InjuryIncident",
        "x-gw-resourceType": "ClaimInjuryIncidents"
      }
    },
    "/claims/{claimId}/injury-incidents/{incidentId}": {
      "delete": {
        "description": "Delete an injury incident on the given claim",
        "operationId": "deleteInjuryIncident",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete an injury incident on the given claim",
        "x-gw-resourceType": "InjuryIncident"
      },
      "get": {
        "description": "The details of a specific injury incident",
        "operationId": "getInjuryIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InjuryIncidentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The details of a specific injury incident",
        "x-gw-resourceType": "InjuryIncident"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/incidentId"
        }
      ],
      "patch": {
        "description": "Update the details of a specific injury incident",
        "operationId": "patchInjuryIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InjuryIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InjuryIncidentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update the details of a specific injury incident",
        "x-gw-resourceType": "InjuryIncident"
      }
    },
    "/claims/{claimId}/living-expenses-incidents": {
      "get": {
        "description": "Retrieve living expense incidents on a claim",
        "operationId": "getLivingExpensesIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LivingExpensesIncidentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve living expense incidents on a claim",
        "x-gw-childResourceType": "LivingExpensesIncident",
        "x-gw-resourceType": "ClaimLivingExpensesIncidents"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new living expense incident",
        "operationId": "createClaimLivingExpensesIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LivingExpensesIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LivingExpensesIncidentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new living expense incident",
        "x-gw-childResourceType": "LivingExpensesIncident",
        "x-gw-resourceType": "ClaimLivingExpensesIncidents"
      }
    },
    "/claims/{claimId}/living-expenses-incidents/{incidentId}": {
      "get": {
        "description": "Retrieve a living expense incident",
        "operationId": "getLivingExpensesIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LivingExpensesIncidentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a living expense incident",
        "x-gw-resourceType": "LivingExpensesIncident"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/incidentId"
        }
      ],
      "patch": {
        "description": "Update a living expense incident",
        "operationId": "patchLivingExpensesIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LivingExpensesIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LivingExpensesIncidentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update a living expense incident",
        "x-gw-resourceType": "LivingExpensesIncident"
      }
    },
    "/claims/{claimId}/notes": {
      "get": {
        "description": "The notes associated with a given claim",
        "operationId": "getClaimNotes",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The notes associated with a given claim",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "ClaimNotes"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new note on this claim",
        "operationId": "createClaimNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            },
            "description": "The details of the newly-created note"
          }
        },
        "summary": "Create a new note on this claim",
        "x-gw-childResourceType": "Note",
        "x-gw-resourceType": "ClaimNotes"
      }
    },
    "/claims/{claimId}/policy": {
      "get": {
        "description": "The policy associated with a given claim",
        "operationId": "getPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The policy associated with a given claim",
        "x-gw-resourceType": "Policy"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/coverages": {
      "get": {
        "description": "The policy level coverages associated with a given claim",
        "operationId": "getPolicyCoverages",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCoverageList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The policy level coverages associated with a given claim",
        "x-gw-childResourceType": "PolicyCoverage",
        "x-gw-resourceType": "PolicyCoverages"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/coverages/{coverageId}": {
      "get": {
        "description": "The policy level coverage associated with a given claim",
        "operationId": "getPolicyCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The policy level coverage associated with a given claim",
        "x-gw-resourceType": "PolicyCoverage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/coverageId"
        }
      ]
    },
    "/claims/{claimId}/policy/endorsements": {
      "get": {
        "description": "The policy endorsements of a given claim",
        "operationId": "getPolicyEndorsements",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyEndorsementList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The policy endorsements of a given claim",
        "x-gw-childResourceType": "Endorsement",
        "x-gw-resourceType": "PolicyEndorsements"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/endorsements/{endorsementId}": {
      "get": {
        "description": "The policy endorsement of a given claim",
        "operationId": "getPolicyEndorsement",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyEndorsementResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The policy endorsement of a given claim",
        "x-gw-resourceType": "Endorsement"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/endorsementId"
        }
      ]
    },
    "/claims/{claimId}/policy/location-based-risk-units": {
      "get": {
        "description": "The location based risk units of a policy associated with a given claim",
        "operationId": "getLocationBasedRiskUnits",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The location based risk units of a policy associated with a given claim",
        "x-gw-childResourceType": "LocationBasedRiskUnit",
        "x-gw-resourceType": "LocationBasedRiskUnits"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}": {
      "get": {
        "description": "Retrieve a location based risk unit",
        "operationId": "getLocationBasedRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a location based risk unit",
        "x-gw-resourceType": "LocationBasedRiskUnit"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/locationBasedRiskUnitId"
        }
      ]
    },
    "/claims/{claimId}/policy/locations": {
      "get": {
        "description": "The locations associated with a given claim's policy",
        "operationId": "getPolicyLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The locations associated with a given claim's policy",
        "x-gw-childResourceType": "PolicyLocation",
        "x-gw-resourceType": "PolicyLocations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/locations/{locationId}": {
      "get": {
        "description": "Details of a location on the given claim's policy",
        "operationId": "getPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyLocationResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Details of a location on the given claim's policy",
        "x-gw-resourceType": "PolicyLocation"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        }
      ]
    },
    "/claims/{claimId}/policy/vehicle-risk-units": {
      "get": {
        "description": "The vehicle risk units of a policy associated with a given claim",
        "operationId": "getVehicleRiskUnits",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The vehicle risk units of a policy associated with a given claim",
        "x-gw-childResourceType": "VehicleRiskUnit",
        "x-gw-resourceType": "VehicleRiskUnits"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}": {
      "get": {
        "description": "Retrieve a vehicle risk unit",
        "operationId": "getVehicleRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a vehicle risk unit",
        "x-gw-resourceType": "VehicleRiskUnit"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/vehicleRiskUnitId"
        }
      ]
    },
    "/claims/{claimId}/related-objects": {
      "get": {
        "description": "The list of objects related to this claim which can be used as the values for the \"relatedTo\" field on a note or activity. This includes the claim, contacts, unpromoted service requests, service request specialists, exposures, and matters.\n",
        "operationId": "getClaimRelatedObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericRelationList"
                }
              }
            },
            "description": "Successful request"
          }
        },
        "summary": "The list of objects related to this claim",
        "x-gw-childResourceType": "GenericRelation",
        "x-gw-resourceType": "ClaimRelatedObjects"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ]
    },
    "/claims/{claimId}/service-requests": {
      "get": {
        "description": "Returns a list of service requests associated with the claim",
        "operationId": "getServiceRequestsForClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestList"
                }
              }
            },
            "description": "Returns a list of service requests for a claim"
          }
        },
        "summary": "Returns a list of service requests associated with the claim",
        "x-gw-childResourceType": "ServiceRequest",
        "x-gw-resourceType": "ClaimServiceRequests"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Adds a service request to the claim",
        "operationId": "addServiceRequestToClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the newly created service request"
          }
        },
        "summary": "Adds a service request to the claim",
        "x-gw-childResourceType": "ServiceRequest",
        "x-gw-resourceType": "ClaimServiceRequests"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}": {
      "get": {
        "description": "Retrieves a service request by its id",
        "operationId": "getServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the service request"
          }
        },
        "summary": "Retrieves a service request by its id",
        "x-gw-resourceType": "ServiceRequest"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "patch": {
        "description": "Modifies an existing service request",
        "operationId": "changeServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the modified service request"
          }
        },
        "summary": "Modifies an existing service request",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/accept": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Records that the specialist has accepted this service request",
        "operationId": "acceptServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the accepted service request"
          }
        },
        "summary": "Accepts a service request",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/assign": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Assigns a service request",
        "operationId": "assignServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the assigned service request"
          }
        },
        "summary": "Assigns a service request",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Records that the specialist does not intend to perform any further work on this service request",
        "operationId": "cancelServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the canceled service request"
          }
        },
        "summary": "Cancels a service request",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/complete-work": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Indicates that the specialist has completed work",
        "operationId": "completeRequestedWork",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the service request"
          }
        },
        "summary": "Indicates that the specialist has completed work",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/decline": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Records that the specialist has declined to perform this service request",
        "operationId": "declineServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the declined service request"
          }
        },
        "summary": "Declines a service request",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/internal-cancel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Internally cancels this service request without further input from the specialist",
        "operationId": "internalCancelServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the details of the canceled service request"
          }
        },
        "summary": "Cancels a service request without specialist response",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices": {
      "get": {
        "description": "Retrieves the invoices on a service request",
        "operationId": "getServiceRequestInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestStatementList"
                }
              }
            },
            "description": "Returns the list of the service request's invoices"
          }
        },
        "summary": "Retrieves the invoices on a service request",
        "x-gw-childResourceType": "ServiceRequestInvoice",
        "x-gw-resourceType": "ServiceRequestInvoices"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Creates a new service request invoice",
        "operationId": "addInvoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestStatementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestStatementResponse"
                }
              }
            },
            "description": "Returns the details of the newly created invoice"
          }
        },
        "summary": "Creates a new service request invoice",
        "x-gw-childResourceType": "ServiceRequestInvoice",
        "x-gw-resourceType": "ServiceRequestInvoices"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}": {
      "get": {
        "description": "Retrieves a service request invoice by its id",
        "operationId": "getInvoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestStatementResponse"
                }
              }
            },
            "description": "Returns the the service request invoice"
          }
        },
        "summary": "Retrieves a service request invoice by its id",
        "x-gw-resourceType": "ServiceRequestInvoice"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        },
        {
          "$ref": "#/components/parameters/invoiceId"
        }
      ]
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/withdraw": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        },
        {
          "$ref": "#/components/parameters/invoiceId"
        }
      ],
      "post": {
        "description": "Withdraws an invoice that has been submitted",
        "operationId": "withdrawInvoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestInvoiceOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestStatementResponse"
                }
              }
            },
            "description": "Returns the details of the withdrawn invoice"
          }
        },
        "summary": "Withdraws an invoice that has been submitted",
        "x-gw-resourceType": "ServiceRequestInvoice"
      }
    },
    "/claims/{claimId}/service-requests/{serviceRequestId}/submit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/serviceRequestId"
        }
      ],
      "post": {
        "description": "Submits the service request to the specialist for acceptance (with optional instruction)",
        "operationId": "submitServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequestOperationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestResponse"
                }
              }
            },
            "description": "Returns the resulting service request (state)"
          }
        },
        "summary": "Requests service from specialist",
        "x-gw-resourceType": "ServiceRequest"
      }
    },
    "/claims/{claimId}/submit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Submit this claim and transition it to the 'open' state",
        "operationId": "submitClaim",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimSubmitRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            },
            "description": "Successfully submitted the claim"
          }
        },
        "summary": "Submit this claim and transition it to the 'open' state",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/validate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Validate a claim",
        "operationId": "validate",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimValidationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimValidationResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Validate a claim",
        "x-gw-resourceType": "Claim"
      }
    },
    "/claims/{claimId}/vehicle-incidents": {
      "get": {
        "description": "Retrieve vehicle incidents on a claim",
        "operationId": "getClaimVehicleIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleIncidentList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve vehicle incidents on a claim",
        "x-gw-childResourceType": "VehicleIncident",
        "x-gw-resourceType": "ClaimVehicleIncidents"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        }
      ],
      "post": {
        "description": "Create a new vehicle incident",
        "operationId": "createClaimVehicleIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleIncidentResponse"
                }
              }
            },
            "description": "Successfully created"
          }
        },
        "summary": "Create a new vehicle incident",
        "x-gw-childResourceType": "VehicleIncident",
        "x-gw-resourceType": "ClaimVehicleIncidents"
      }
    },
    "/claims/{claimId}/vehicle-incidents/{incidentId}": {
      "delete": {
        "description": "Delete a vehicle incident on the given claim",
        "operationId": "deleteVehicleIncident",
        "responses": {
          "204": {
            "description": "Successful deletion"
          }
        },
        "summary": "Delete a vehicle incident on the given claim",
        "x-gw-resourceType": "VehicleIncident"
      },
      "get": {
        "description": "Retrieve a vehicle incident",
        "operationId": "getVehicleIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleIncidentResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieve a vehicle incident",
        "x-gw-resourceType": "VehicleIncident"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/claimId"
        },
        {
          "$ref": "#/components/parameters/incidentId"
        }
      ],
      "patch": {
        "description": "Update a vehicle incident",
        "operationId": "patchVehicleIncident",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleIncidentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleIncidentResponse"
                }
              }
            },
            "description": "Successfully updated"
          }
        },
        "summary": "Update a vehicle incident",
        "x-gw-resourceType": "VehicleIncident"
      }
    },
    "/graph-schema": {
      "get": {
        "description": "Return the JSON Schema Draft-7 representation of the claim graph schema",
        "operationId": "getClaimGraphSchema",
        "parameters": [
          {
            "description": "Whether to pretty-print the returned schema, making it larger but more human readable. Defaults to false.",
            "in": "query",
            "name": "prettyPrint",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether to include all referenced typelist values inline on properties. Defaults to false.",
            "in": "query",
            "name": "inlineTypelists",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Return the JSON Schema Draft-7 representation of the claim graph schema",
        "x-gw-resourceType": "ClaimGraphSchema"
      }
    },
    "/openapi.json": {
      "get": {
        "description": "Return the Open API 3.0 representation of the schema",
        "operationId": "getOpenApiSchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/prettyPrintSchema"
          },
          {
            "$ref": "#/components/parameters/filterByUser"
          },
          {
            "$ref": "#/components/parameters/enablePolymorphism"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Return the Open API 3.0 representation of the schema",
        "x-gw-resourceType": "ClaimApiOpenApiSchema"
      }
    },
    "/role-constraints": {
      "get": {
        "description": "All contact role constraints list",
        "operationId": "getContactRolesConstraints",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "schema",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRoleConstraintList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "All contact role constraints list",
        "x-gw-childResourceType": "ContactRoleConstraint",
        "x-gw-resourceType": "ContactRoleConstraints"
      }
    },
    "/role-constraints/{contactRoleId}": {
      "get": {
        "description": "The constraints of the given contact role",
        "operationId": "getContactRoleConstraint",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "schema",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRoleConstraintResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "The constraints of the given contact role",
        "x-gw-resourceType": "ContactRoleConstraint"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/contactRoleId"
        }
      ]
    },
    "/search/claims": {
      "post": {
        "description": "Searches for claims that match the specified criteria",
        "operationId": "searchClaims",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimSearchResultList"
                }
              }
            },
            "description": "Returns a list of claims that match the search criteria"
          }
        },
        "summary": "Searches for claims that match the specified criteria",
        "x-gw-childResourceType": "ClaimSearchResult",
        "x-gw-resourceType": "ClaimSearch"
      }
    },
    "/service-requests": {
      "get": {
        "description": "Retrieves a list of assigned service requests",
        "operationId": "getServiceRequests",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequestList"
                }
              }
            },
            "description": "Returns a list of service requests"
          }
        },
        "summary": "Retrieves service requests",
        "x-gw-childResourceType": "ServiceRequest",
        "x-gw-resourceType": "ServiceRequests"
      }
    },
    "/swagger.json": {
      "get": {
        "description": "Returns a Swagger 2.0 schema for this API as json",
        "operationId": "generateDocs",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "summary": "Returns the Swagger schema for this API"
      }
    },
    "/unverified-policies": {
      "get": {
        "description": "Get all unverified policies",
        "operationId": "getUnverifiedPolicies",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get all unverified policies",
        "x-gw-childResourceType": "UnverifiedPolicy",
        "x-gw-resourceType": "UnverifiedPolicies"
      },
      "post": {
        "description": "Create an unverified policy for a new claim; this endpoint cannot be used in isolation, and can only be used as part of a composite request followed by a /claims POST",
        "operationId": "postUnverifiedPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create an unverified policy",
        "x-gw-childResourceType": "UnverifiedPolicy",
        "x-gw-resourceType": "UnverifiedPolicies"
      }
    },
    "/unverified-policies/{policyId}": {
      "get": {
        "description": "Get details of an unverified policy",
        "operationId": "getUnverifiedPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get details of an unverified policy",
        "x-gw-resourceType": "UnverifiedPolicy"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "patch": {
        "description": "Update an unverified policy",
        "operationId": "patchUnverifiedPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update an unverified policy",
        "x-gw-resourceType": "UnverifiedPolicy"
      }
    },
    "/unverified-policies/{policyId}/contacts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "post": {
        "description": "Create a contact on an unverified policy that has not yet been attached to a claim; if this policy has already been attached to a claim, use /claims/{claimId}/contacts POST instead",
        "operationId": "postUnverifiedPolicyContact",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a policy contact",
        "x-gw-childResourceType": "UnverifiedPolicyContact",
        "x-gw-resourceType": "UnverifiedPolicyContacts"
      }
    },
    "/unverified-policies/{policyId}/coverages": {
      "get": {
        "description": "Retrieves a list of policy coverages on an unverified policy",
        "operationId": "getUnverifiedPolicyCoverages",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of policy coverages on an unverified policy",
        "x-gw-childResourceType": "UnverifiedPolicyCoverage",
        "x-gw-resourceType": "UnverifiedPolicyCoverages"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "post": {
        "description": "Create a coverage on an unverified policy",
        "operationId": "postUnverifiedPolicyCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a policy coverage on an unverified policy",
        "x-gw-childResourceType": "UnverifiedPolicyCoverage",
        "x-gw-resourceType": "UnverifiedPolicyCoverages"
      }
    },
    "/unverified-policies/{policyId}/coverages/{coverageId}": {
      "get": {
        "description": "Details of a coverage on an unverified policy",
        "operationId": "getUnverifiedPolicyCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Details of a coverage on an unverified policy",
        "x-gw-resourceType": "UnverifiedPolicyCoverage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/coverageId"
        }
      ],
      "patch": {
        "description": "Update a coverage on an unverified policy",
        "operationId": "patchUnverifiedPolicyCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a coverage on an unverified policy",
        "x-gw-resourceType": "UnverifiedPolicyCoverage"
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units": {
      "get": {
        "description": "Retreives a list of location based risk units",
        "operationId": "getUnverifiedLocationBasedRiskUnits",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of location based risk units",
        "x-gw-childResourceType": "UnverifiedLocationBasedRiskUnit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnits"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "post": {
        "description": "Create a location-based risk unit",
        "operationId": "postUnverifiedLocationBasedRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationBasedRiskUnitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a location-based risk unit",
        "x-gw-childResourceType": "UnverifiedLocationBasedRiskUnit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnits"
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}": {
      "get": {
        "description": "Get a location based risk unit",
        "operationId": "getUnverifiedLocationBasedRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get a location based risk unit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnit"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/locationBasedRiskUnitId"
        }
      ],
      "patch": {
        "description": "Update a location based risk unit",
        "operationId": "patchUnverifiedLocationBasedRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationBasedRiskUnitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBasedRiskUnitResponse"
                }
              }
            },
            "description": "Scucess"
          }
        },
        "summary": "Update a location based risk unit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnit"
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages": {
      "get": {
        "description": "Retrieves a list of coverages on a location based risk unit",
        "operationId": "getUnverifiedLocationBasedRiskUnitCoverages",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of coverages on a location based risk unit",
        "x-gw-childResourceType": "UnverifiedLocationBasedRiskUnitCoverage",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnitCoverages"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/locationBasedRiskUnitId"
        }
      ],
      "post": {
        "description": "Create a coverage on a location based risk unit",
        "operationId": "postUnverifiedLocationBasedRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a coverage on a location based risk unit",
        "x-gw-childResourceType": "UnverifiedLocationBasedRiskUnitCoverage",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnitCoverages"
      }
    },
    "/unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages/{coverageId}": {
      "get": {
        "description": "Details of a coverage on a location based risk unit",
        "operationId": "getUnverifiedLocationBasedRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Details of a coverage on a location based risk unit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnitCoverage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/locationBasedRiskUnitId"
        },
        {
          "$ref": "#/components/parameters/coverageId"
        }
      ],
      "patch": {
        "description": "Update a coverage on a location based risk unit",
        "operationId": "patchUnverifiedLocationBasedRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a coverage on a location based risk unit",
        "x-gw-resourceType": "UnverifiedLocationBasedRiskUnitCoverage"
      }
    },
    "/unverified-policies/{policyId}/locations": {
      "get": {
        "description": "Retreives a list of policy locations",
        "operationId": "getUnverifiedPolicyLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyLocationList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of policy locations",
        "x-gw-childResourceType": "UnverifiedPolicyLocation",
        "x-gw-resourceType": "UnverifiedPolicyLocations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "post": {
        "description": "Create a policy location on an unverified policy",
        "operationId": "postUnverifiedPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyLocationResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a policy location",
        "x-gw-childResourceType": "UnverifiedPolicyLocation",
        "x-gw-resourceType": "UnverifiedPolicyLocations"
      }
    },
    "/unverified-policies/{policyId}/locations/{locationId}": {
      "get": {
        "description": "Details of a location on a policy",
        "operationId": "getUnverifiedPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyLocationResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Details of a location on a policy",
        "x-gw-resourceType": "UnverifiedPolicyLocation"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        }
      ],
      "patch": {
        "description": "Update a location on a policy",
        "operationId": "patchUnverifiedPolicyLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyLocationResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a location on a policy",
        "x-gw-resourceType": "UnverifiedPolicyLocation"
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units": {
      "get": {
        "description": "Retreives a list of vehicle risk units",
        "operationId": "getUnverifiedVehicleRiskUnits",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of vehicle risk units",
        "x-gw-childResourceType": "UnverifiedVehicleRiskUnit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnits"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        }
      ],
      "post": {
        "description": "Create a vehicle risk unit",
        "operationId": "postUnverifiedVehicleRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleRiskUnitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a vehicle risk unit",
        "x-gw-childResourceType": "UnverifiedVehicleRiskUnit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnits"
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}": {
      "get": {
        "description": "Get a vehicle risk unit",
        "operationId": "getUnverifiedVehicleRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get a vehicle risk unit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnit"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/vehicleRiskUnitId"
        }
      ],
      "patch": {
        "description": "Update a vehicle risk unit",
        "operationId": "patchUnverifiedVehicleRiskUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleRiskUnitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleRiskUnitResponse"
                }
              }
            },
            "description": "Scucess"
          }
        },
        "summary": "Update a vehicle risk unit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnit"
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages": {
      "get": {
        "description": "Retrieves a list of coverages on a vehicle risk unit",
        "operationId": "getUnverifiedVehicleRiskUnitCoverages",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageOffset"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageList"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Retrieves a list of coverages on a vehicle risk unit",
        "x-gw-childResourceType": "UnverifiedVehicleRiskUnitCoverage",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnitCoverages"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/vehicleRiskUnitId"
        }
      ],
      "post": {
        "description": "Create a coverage on a vehicle risk unit",
        "operationId": "postUnverifiedVehicleRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Successful creation"
          }
        },
        "summary": "Create a coverage on a vehicle risk unit",
        "x-gw-childResourceType": "UnverifiedVehicleRiskUnitCoverage",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnitCoverages"
      }
    },
    "/unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages/{coverageId}": {
      "get": {
        "description": "Details of a coverage on a vehicle risk unit",
        "operationId": "getUnverifiedVehicleRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/includeTotal"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Details of a coverage on a vehicle risk unit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnitCoverage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/policyId"
        },
        {
          "$ref": "#/components/parameters/vehicleRiskUnitId"
        },
        {
          "$ref": "#/components/parameters/coverageId"
        }
      ],
      "patch": {
        "description": "Update a coverage on a vehicle risk unit",
        "operationId": "patchUnverifiedVehicleRiskUnitCoverage",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnverifiedPolicyCoverageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnverifiedPolicyCoverageResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update a coverage on a vehicle risk unit",
        "x-gw-resourceType": "UnverifiedVehicleRiskUnitCoverage"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://cc-newercbc4-jutro.jutroapp.mint-1.us-east-1.guidewire.net:443/rest/claim/v1"
    }
  ]
}